{"version":3,"sources":["graph/Graph.js","tags/constants.js","tags/AvailableTags.js","request.js","gist/constants.js","gist/Gist.js","constants.js","graph/migrator.js","validator.js","graph/GraphView.js","search/Search.js","utils/common.js","ProjectStore.js","graph/TagLabels.js","utils/debounce.js","components/Button.js","components/Chip.js","tags/TagEdit.js","tags/TagPopover.js","tags/Tags.js","panels/GraphEditPanel.js","panels/Save.js","panels/SavePanel.js","gist/gistSelection.js","SettingsPanel.js","search/SearchResults.js","search/SearchPanel.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["stripTempData","key","value","length","map","tag","__id","startsWith","Graph","savedGraphState","Object","classCallCheck","this","_nodeMap","_linkMap","_nextNodeId","_nextLinkId","nodeId","Number","linkId","refillMapIds","__links","link","sourceId","targetId","source","target","refillLinks","str","JSON","stringify","parse","nodeName","newNode","name","tags","x","y","vx","vy","node","findNode","keys","Error","type","arguments","undefined","oldLinks","oldLinkKey","oldLink","newLink","findLink","result","concat","values","COLORS","INITIAL_TAGS_DATA","_tagMap","1","color","2","3","4","_nextTagId","AvailableTags","savedTagState","tagId","newTag","getNextColor","findTag","usedTagColors","filter","includes","Math","floor","random","request","method","path","headers","data","Promise","resolve","reject","xhr","XMLHttpRequest","onreadystatechange","readyState","status","responseText","open","forEach","header","setRequestHeader","send","API_URL","GRAPH_STATE_FILENAME","Gist","token","gistId","_auth","Authorization","_gistId","_files","_description","_public","fileName","fileData","isPublic","description","setDescription","dto","wrapNewFileData","public","response","responseObj","console","error","_context","t0","message","id","_context2","files","filename","content","GRAPH_FORCE_STRENGTH_DEFAULT","GRAPH_FORCE_DISTANCE_DEFAULT","INITIAL_GRAPH_DATA","applyMigrations","graph","meta","forceStrength","forceDistance","version","replaceRootSections","validateDataObject","requiredProps","optionalProps","constructor","requiredKeys","i","property","hasOwnProperty","optionalKeys","FORCE","Search","_graph","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_this","resultNodeIds","getNodeArray","arr1","arr2","isIntersect","excludedTags","unfullMatchArr","fullMatchArr","ifFullyIntersect","includedTags","sourceStringsArr","searchString","lowerSearchString","toLowerCase","isCaseInsensitiveMatch","searchText","_toggleTagMaps","targetMapName","oppositeMapName","observable","ProjectStore","ProjectStore_class","githubToken","ProjectStore_descriptor","graphData","ProjectStore_descriptor2","ProjectStore_descriptor3","ProjectStore_descriptor4","_descriptor5","projectGist","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","createClass","read","then","gistInfo","_initializeGraph","_this2","stateForSave","_prepareStateForSave","stateJson","create","errorMsg","savedState","_this3","savedGraphStateJson","projectName","err","notie","alert","text","availableTags","search","isLoaded","optionalGraphData","optionalTagsData","getImmutableCopy","appVersion","_this4","resultJson","update","savedChangeStamp","changeStamp","targetLinkChoiceInProgress","get","_projectName","set","v","document","title","_activeNode","__focused","applyDecoratedDescriptor","prototype","configurable","enumerable","writable","initializer","action","getOwnPropertyDescriptor","TagLabels","props","idx","react_default","a","createElement","width","height","rx","ry","style","fill","Component","nsp","window","innerWidth","innerHeight","updateNode","selection","attr","d","max","min","updateLink","updateGraph","selectAll","call","dragStarted","d3","active","force","alphaTarget","restart","fx","fy","dragging","dragEnded","enterNode","select","enterLink","initForce","nodes","links","forceOptions","strength","distance","iterations","initDrag","on","initTick","that","d3Graph","ReactDOM","findDOMNode","GraphView","inject","observer","reInitForce","getLinkArray","assertThisInitialized","reInitForceDebounced","fn","delay","timerId","context","args","clearTimeout","setTimeout","apply","debounce","_this$props$projectSt","projectStore","prevProps","_this$props$projectSt2","activeNode","GraphView_Node","focused","GraphView_Link","className","viewBox","refX","refY","markerWidth","markerHeight","orient","markerUnits","Link","d3Link","datum","markerEnd","Node","processFocus","d3NodeSelection","isFocused","classed","handleClick","e","sourceNodeId","targetNodeId","currentTarget","dataset","addLink","warn","d3Node","_this$props","_this$props$data","onClick","data-node-id","TagLabels_TagLabels","StyledButton","styled","Button","margin","CustomButton","_ref","_ref$size","size","_ref$variant","variant","children","rest","objectWithoutProperties","assign","noop","Chip","isActive","_ref$toggle","toggle","Chip_Chip","label","backgroundColor","borderColor","renderColor","TagEdit","onNameChange","onColorChange","onEditDone","onDelete","onDeleteForce","errorMessage","IconButton","Backspace_default","TextField","onChange","renderNameInput","InputLabel","shrink","htmlFor","Select","renderValue","inputProps","MenuItem","renderColorSelect","components_Button","TagPopover","state","editingTag","deletionErrorMessage","renderAvailableTags","getTagArray","activeTags","components_Chip_Chip","toggleTag","handleEditTag","Edit_default","fontSize","deleteTag","tagUsageCount","setState","delete","handleEditTagDone","deleteTagForce","index","indexOf","splice","push","handleCreateNewTag","add","targetTag","anchorEl","handlePopoverClose","TagEdit_TagEdit","newName","newColor","Popover","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Tags","renderActiveTags","handleActivateTagPopover","AddCircle_default","TagPopover_TagPopover","PureComponent","GraphEditPanel","linksHided","focusNodenameInput","nodeNameRef","focus","renderActiveNodeInfo","descriptionContent","Fragment","fullWidth","multiline","handleChangeNodeName","inputRef","ref","handleChangeDescription","handleCloseEditPanel","handleAbortNewLinkCreation","targetNode","renderLinks","showLinks","items","_loop","sourceNode","ListItem","button","ListItemText","ListItemSecondaryAction","handleDeleteLink","Delete_default","List","subheader","dense","renderDeleteNodeButton","handleDeleteNode","renderNewLinkComponent","handleNewLinkTargetSelection","renderNewChildButton","handleNewChildCreation","deleteNode","deleteLink","createNewNode","addNode","currentNodeId","Close_default","Tags_Tags","prevState","Save","componentDidMount","addEventListener","handleLeavePage","componentWillUnmount","removeEventListener","handleSave","saveProject","event","warningText","returnValue","SavePanel","handleChangeProjectName","Tooltip","placement","TransitionComponent","Zoom","InfoOutlined_default","placeholder","Save_Save","LOCAL_STORAGE_KEY","requestToken","cb","localStorage","getItem","fieldName","input","inputResult","errMsg","notieInput","setItem","_callee","userGists","regenerator_default","wrap","prev","next","getAllUserGists","sent","abrupt","gist","stop","_callee2","GistSelection","handleSelect","loadProject","handleNewGist","newProject","getSuitableGists","gists","gistElems","SettingsPanel","Slider","defaultValue","c","SearchResults","handleResultNodeClick","resultNodes","resultNode","Divider","light","SearchPanel","renderTagPreferences","Checkbox","checked","icon","Done_default","checkedIcon","toggleTagInclusion","Clear_default","toggleTagExclusion","handleChangeSearchText","query","SearchResults_SearchResults","AppVesion","App","_projectStore","src_graph_GraphView","GraphEditPanel_GraphEditPanel","SavePanel_SavePanel","SettingsPanel_SettingsPanel","SearchPanel_SearchPanel","gistSelection_GistSelection","location","hostname","match","stores","initSentry","beforeSend","getAfterErrorSnapshot","release","dsn","render","mobx_react_module","src_App_0","querySelector","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.94fc587f.chunk.js","sourcesContent":["/**\n * \"_data\" - is a private data\n * \"__data\" - is a temporary data\n */\n\nfunction refillMapIds(savedGraphState) {\n  for (let nodeId in savedGraphState._nodeMap) {\n    let node = savedGraphState._nodeMap[nodeId];\n    node.__id = Number(nodeId);\n  }\n  for (let linkId in savedGraphState._linkMap) {\n    let link = savedGraphState._linkMap[linkId];\n    link.__id = Number(linkId);\n  }\n}\n\nfunction refillLinks(savedGraphState) {\n  for (let nodeId in savedGraphState._nodeMap) {\n    let node = savedGraphState._nodeMap[nodeId];\n    node.__links = {};\n  }\n  for (let linkId in savedGraphState._linkMap) {\n    let link = savedGraphState._linkMap[linkId];\n\n    let sourceNode = savedGraphState._nodeMap[link.sourceId];\n    sourceNode.__links[linkId] = link;\n    let targetNode = savedGraphState._nodeMap[link.targetId];\n    targetNode.__links[linkId] = link;\n\n    // for d3 force links // TODO: maybe extern this code?\n    link.source = link.sourceId;\n    link.target = link.targetId;\n  }\n}\n\nfunction stripTempData(key, value) {\n  if (key === 'tags') {\n    // remove empty tag arrays\n    if (value.length === 0) return void 0;\n\n    return value.map(tag => tag.__id); // map tag links to ids\n  }\n\n  // remove temp data\n  if (key.startsWith('__')) return void 0;\n\n  // remove d3 temp data\n  if (key === 'x') return void 0;\n  if (key === 'y') return void 0;\n  if (key === 'vx') return void 0;\n  if (key === 'vy') return void 0;\n  if (key === 'fx') return void 0;\n  if (key === 'fy') return void 0;\n  if (key === 'index') return void 0;\n  if (key === 'source') return void 0;\n  if (key === 'target') return void 0;\n\n  return value;\n}\n\nexport default class Graph {\n  _nodeMap = {};\n  _linkMap = {};\n  _nextNodeId = null;\n  _nextLinkId = null;\n\n  constructor(savedGraphState) {\n    refillMapIds(savedGraphState);\n    refillLinks(savedGraphState);\n\n    this._nodeMap = savedGraphState._nodeMap;\n    this._linkMap = savedGraphState._linkMap;\n    this._nextNodeId = savedGraphState._nextNodeId;\n    this._nextLinkId = savedGraphState._nextLinkId;\n  }\n\n  getImmutableCopy() {\n    const str = JSON.stringify(\n      {\n        _nodeMap: this._nodeMap,\n        _linkMap: this._linkMap,\n        _nextNodeId: this._nextNodeId,\n        _nextLinkId: this._nextLinkId\n      },\n      stripTempData,\n      2\n    );\n    return JSON.parse(str);\n  }\n\n  addNode(nodeName) {\n    let newNode = {\n      __id: this._nextNodeId,\n      name: nodeName,\n      tags: [],\n      __links: {},\n      // i cannot find where each node datum get vx, vy, x, y from d3js\n      // TODO: u can try to find\n      // so i create it myself here:\n      x: 0,\n      y: 0,\n      vx: 0,\n      vy: 0\n    };\n    this._nodeMap[this._nextNodeId] = newNode;\n    this._nextNodeId++;\n    return newNode;\n  }\n\n  deleteNode(node) {\n    node = this.findNode(node);\n    if (Object.keys(node.__links).length > 0) {\n      throw new Error('Cannot delete node, when node has links');\n    }\n\n    delete this._nodeMap[node.__id];\n  }\n\n  addLink(sourceId, targetId, type = 'CHILD') {\n    if (sourceId === targetId)\n      throw new Error('Cannot create link with same sourceId and targetId');\n\n    let oldLinks = this._nodeMap[sourceId].__links;\n    for (let oldLinkKey in oldLinks) {\n      const oldLink = oldLinks[oldLinkKey];\n      if (oldLink.sourceId === sourceId && oldLink.targetId === targetId) {\n        throw new Error('Cannot create duplicate links');\n      }\n    }\n\n    let newLink = {\n      __id: this._nextLinkId,\n      type,\n      sourceId,\n      targetId,\n      // for d3 force links // TODO: maybe extern this code?\n      source: sourceId,\n      target: targetId\n    };\n    this._linkMap[this._nextLinkId] = newLink;\n    this._nodeMap[sourceId].__links[this._nextLinkId] = newLink;\n    this._nodeMap[targetId].__links[this._nextLinkId] = newLink;\n    this._nextLinkId++;\n    return newLink;\n  }\n\n  deleteLink(link) {\n    link = this.findLink(link);\n    delete this._linkMap[link.__id];\n\n    let sourceNode = this._nodeMap[link.sourceId];\n    delete sourceNode.__links[link.__id];\n    let targetNode = this._nodeMap[link.targetId];\n    delete targetNode.__links[link.__id];\n  }\n\n  /**\n   * node - nodeId or node\n   * result - node\n   */\n  findNode(node) {\n    let result;\n    if (typeof node === 'number') {\n      result = this._nodeMap[node];\n    } else {\n      result = node;\n    }\n\n    if (!result) throw new Error(`Cannot find node ${node}`);\n\n    return result;\n  }\n\n  /**\n   * link - linkId or link\n   * result - link\n   */\n  findLink(link) {\n    let result;\n    if (typeof link === 'number') {\n      result = this._linkMap[link];\n    } else {\n      result = link;\n    }\n\n    if (!result) throw new Error(`Cannot find link ${link}`);\n\n    return result;\n  }\n\n  getNodeArray() {\n    if (!this._nodeMap) return [];\n\n    return Object.values(this._nodeMap);\n  }\n\n  getLinkArray() {\n    if (!this._linkMap) return [];\n\n    return Object.values(this._linkMap);\n  }\n}\n","export const COLORS = [\n  '#eb5a46',\n  '#61bd4f',\n  '#1b79bf',\n  '#f2d601',\n  '#fb9f1b',\n  '#c377e0',\n  '#32c2e0',\n  '#50e897',\n  '#fa78cb',\n  '#344563',\n  '#b3bac4'\n];\n\nexport const INITIAL_TAGS_DATA = {\n  _tagMap: {\n    1: { color: COLORS[0], name: '' },\n    2: { color: COLORS[1], name: '' },\n    3: { color: COLORS[2], name: '' },\n    4: { color: COLORS[3], name: '' }\n  },\n  _nextTagId: 5\n};\n","import { COLORS } from './constants';\n\nfunction refillMapIds(savedTagState) {\n  for (let tagId in savedTagState._tagMap) {\n    let tag = savedTagState._tagMap[tagId];\n    tag.__id = Number(tagId);\n  }\n}\n\nfunction stripTempData(key, value) {\n  // remove temp data\n  if (key.startsWith('__')) return void 0;\n\n  return value;\n}\n\nexport default class AvailableTags {\n  _tagMap = {};\n  _nextTagId = null;\n\n  constructor(savedTagState) {\n    refillMapIds(savedTagState);\n    this._tagMap = savedTagState._tagMap;\n    this._nextTagId = savedTagState._nextTagId;\n  }\n\n  getImmutableCopy() {\n    const str = JSON.stringify(\n      {\n        _tagMap: this._tagMap,\n        _nextTagId: this._nextTagId\n      },\n      stripTempData,\n      2\n    );\n    return JSON.parse(str);\n  }\n\n  add(color = this.getNextColor(), tagName = 'New tag') {\n    let newTag = {\n      color,\n      name: tagName,\n      __id: this._nextTagId\n    };\n    this._tagMap[this._nextTagId] = newTag;\n    this._nextTagId++;\n    return newTag;\n  }\n\n  delete(tag) {\n    tag = this.findTag(tag);\n    delete this._tagMap[tag.__id];\n  }\n\n  /**\n   * tag - tagId or tag\n   * result - tag\n   */\n  findTag(tag) {\n    let result;\n    if (typeof tag === 'number') {\n      result = this._tagMap[tag];\n    } else {\n      result = tag;\n    }\n\n    if (!result) throw new Error(`Cannot find tag ${tag}`);\n\n    return result;\n  }\n\n  getNextColor() {\n    const usedTagColors = Object.values(this._tagMap).map(tag => tag.color);\n    const newColors = COLORS.filter(color => !usedTagColors.includes(color));\n    return (\n      newColors[0] ||\n      usedTagColors[Math.floor(Math.random() * usedTagColors.length)]\n    );\n  }\n\n  getTagArray() {\n    if (!this._tagMap) return [];\n\n    return Object.values(this._tagMap);\n  }\n}\n","export default function request(method, path, headers, data) {\n  return new Promise((resolve, reject) => {\n    let xhr = new XMLHttpRequest();\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200 || xhr.status === 201) {\n          resolve(xhr.responseText);\n        } else {\n          reject(new Error(`response failed, status: ${xhr.status}`));\n        }\n      }\n    };\n    xhr.open(method, path, true);\n    if (headers) {\n      Object.keys(headers).forEach(header => {\n        xhr.setRequestHeader(header, headers[header]);\n      });\n    }\n    if (!data) {\n      xhr.send();\n    } else {\n      xhr.send(JSON.stringify(data));\n    }\n  });\n}\n","export const API_URL = 'https://api.github.com/';\nexport const GRAPH_STATE_FILENAME = 'graphState.json';\n","import request from '../request';\nimport { API_URL } from './constants';\n\nexport default class Gist {\n  constructor(token, gistId) {\n    if (!token) throw new Error('Token not passed!');\n    this._auth = { Authorization: `token ${token}` };\n    this._gistId = gistId;\n\n    this._files = null;\n    this._description = '';\n    this._public = null;\n  }\n\n  async create(fileName, fileData, isPublic, description) {\n    this.setDescription(description);\n    const dto = this.wrapNewFileData(fileName, fileData);\n    this._public = isPublic;\n    dto.public = isPublic;\n    let response = await request('POST', `${API_URL}gists`, this._auth, dto);\n    let responseObj;\n    try {\n      responseObj = JSON.parse(response);\n    } catch (e) {\n      console.error(`Retrieved json from gist failed to parse: ${e.message}`);\n      throw e;\n    }\n\n    if (!responseObj) throw new Error('Data from response not available');\n\n    this._gistId = responseObj.id;\n    return responseObj;\n  }\n\n  setDescription(description) {\n    this._description = description;\n  }\n\n  async update(fileName, fileData) {\n    const dto = this.wrapNewFileData(fileName, fileData);\n    let response = await request(\n      'PATCH',\n      `${API_URL}gists/${this._gistId}`,\n      this._auth,\n      dto\n    );\n    let responseObj;\n    try {\n      responseObj = JSON.parse(response);\n    } catch (e) {\n      console.error(`Retrieved json from gist failed to parse: ${e.message}`);\n      throw e;\n    }\n\n    if (responseObj.id !== this._gistId)\n      throw new Error(\n        'Gist id from respons does not match the current Gist id'\n      );\n\n    return responseObj;\n  }\n\n  async read() {\n    let response = await request(\n      'GET',\n      `${API_URL}gists/${this._gistId}`,\n      this._auth,\n      null\n    );\n    let responseObj;\n    try {\n      responseObj = JSON.parse(response);\n    } catch (e) {\n      console.error(`Retrieved json from gist failed to parse`);\n      throw e;\n    }\n\n    if (!responseObj) throw new Error('Data from response not available');\n\n    this._description = responseObj.description;\n    this._files = responseObj.files;\n    this._public = responseObj.public;\n\n    return responseObj;\n  }\n\n  wrapNewFileData(fileName, fileData) {\n    if (!this._files) this._files = {};\n\n    this._files[fileName] = { filename: fileName, content: fileData };\n    return {\n      description: this._description,\n      files: this._files\n    };\n  }\n}\n","export const GRAPH_FORCE_STRENGTH_DEFAULT = -300;\nexport const GRAPH_FORCE_STRENGTH_MIN = -550;\nexport const GRAPH_FORCE_STRENGTH_MAX = -50;\n\nexport const GRAPH_FORCE_DISTANCE_DEFAULT = 130;\nexport const GRAPH_FORCE_DISTANCE_MIN = 50;\nexport const GRAPH_FORCE_DISTANCE_MAX = 210;\n\nexport const INITIAL_GRAPH_DATA = {\n  _nodeMap: {\n    1: { name: 'Initial node' },\n    2: { name: 'Linked node' }\n  },\n  _linkMap: {\n    1: { type: 'CHILD', sourceId: 1, targetId: 2 }\n  },\n  _nextNodeId: 3,\n  _nextLinkId: 2\n};\n","import { version } from '../../package.json';\nimport {\n  GRAPH_FORCE_STRENGTH_DEFAULT,\n  GRAPH_FORCE_DISTANCE_DEFAULT\n} from '../constants';\nimport { INITIAL_TAGS_DATA } from '../tags/constants';\n\nexport default function applyMigrations(savedGraphState) {\n  replaceRootSections(savedGraphState);\n}\n\nfunction replaceRootSections(savedGraphState) {\n  if (!savedGraphState.graph) {\n    savedGraphState.graph = {\n      _nodeMap: savedGraphState._nodeMap,\n      _linkMap: savedGraphState._linkMap,\n      _nextNodeId: savedGraphState._nextNodeId,\n      _nextLinkId: savedGraphState._nextLinkId\n    };\n    delete savedGraphState._nodeMap;\n    delete savedGraphState._linkMap;\n    delete savedGraphState._nextNodeId;\n    delete savedGraphState._nextLinkId;\n  }\n  if (!savedGraphState.meta) {\n    savedGraphState.meta = {\n      forceStrength: GRAPH_FORCE_STRENGTH_DEFAULT,\n      forceDistance: GRAPH_FORCE_DISTANCE_DEFAULT,\n      version\n    };\n  }\n  if (!savedGraphState.tags) {\n    savedGraphState.tags = INITIAL_TAGS_DATA;\n  }\n}\n","export default function validateSavedState(savedState) {\n  if (\n    !validateDataObject(savedState.graph, {\n      _nodeMap: 'object',\n      _linkMap: 'object',\n      _nextNodeId: 'number',\n      _nextLinkId: 'number'\n    })\n  )\n    return false;\n\n  if (\n    !validateDataObject(savedState.tags, {\n      _tagMap: 'object',\n      _nextTagId: 'number'\n    })\n  )\n    return false;\n\n  if (\n    !validateDataObject(savedState.meta, {\n      forceStrength: 'number',\n      forceDistance: 'number',\n      version: 'string'\n    })\n  )\n    return false;\n\n  return true;\n}\n\nfunction validateDataObject(target, requiredProps, optionalProps) {\n  if (target.constructor !== Object) return false;\n\n  const requiredKeys = Object.keys(requiredProps);\n  for (let i = 0; i < requiredKeys.length; i++) {\n    const property = requiredKeys[i];\n    if (!target.hasOwnProperty(property)) return false;\n\n    if (requiredProps[property] === 'object') {\n      if (target[property].constructor !== Object) return false;\n    } else {\n      if (typeof target[property] !== requiredProps[property]) return false;\n    }\n  }\n\n  if (optionalProps) {\n    const optionalKeys = Object.keys(optionalProps);\n    for (let i = 0; i < optionalKeys.length; i++) {\n      const property = optionalKeys[i];\n      if (target.hasOwnProperty(property)) {\n        if (typeof target[property] !== optionalProps[property]) return false;\n      }\n    }\n  }\n\n  return true;\n}\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { inject, observer } from 'mobx-react';\nimport * as d3 from 'd3';\nimport { TagLabels } from './TagLabels';\nimport './GraphView.css';\nimport debounce from '../utils/debounce';\n\n// Functions and variables\nvar FORCE;\nFORCE = (function(nsp) {\n  var width = window.innerWidth,\n    height = window.innerHeight,\n    // TODO: maybe need d3.forceX and d3.forceY instead of d3.forceCenter\n    initForce = (nodes, links, forceOptions) => {\n      const { strength, distance } = forceOptions;\n      nsp.force = d3\n        .forceSimulation(nodes)\n        .force('charge', d3.forceManyBody().strength(strength))\n        .force(\n          'link',\n          d3\n            .forceLink(links)\n            .id(d => d.__id)\n            .distance(distance)\n        )\n        .force(\n          'center',\n          d3\n            .forceCenter()\n            .x(nsp.width / 2)\n            .y(nsp.height / 2)\n        )\n        .force('collide', d3.forceCollide([5]).iterations([5]));\n    },\n    enterNode = selection => {\n      selection\n        .select('circle')\n        .attr('r', 25)\n        .style('fill', 'tomato')\n        .style('stroke', 'bisque')\n        .style('stroke-width', '3px');\n\n      selection\n        .select('text')\n        .style('fill', 'honeydew')\n        .style('font-weight', '600')\n        .style('text-transform', 'uppercase')\n        .style('text-anchor', 'middle')\n        .style('alignment-baseline', 'middle')\n        .style('font-size', '10px')\n        .style('font-family', 'cursive');\n    },\n    updateNode = selection => {\n      selection\n        .attr('transform', d => 'translate(' + d.x + ',' + d.y + ')')\n        .attr('cx', d => (d.x = Math.max(30, Math.min(width - 30, d.x))))\n        .attr('cy', d => (d.y = Math.max(30, Math.min(height - 30, d.y))));\n    },\n    enterLink = selection => {\n      selection.attr('stroke-width', 3).attr('stroke', 'bisque');\n    },\n    updateLink = selection => {\n      selection\n        .attr('x1', d => d.source.x)\n        .attr('y1', d => d.source.y)\n        .attr('x2', d => d.target.x)\n        .attr('y2', d => d.target.y);\n    },\n    updateGraph = selection => {\n      selection.selectAll('.node').call(updateNode);\n      selection.selectAll('.link').call(updateLink);\n    },\n    dragStarted = d => {\n      if (!d3.event.active) nsp.force.alphaTarget(0.3).restart();\n\n      d.fx = d.x;\n      d.fy = d.y;\n    },\n    dragging = d => {\n      d.fx = d3.event.x;\n      d.fy = d3.event.y;\n    },\n    dragEnded = d => {\n      if (!d3.event.active) nsp.force.alphaTarget(0);\n\n      d.fx = null;\n      d.fy = null;\n    },\n    initDrag = () =>\n      d3.selectAll('g.node').call(\n        d3\n          .drag()\n          .on('start', dragStarted)\n          .on('drag', dragging)\n          .on('end', dragEnded)\n      ),\n    initTick = that => {\n      that.d3Graph = d3.select(ReactDOM.findDOMNode(that));\n      nsp.force.on('tick', () => {\n        that.d3Graph.call(updateGraph);\n      });\n    };\n\n  nsp.width = width;\n  nsp.height = height;\n  nsp.enterNode = enterNode;\n  nsp.updateNode = updateNode;\n  nsp.enterLink = enterLink;\n  nsp.updateLink = updateLink;\n  nsp.updateGraph = updateGraph;\n  nsp.initForce = initForce;\n  nsp.dragStarted = dragStarted;\n  nsp.dragging = dragging;\n  nsp.dragEnded = dragEnded;\n  nsp.initDrag = initDrag;\n  nsp.initTick = initTick;\n\n  return nsp;\n})(FORCE || {});\n\n@inject('projectStore')\n@observer\nclass GraphView extends Component {\n  componentDidMount() {\n    const {\n      projectStore: { graphData, forceStrength, forceDistance }\n    } = this.props;\n    this.reInitForce(graphData, {\n      strength: forceStrength,\n      distance: forceDistance\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const { graphData } = this.props.projectStore;\n    if (\n      prevProps.changeStamp !== this.props.changeStamp ||\n      prevProps.forceStrength !== this.props.forceStrength ||\n      prevProps.forceDistance !== this.props.forceDistance\n    ) {\n      this.reInitForceDebounced(graphData, {\n        strength: this.props.forceStrength,\n        distance: this.props.forceDistance\n      });\n    }\n  }\n\n  reInitForce = (graphData, forceOptions) => {\n    FORCE.initForce(\n      graphData.getNodeArray(),\n      graphData.getLinkArray(),\n      forceOptions\n    );\n    FORCE.initTick(this);\n    FORCE.initDrag();\n  };\n\n  reInitForceDebounced = debounce(this.reInitForce, 100);\n\n  render() {\n    // activeNode observe for highlightning active node\n    // eslint-disable-next-line no-unused-vars\n    const { graphData, activeNode } = this.props.projectStore;\n    let nodes = graphData.getNodeArray().map(node => {\n      return <Node key={node.__id} data={node} focused={node.__focused} />;\n    });\n    let links = graphData.getLinkArray().map(link => {\n      return <Link key={link.__id} data={link} />;\n    });\n    return (\n      <div className=\"graph_container\">\n        <svg className=\"graph\" width={FORCE.width} height={FORCE.height}>\n          <defs>\n            <marker\n              id=\"arrow\"\n              viewBox=\"0 0 10 10\"\n              refX=\"26\"\n              refY=\"5\"\n              markerWidth=\"5\"\n              markerHeight=\"5\"\n              orient=\"auto-start-reverse\"\n              markerUnits=\"strokeWidth\"\n            >\n              <path d=\"M 0 0 L 10 5 L 0 10 z\" />\n            </marker>\n          </defs>\n          <g>{links}</g>\n          <g>{nodes}</g>\n        </svg>\n      </div>\n    );\n  }\n}\n\nclass Link extends Component {\n  componentDidMount() {\n    this.d3Link = d3\n      .select(ReactDOM.findDOMNode(this))\n      .datum(this.props.data)\n      .call(FORCE.enterLink);\n  }\n\n  componentDidUpdate() {\n    this.d3Link.datum(this.props.data).call(FORCE.updateLink);\n  }\n\n  render() {\n    return <line className=\"link\" markerEnd=\"url('#arrow')\" />;\n  }\n}\n\n@inject('projectStore')\n@observer\nclass Node extends Component {\n  componentDidMount() {\n    this.d3Node = d3\n      .select(ReactDOM.findDOMNode(this))\n      .datum(this.props.data)\n      .call(FORCE.enterNode)\n      .call(this.processFocus, this.props.focused);\n  }\n\n  componentDidUpdate() {\n    this.d3Node\n      .datum(this.props.data)\n      .call(FORCE.updateNode)\n      .call(this.processFocus, this.props.focused);\n  }\n\n  processFocus = (d3NodeSelection, isFocused) => {\n    d3NodeSelection.select('circle').classed('focused', isFocused);\n  };\n\n  render() {\n    let {\n      // eslint-disable-next-line no-unused-vars\n      projectStore: { changeStamp },\n      data: { __id, tags, name }\n    } = this.props;\n    return (\n      <g className=\"node\" onClick={this.handleClick} data-node-id={__id}>\n        <circle />\n        <text>{name}</text>\n        <TagLabels tags={tags} />\n      </g>\n    );\n  }\n\n  handleClick = e => {\n    const { projectStore } = this.props;\n    if (!projectStore.targetLinkChoiceInProgress) {\n      projectStore.activeNode = Number(e.currentTarget.dataset.nodeId);\n      return;\n    }\n\n    // handle new link creation\n    const sourceNodeId = projectStore.activeNode;\n    const targetNodeId = Number(e.currentTarget.dataset.nodeId);\n    try {\n      projectStore.graphData.addLink(sourceNodeId, targetNodeId, 'CHILD');\n    } catch (e) {\n      console.warn(e.message); // TODO: warn with alertify\n      return;\n    }\n    projectStore.targetLinkChoiceInProgress = false;\n    projectStore.changeStamp++;\n  };\n}\n\nexport default GraphView;\n","import {\n  isIntersect,\n  ifFullyIntersect,\n  isCaseInsensitiveMatch\n} from '../utils/common';\nimport { observable } from 'mobx';\n\nclass Search {\n  _graph = null;\n  @observable searchText = '';\n  @observable includedTags = {};\n  @observable excludedTags = {};\n  @observable resultNodeIds = [];\n\n  constructor(graph) {\n    this._graph = graph;\n  }\n\n  query() {\n    this.resultNodeIds = this._graph\n      .getNodeArray()\n      .filter(\n        node =>\n          !isIntersect(\n            node.tags.map(tag => tag.__id),\n            Object.values(this.excludedTags).map(tag => tag.__id)\n          )\n      )\n      .filter(node =>\n        ifFullyIntersect(\n          node.tags.map(tag => tag.__id),\n          Object.values(this.includedTags).map(tag => tag.__id)\n        )\n      )\n      .filter(node =>\n        isCaseInsensitiveMatch([node.name, node.description], this.searchText)\n      )\n      .map(node => node.__id);\n  }\n\n  toggleTagInclusion(tag) {\n    this._toggleTagMaps(tag, 'includedTags', 'excludedTags');\n  }\n\n  toggleTagExclusion(tag) {\n    this._toggleTagMaps(tag, 'excludedTags', 'includedTags');\n  }\n\n  _toggleTagMaps(tag, targetMapName, oppositeMapName) {\n    const tagId = tag.__id;\n    if (this[targetMapName][tagId]) {\n      delete this[targetMapName][tagId];\n      return;\n    }\n\n    if (this[oppositeMapName][tagId]) {\n      delete this[oppositeMapName][tagId];\n    }\n\n    this[targetMapName][tagId] = tag;\n  }\n}\n\nexport { Search };\n","export function isIntersect(arr1 = [], arr2 = []) {\n  return arr1.filter(value => arr2.includes(value)).length > 0;\n}\n\nexport function ifFullyIntersect(unfullMatchArr = [], fullMatchArr = []) {\n  if (fullMatchArr.length === 0) return true;\n\n  return (\n    unfullMatchArr.filter(value => fullMatchArr.includes(value)).length ===\n    fullMatchArr.length\n  );\n}\n\nexport function isCaseInsensitiveMatch(sourceStringsArr, searchString) {\n  const lowerSearchString = searchString.toLowerCase();\n  return (\n    sourceStringsArr\n      .map(str => (str ? str.toLowerCase() : ''))\n      .filter(str => str.includes(lowerSearchString)).length > 0\n  );\n}\n","import { observable, action } from 'mobx';\nimport { version as appVersion } from '../package.json';\nimport Graph from './graph/Graph';\nimport AvailableTags from './tags/AvailableTags';\nimport { INITIAL_TAGS_DATA } from './tags/constants';\nimport Gist from './gist/Gist';\nimport { GRAPH_STATE_FILENAME } from './gist/constants';\nimport {\n  GRAPH_FORCE_DISTANCE_DEFAULT,\n  GRAPH_FORCE_STRENGTH_DEFAULT,\n  INITIAL_GRAPH_DATA\n} from './constants';\nimport applyMigrations from './graph/migrator';\nimport notie from 'notie';\nimport validateSavedState from './validator';\nimport { Search } from './search/Search';\n\nexport class ProjectStore {\n  githubToken = null;\n  @observable gists = null;\n\n  graphData = null;\n  @observable availableTags = null;\n  @observable search = null;\n  @observable isLoaded = false;\n  @observable _projectName = '';\n  get projectName() {\n    return this._projectName;\n  }\n  set projectName(v) {\n    this._projectName = v;\n    this.projectGist.setDescription(v);\n    document.title = v + ' | Graph editor';\n  }\n\n  get isPublic() {\n    return this.projectGist._public;\n  }\n\n  projectGist = null;\n  @action loadProject(gistId) {\n    this.projectGist = new Gist(this.githubToken, gistId);\n    this.projectGist.read().then(gistInfo => this._initializeGraph(gistInfo));\n  }\n\n  @action newProject() {\n    this.projectGist = new Gist(this.githubToken);\n    const stateForSave = this._prepareStateForSave(\n      INITIAL_GRAPH_DATA,\n      INITIAL_TAGS_DATA\n    );\n    const stateJson = JSON.stringify(stateForSave, null, 2);\n    this.projectGist\n      .create(GRAPH_STATE_FILENAME, stateJson, false, 'New graph')\n      .then(gistInfo => this._initializeGraph(gistInfo));\n  }\n\n  // TODO: decompose initializeGraph on validate / migrate / initialize\n  _initializeGraph(gistInfo) {\n    let savedGraphStateJson = gistInfo.files[GRAPH_STATE_FILENAME].content;\n    const projectName = gistInfo.description;\n    let errorMsg;\n    let savedGraphState;\n    try {\n      savedGraphState = JSON.parse(savedGraphStateJson);\n      applyMigrations(savedGraphState);\n      if (!validateSavedState(savedGraphState)) {\n        errorMsg = `Project format \"${projectName ||\n          'Untitled'}\" has invalid data format`;\n      }\n    } catch (err) {\n      errorMsg = `Project \"${projectName ||\n        'Untitled'}\" failed to parse / migrate / validate`;\n    }\n\n    if (errorMsg) {\n      notie.alert({ type: 'error', text: errorMsg });\n      return;\n    }\n\n    this.projectName = projectName;\n    this.availableTags = new AvailableTags(savedGraphState.tags);\n    this.graphData = new Graph(savedGraphState.graph);\n    // refill tags data to graph nodes\n    this.graphData.getNodeArray().forEach(node => {\n      if (node.tags) {\n        node.tags = node.tags.map(tagId => this.availableTags.findTag(tagId));\n      } else {\n        node.tags = [];\n      }\n    });\n    this.forceStrength = savedGraphState.meta.forceStrength;\n    this.forceDistance = savedGraphState.meta.forceDistance;\n    this.search = new Search(this.graphData);\n    this.isLoaded = true;\n  }\n\n  _prepareStateForSave(optionalGraphData, optionalTagsData) {\n    let graphData = optionalGraphData || this.graphData.getImmutableCopy();\n    let availableTagsData =\n      optionalTagsData || this.availableTags.getImmutableCopy();\n    return {\n      graph: graphData,\n      tags: availableTagsData,\n      meta: {\n        forceStrength: this.forceStrength,\n        forceDistance: this.forceDistance,\n        version: appVersion\n      }\n    };\n  }\n\n  @action saveProject() {\n    let result = this._prepareStateForSave();\n    const resultJson = JSON.stringify(result, null, 2);\n    this.projectGist\n      .update(GRAPH_STATE_FILENAME, resultJson)\n      .then(responseObj => {\n        this.savedChangeStamp = this.changeStamp;\n      });\n  }\n\n  @observable _activeNode = null;\n  get activeNode() {\n    return this._activeNode;\n  }\n  set activeNode(v) {\n    if (this._activeNode) {\n      this.graphData.findNode(this._activeNode).__focused = false;\n    }\n    if (v) {\n      this.graphData.findNode(v).__focused = true;\n    }\n    this._activeNode = v;\n  }\n\n  @observable targetLinkChoiceInProgress = false;\n  @observable changeStamp = 0;\n  @observable savedChangeStamp = 0;\n\n  @observable forceStrength = GRAPH_FORCE_STRENGTH_DEFAULT;\n  @observable forceDistance = GRAPH_FORCE_DISTANCE_DEFAULT;\n\n  getAfterErrorSnapshot() {\n    return {\n      graphData: this.graphData ? this.graphData.getImmutableCopy() : null,\n      availableTags: this.availableTags\n        ? this.availableTags.getImmutableCopy()\n        : null,\n      forceStrength: this.forceStrength,\n      forceDistance: this.forceDistance,\n      targetLinkChoiceInProgress: this.targetLinkChoiceInProgress,\n      changeStamp: this.changeStamp,\n      savedChangeStamp: this.savedChangeStamp,\n      gistId: this.projectGist._gistId\n    };\n  }\n}\n","import React, { Component } from 'react';\n\nconst TAG_LABEL_WIDTH = 14;\n\nclass TagLabels extends Component {\n  render() {\n    const { tags } = this.props;\n    if (!tags) return null;\n\n    return tags.map((tag, idx) => (\n      <rect\n        key={`tag-label-${tag.__id}`}\n        width={TAG_LABEL_WIDTH}\n        height={4}\n        rx={3}\n        ry={3}\n        x={idx * (TAG_LABEL_WIDTH + 3) + 21}\n        y={-20}\n        style={{ fill: tag.color }}\n      />\n    ));\n  }\n}\n\nexport { TagLabels };\n","export default function debounce(fn, delay) {\n  let timerId;\n  return function() {\n    let context = this;\n    let args = arguments;\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(() => {\n      fn.apply(context, args);\n      timerId = null;\n    }, delay);\n  };\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { styled } from '@material-ui/core/styles';\n\nconst StyledButton = styled(Button)({\n  margin: '5px'\n});\n\nconst CustomButton = ({\n  size = 'small',\n  variant = 'contained',\n  children,\n  ...rest\n}) => {\n  return (\n    <StyledButton size={size} variant={variant} {...rest}>\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default CustomButton;\n","import React from 'react';\nimport MaterialChip from '@material-ui/core/Chip';\n\nconst noop = () => {};\n\nconst Chip = ({ name, color, isActive, toggle = noop }) => {\n  return (\n    <MaterialChip\n      size=\"small\"\n      label={name || 'Unnamed'}\n      variant={isActive ? void 0 : 'outlined'}\n      style={{\n        margin: 1,\n        backgroundColor: isActive ? color : 'white',\n        borderColor: color\n      }}\n      onClick={toggle}\n    />\n  );\n};\n\nexport { Chip };\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '../components/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport BackspaceIcon from '@material-ui/icons/Backspace';\nimport { COLORS } from './constants';\nimport './TagEdit.css';\n\nconst renderColor = color => (\n  <span className=\"Color\" style={{ backgroundColor: color }}>\n    {color}\n  </span>\n);\n\nconst renderNameInput = (name, onNameChange) => {\n  return (\n    <div className=\"section\">\n      <TextField\n        label=\"Tag name\"\n        variant=\"outlined\"\n        margin=\"dense\"\n        value={name}\n        onChange={e => onNameChange(e.target.value)}\n      />\n    </div>\n  );\n};\n\nconst renderColorSelect = (color, onColorChange) => {\n  return (\n    <div className=\"section\">\n      <InputLabel shrink htmlFor=\"select-tag-color\">\n        Tag Color\n      </InputLabel>\n      <Select\n        variant=\"outlined\"\n        renderValue={renderColor}\n        value={color}\n        onChange={e => onColorChange(e.target.value)}\n        inputProps={{\n          id: 'select-tag-color'\n        }}\n      >\n        {COLORS.map(color => (\n          <MenuItem value={color} key={color}>\n            {renderColor(color)}\n          </MenuItem>\n        ))}\n      </Select>\n    </div>\n  );\n};\n\nconst TagEdit = ({\n  name,\n  color,\n  onNameChange,\n  onColorChange,\n  onEditDone,\n  onDelete,\n  onDeleteForce,\n  errorMessage\n}) => {\n  return (\n    <div>\n      <div className=\"Title\">\n        <span className=\"Label section\">Edit tag:</span>\n        <span className=\"BackButton section\">\n          <IconButton onClick={onEditDone} size=\"small\">\n            <BackspaceIcon />\n          </IconButton>\n        </span>\n      </div>\n      {renderNameInput(name, onNameChange)}\n      {renderColorSelect(color, onColorChange)}\n      <div>\n        <Button onClick={onEditDone}>Save</Button>\n      </div>\n      <div>\n        <Button onClick={onDelete} color=\"secondary\">\n          Delete tag (if unused)\n        </Button>\n      </div>\n      {errorMessage ? (\n        <div className=\"section\">\n          <div className=\"ErrorMessage\">{errorMessage}</div>\n        </div>\n      ) : null}\n      <Button onClick={onDeleteForce} color=\"secondary\">\n        Delete tag (with all usages)\n      </Button>\n    </div>\n  );\n};\n\nexport { TagEdit };\n","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport Popover from '@material-ui/core/Popover';\nimport { Chip } from '../components/Chip';\nimport Button from '../components/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { TagEdit } from './TagEdit';\nimport './TagPopover.css';\n\n/**\n * anchorEl - determines \"isOpen\" and element,\n *   that used to set the position of the popover\n */\n\n@inject('projectStore')\n@observer\nclass TagPopover extends Component {\n  state = { editingTag: null, deletionErrorMessage: null };\n\n  render() {\n    const { anchorEl, handlePopoverClose, node, projectStore } = this.props;\n    // changeStamp here for observe\n    // eslint-disable-next-line no-unused-vars\n    const { availableTags, changeStamp } = projectStore;\n    let { editingTag } = this.state;\n    const content = editingTag ? (\n      <TagEdit\n        name={editingTag.name}\n        color={editingTag.color}\n        onNameChange={newName => {\n          editingTag.name = newName;\n          projectStore.changeStamp++;\n        }}\n        onColorChange={newColor => {\n          editingTag.color = newColor;\n          projectStore.changeStamp++;\n        }}\n        onEditDone={this.handleEditTagDone}\n        onDelete={() => {\n          this.deleteTag(editingTag);\n        }}\n        onDeleteForce={() => {\n          this.deleteTagForce(editingTag);\n        }}\n        errorMessage={this.state.deletionErrorMessage}\n      />\n    ) : (\n      <div className=\"AvailableTags\">\n        {this.renderAvailableTags(availableTags, node)}\n        <Button onClick={this.handleCreateNewTag}>Create new tag</Button>\n      </div>\n    );\n    return (\n      <Popover\n        open={Boolean(anchorEl)}\n        anchorEl={anchorEl}\n        onClose={() => {\n          this.handleEditTagDone();\n          handlePopoverClose();\n        }}\n        anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\n        transformOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n      >\n        <div className=\"TagPopoverHeader\">Tags</div>\n        {content}\n      </Popover>\n    );\n  }\n\n  renderAvailableTags = (availableTags, node) => {\n    const tags = availableTags.getTagArray();\n    if (!tags.length) return 'Available tags is missing';\n\n    const activeTags = node.tags.length ? node.tags : [];\n    return tags.map(tag => (\n      <div className=\"AvailableTag\" key={tag.__id}>\n        <Chip\n          name={tag.name}\n          color={tag.color}\n          isActive={activeTags.includes(tag)}\n          toggle={() => this.toggleTag(tag, node)}\n        />\n        <IconButton onClick={() => this.handleEditTag(tag)} size=\"small\">\n          <EditIcon fontSize=\"small\" />\n        </IconButton>\n      </div>\n    ));\n  };\n\n  deleteTag = tag => {\n    const { projectStore } = this.props;\n    const { availableTags, graphData } = projectStore;\n    tag = availableTags.findTag(tag);\n    let tagUsageCount = graphData\n      .getNodeArray()\n      .filter(node => node.tags.includes(tag)).length;\n    if (tagUsageCount > 0) {\n      this.setState({\n        deletionErrorMessage: `Tag used in ${tagUsageCount} nodes`\n      });\n      return;\n    }\n\n    this.setState({ deletionErrorMessage: null });\n    availableTags.delete(tag);\n    this.handleEditTagDone();\n    projectStore.changeStamp++;\n  };\n\n  // will delete all used tag occurrences\n  deleteTagForce = tag => {\n    const { projectStore } = this.props;\n    const { availableTags, graphData } = projectStore;\n    tag = availableTags.findTag(tag);\n    graphData.getNodeArray().forEach(node => {\n      const index = node.tags.indexOf(tag);\n      if (index === -1) return;\n\n      node.tags.splice(index, 1);\n    });\n\n    this.setState({ deletionErrorMessage: null });\n    availableTags.delete(tag);\n    this.handleEditTagDone();\n    projectStore.changeStamp++;\n  };\n\n  toggleTag = (tag, node) => {\n    const idx = node.tags.indexOf(tag);\n    idx === -1 ? node.tags.push(tag) : node.tags.splice(idx, 1);\n    this.props.projectStore.changeStamp++;\n  };\n\n  handleCreateNewTag = () => {\n    const { projectStore } = this.props;\n    let newTag = projectStore.availableTags.add();\n    projectStore.changeStamp++;\n    this.setState({ editingTag: newTag, deletionErrorMessage: null });\n  };\n\n  handleEditTag = targetTag => {\n    this.setState({ editingTag: targetTag, deletionErrorMessage: null });\n  };\n\n  handleEditTagDone = () => {\n    this.setState({ editingTag: null, deletionErrorMessage: null });\n  };\n}\n\nexport { TagPopover };\n","import React, { PureComponent } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Button from '../components/Button';\nimport { Chip } from '../components/Chip';\nimport { TagPopover } from './TagPopover';\nimport './Tags.css';\n\n/**\n * Makes this component pure protects from immediately re-render,\n * when tags changed, this helps anchorEl keep mounted always.\n * Must re-render, when TagPopover closed.\n */\nclass Tags extends PureComponent {\n  state = { anchorEl: null };\n\n  render() {\n    let { node } = this.props;\n    let activeTags = null;\n    if (node.tags.length) {\n      activeTags = this.renderActiveTags(node.tags);\n    }\n\n    const { anchorEl } = this.state;\n    return (\n      <div className=\"Tags\">\n        {activeTags}\n        {activeTags ? (\n          <IconButton onClick={this.handleActivateTagPopover} size=\"small\">\n            <AddCircleIcon />\n          </IconButton>\n        ) : (\n          <Button onClick={this.handleActivateTagPopover}>Add tags...</Button>\n        )}\n        <TagPopover\n          anchorEl={anchorEl}\n          node={node}\n          handlePopoverClose={this.handlePopoverClose}\n        />\n      </div>\n    );\n  }\n\n  renderActiveTags = tags => {\n    return tags.map(tag => (\n      <Chip\n        key={tag.__id}\n        name={tag.name}\n        color={tag.color}\n        isActive={true}\n        toggle={this.handleActivateTagPopover}\n      />\n    ));\n  };\n\n  handlePopoverClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  handleActivateTagPopover = e => {\n    this.setState({ anchorEl: e.currentTarget });\n  };\n}\n\nexport { Tags };\n","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport './GraphEditPanel.css';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CloseIcon from '@material-ui/icons/Close';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Button from '../components/Button';\nimport { Tags } from '../tags/Tags';\n\n@inject('projectStore')\n@observer\nclass GraphEditPanel extends Component {\n  state = { activeNode: null, linksHided: false };\n\n  static getDerivedStateFromProps(props, prevState) {\n    const { projectStore } = props;\n    const { activeNode } = projectStore;\n    if (activeNode === prevState.activeNode) return null;\n\n    let node = null;\n    let linksHided = false;\n    if (activeNode) {\n      node = projectStore.graphData.findNode(activeNode);\n      // TODO: extern to configuration\n      linksHided = Object.keys(node.__links).length > 5;\n    }\n    return { activeNode, linksHided };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.activeNode !== this.props.activeNode) {\n      this.focusNodenameInput();\n    }\n  }\n\n  render() {\n    const { projectStore } = this.props;\n    // changeStamp here for observe\n    // eslint-disable-next-line no-unused-vars\n    const { activeNode, changeStamp } = projectStore;\n    let content;\n    if (!activeNode) {\n      content = (\n        <>\n          Click on node to edit\n          <br />\n          or\n          <br />\n          <Button onClick={this.createNewNode}>create new node</Button>\n        </>\n      );\n    } else {\n      const node = projectStore.graphData.findNode(activeNode);\n      content = (\n        <div>\n          <div className=\"CloseEditPanelButton\">\n            <IconButton onClick={this.handleCloseEditPanel} size=\"small\">\n              <CloseIcon />\n            </IconButton>\n          </div>\n          {this.renderActiveNodeInfo(node)}\n          <br />\n          <Tags node={node} />\n          <br />\n          {this.renderLinks(node)}\n          {this.renderDeleteNodeButton(node)}\n          {this.renderNewLinkComponent(node)}\n          {this.renderNewChildButton(node)}\n        </div>\n      );\n    }\n    return (\n      <div key=\"graphEditPanel\" className=\"graphEditPanel\">\n        {content}\n      </div>\n    );\n  }\n\n  focusNodenameInput = () => {\n    if (this.nodeNameRef) {\n      setTimeout(() => {\n        this.nodeNameRef.focus();\n      }, 100);\n    }\n  };\n\n  renderActiveNodeInfo = node => {\n    const descriptionContent = node.description ? node.description : '';\n    return (\n      <>\n        <TextField\n          label=\"Node Name\"\n          fullWidth\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          value={node.name}\n          onChange={e => this.handleChangeNodeName(e, node)}\n          inputRef={ref => {\n            this.nodeNameRef = ref;\n          }}\n        />\n        <br />\n        <TextField\n          label=\"Description\"\n          fullWidth\n          multiline\n          variant=\"outlined\"\n          margin=\"dense\"\n          value={descriptionContent}\n          onChange={e => this.handleChangeDescription(e, node)}\n        />\n        <br />\n        {'Node ID: '}\n        {node.__id}\n        <br />\n      </>\n    );\n  };\n\n  handleCloseEditPanel = () => {\n    const { projectStore } = this.props;\n    this.handleAbortNewLinkCreation();\n    projectStore.activeNode = null;\n  };\n\n  handleChangeNodeName = (e, targetNode) => {\n    targetNode.name = e.target.value;\n    this.props.projectStore.changeStamp++;\n  };\n\n  handleChangeDescription = (e, targetNode) => {\n    targetNode.description = e.target.value;\n    this.props.projectStore.changeStamp++;\n  };\n\n  renderLinks = node => {\n    const {\n      projectStore: { graphData }\n    } = this.props;\n    if (this.state.linksHided) {\n      return <Button onClick={this.showLinks}>Show links ...</Button>;\n    }\n    let items = [];\n    for (let linkId in node.__links) {\n      const link = node.__links[linkId];\n      const sourceNode = graphData.findNode(link.sourceId);\n      const targetNode = graphData.findNode(link.targetId);\n      // TODO: draw arrow instead of source / target text\n      items.push(\n        <ListItem key={`item-${linkId}`} button>\n          <ListItemText>\n            <b>source: </b>\n            {sourceNode.__id}: {sourceNode.name}, <b>target: </b>\n            {targetNode.__id}: {targetNode.name}\n          </ListItemText>\n          <ListItemSecondaryAction>\n            <IconButton onClick={() => this.handleDeleteLink(link)}>\n              <DeleteIcon fontSize=\"small\" />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n      );\n    }\n\n    return (\n      <>\n        <span>Links:</span>\n        <List className=\"links-list\" subheader={<li />} dense>\n          {items}\n        </List>\n      </>\n    );\n  };\n\n  showLinks = () => {\n    this.setState({ linksHided: false });\n  };\n\n  renderDeleteNodeButton = node => {\n    if (Object.keys(node.__links).length > 0) return null;\n\n    return (\n      <Button onClick={() => this.handleDeleteNode(node)}>\n        Delete this node\n      </Button>\n    );\n  };\n\n  renderNewLinkComponent = () => {\n    const { projectStore } = this.props;\n    if (!projectStore.targetLinkChoiceInProgress) {\n      return (\n        <div>\n          <Button onClick={this.handleNewLinkTargetSelection}>\n            add new link...\n          </Button>\n          <br />\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {'Click on target node to create new link ... '}\n        <Button\n          onClick={this.handleAbortNewLinkCreation}\n          variant=\"outlined\"\n          color=\"secondary\"\n        >\n          cancel\n        </Button>\n      </div>\n    );\n  };\n\n  handleAbortNewLinkCreation = () => {\n    const { projectStore } = this.props;\n    projectStore.targetLinkChoiceInProgress = false;\n  };\n\n  renderNewChildButton = node => {\n    return (\n      <div key=\"newChild\">\n        <Button onClick={() => this.handleNewChildCreation(node.__id)}>\n          add new child...\n        </Button>\n        <br />\n      </div>\n    );\n  };\n\n  handleDeleteNode = node => {\n    const { projectStore } = this.props;\n    projectStore.activeNode = null;\n    projectStore.graphData.deleteNode(node);\n    projectStore.changeStamp++;\n  };\n\n  handleDeleteLink = link => {\n    const { projectStore } = this.props;\n    projectStore.graphData.deleteLink(link);\n    projectStore.changeStamp++;\n  };\n\n  createNewNode = () => {\n    const { projectStore } = this.props;\n    const { graphData } = projectStore;\n    const newNode = graphData.addNode('new node');\n    projectStore.activeNode = newNode.__id;\n    projectStore.changeStamp++;\n  };\n\n  handleNewChildCreation = currentNodeId => {\n    const { projectStore } = this.props;\n    const { graphData } = projectStore;\n    const newNode = graphData.addNode('new child node');\n    graphData.addLink(newNode.__id, currentNodeId, 'CHILD');\n    projectStore.activeNode = newNode.__id;\n    projectStore.changeStamp++;\n  };\n\n  handleNewLinkTargetSelection = () => {\n    const { projectStore } = this.props;\n    projectStore.targetLinkChoiceInProgress = true;\n  };\n}\n\nexport { GraphEditPanel };\n","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport './Save.css';\nimport Button from '../components/Button';\n\n@inject('projectStore')\n@observer\nclass Save extends Component {\n  componentDidMount = () => {\n    window.addEventListener('beforeunload', this.handleLeavePage);\n  };\n\n  componentWillUnmount = () => {\n    window.removeEventListener('beforeunload', this.handleLeavePage);\n  };\n\n  render() {\n    const { changeStamp, savedChangeStamp } = this.props.projectStore;\n    let content;\n    if (changeStamp > savedChangeStamp) {\n      content = (\n        <>\n          <span className=\"redPoint\">Has unsaved changes</span>\n          <Button onClick={this.handleSave}>Save</Button>\n        </>\n      );\n    } else {\n      content = <span className=\"greenPoint\">Graph saved</span>;\n    }\n\n    return <div className=\"Save\">{content}</div>;\n  }\n\n  handleSave = () => {\n    this.props.projectStore.saveProject();\n  };\n\n  handleLeavePage = event => {\n    const { changeStamp, savedChangeStamp } = this.props.projectStore;\n    if (process.env.NODE_ENV === 'development') return;\n    if (changeStamp === savedChangeStamp) return;\n\n    // for browsers, that not support standard alert-on-exit message\n    const warningText =\n      'Data not saved, sure you want to leave the application?';\n    event.returnValue = warningText;\n    return warningText;\n  };\n}\n\nexport { Save };\n","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Zoom from '@material-ui/core/Zoom';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport './SavePanel.css';\nimport { Save } from './Save';\n\n@inject('projectStore')\n@observer\nclass SavePanel extends Component {\n  render() {\n    const {\n      projectStore: { isPublic, projectName }\n    } = this.props;\n    return (\n      <div className=\"SavePanel\">\n        <Tooltip\n          title=\"You can change graph publicity in gist interface (gist.github.com)\"\n          placement=\"right\"\n          TransitionComponent={Zoom}\n        >\n          <span className=\"ProjectPublicity\">\n            {isPublic ? 'Public project ' : 'Private project '}\n            <InfoOutlinedIcon />\n          </span>\n        </Tooltip>\n        <br />\n        <TextField\n          placeholder=\"Graph name\"\n          value={projectName}\n          onChange={this.handleChangeProjectName}\n          margin=\"dense\"\n          className=\"GraphNameInput\"\n        />\n        <Save />\n      </div>\n    );\n  }\n\n  handleChangeProjectName = e => {\n    let { projectStore } = this.props;\n    projectStore.projectName = e.target.value;\n    projectStore.changeStamp++;\n  };\n}\n\nexport { SavePanel };\n","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport notie from 'notie';\nimport request from '../request';\nimport { API_URL, GRAPH_STATE_FILENAME } from './constants';\nimport './GistSelection.css';\n\nconst LOCAL_STORAGE_KEY = 'GITHUB_TOKEN';\n\n// cached\nfunction requestToken(cb) {\n  const githubToken = localStorage.getItem(LOCAL_STORAGE_KEY);\n  if (githubToken) {\n    return cb(null, githubToken);\n  }\n\n  notieInput('token with gist access', (err, githubToken) => {\n    if (err) return cb(err);\n\n    localStorage.setItem(LOCAL_STORAGE_KEY, githubToken);\n    return cb(null, githubToken);\n  });\n}\n\nfunction notieInput(fieldName, cb) {\n  notie.input(\n    {\n      text: `Specify github ${fieldName}`\n    },\n    inputResult => {\n      return cb(null, inputResult);\n    },\n    () => {\n      const errMsg = `Need Specify github ${fieldName} to continue =(`;\n      notie.alert({\n        type: 'error',\n        text: errMsg\n      });\n      // TODO: make github token interface reusable:\n      //   if no token provided by user\n      //   or if token is outdated or invalid\n    }\n  );\n}\n\nasync function getSuitableGists(githubToken) {\n  let userGists = await getAllUserGists(githubToken);\n  return userGists.filter(gist => !!gist.files[GRAPH_STATE_FILENAME]);\n}\n\nasync function getAllUserGists(githubToken) {\n  let response = await request(\n    'GET',\n    `${API_URL}gists`,\n    { Authorization: `token ${githubToken}` },\n    null\n  );\n  let userGists;\n  try {\n    userGists = JSON.parse(response);\n  } catch (e) {\n    console.error(`Retrieved json from gist storage failed to parse`);\n    throw e;\n  }\n\n  if (!userGists) throw new Error('Data from response not available');\n\n  return userGists;\n}\n\n@inject('projectStore')\n@observer\nclass GistSelection extends Component {\n  componentDidMount() {\n    const { projectStore } = this.props;\n    requestToken((err, githubToken) => {\n      if (err) throw err;\n\n      projectStore.githubToken = githubToken;\n      getSuitableGists(githubToken).then(gists => {\n        projectStore.gists = gists;\n      });\n    });\n  }\n\n  render() {\n    const { gists } = this.props.projectStore;\n    if (!gists) {\n      return 'gists loading...';\n    }\n\n    let gistElems = gists.map(gist => (\n      <span\n        key={gist.id}\n        className=\"gistDescription yellow\"\n        onClick={() => this.handleSelect(gist.id)}\n      >\n        {gist.description}\n      </span>\n    ));\n    gistElems.push(\n      <span\n        key=\"new\"\n        className=\"gistDescription blue\"\n        onClick={this.handleNewGist}\n      >\n        create new\n      </span>\n    );\n\n    return (\n      <div className=\"gistSelection\">\n        <span>Choose gist with graph:</span>\n        {gistElems}\n      </div>\n    );\n  }\n\n  handleSelect = gistId => {\n    this.props.projectStore.loadProject(gistId);\n  };\n\n  handleNewGist = () => {\n    this.props.projectStore.newProject();\n  };\n}\n\nexport { GistSelection };\n","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\n// import Slider from '@material-ui/lab/esm/Slider';\nimport Slider from '@material-ui/core/Slider';\nimport './SettingsPanel.css';\nimport {\n  GRAPH_FORCE_STRENGTH_MIN,\n  GRAPH_FORCE_STRENGTH_MAX,\n  GRAPH_FORCE_DISTANCE_MIN,\n  GRAPH_FORCE_DISTANCE_MAX\n} from './constants';\n\n@inject('projectStore')\n@observer\nclass SettingsPanel extends Component {\n  render() {\n    const { projectStore } = this.props;\n    return (\n      <div className=\"SettingsPanel\">\n        Strength:\n        <Slider\n          defaultValue={projectStore.forceStrength}\n          value={projectStore.forceStrength}\n          min={GRAPH_FORCE_STRENGTH_MIN}\n          max={GRAPH_FORCE_STRENGTH_MAX}\n          onChange={(c, value) => {\n            projectStore.forceStrength = value;\n            projectStore.changeStamp++;\n          }}\n        />\n        Distance:\n        <Slider\n          defaultValue={projectStore.forceDistance}\n          value={projectStore.forceDistance}\n          min={GRAPH_FORCE_DISTANCE_MIN}\n          max={GRAPH_FORCE_DISTANCE_MAX}\n          onChange={(c, value) => {\n            projectStore.forceDistance = value;\n            projectStore.changeStamp++;\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport { SettingsPanel };\n","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport './SearchResults.css';\n\n@inject('projectStore')\n@observer\nclass SearchResults extends Component {\n  render() {\n    const {\n      projectStore: {\n        graphData,\n        search: { resultNodeIds }\n      }\n    } = this.props;\n    const resultNodes = resultNodeIds.map(nodeId => graphData.findNode(nodeId));\n    return (\n      <div>\n        <span className=\"ResultNodeCount\">\n          {resultNodes.length} Result nodes\n        </span>\n        <List className=\"ResultNodeList\" subheader={<li />} dense>\n          {resultNodes.map(resultNode => (\n            <div key={`ResultNode_${resultNode.__id}`}>\n              <Divider light />\n              <ListItem\n                dense\n                button\n                onClick={this.handleResultNodeClick(resultNode.__id)}\n              >\n                <ListItemText>{resultNode.name}</ListItemText>\n              </ListItem>\n            </div>\n          ))}\n        </List>\n      </div>\n    );\n  }\n\n  handleResultNodeClick = nodeId => () => {\n    const { projectStore } = this.props;\n    projectStore.targetLinkChoiceInProgress = false;\n    projectStore.activeNode = nodeId;\n  };\n}\n\nexport { SearchResults };\n","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Button from '../components/Button';\nimport { Chip } from '../components/Chip';\nimport { SearchResults } from './SearchResults';\nimport './SearchPanel.css';\n\n@inject('projectStore')\n@observer\nclass SearchPanel extends Component {\n  componentDidUpdate(prevProps) {\n    if (prevProps.changeStamp !== this.props.changeStamp) {\n      this.query();\n    }\n  }\n\n  render() {\n    const {\n      projectStore: { search }\n    } = this.props;\n    if (!search) return null;\n\n    return (\n      <div className=\"SearchPanel\">\n        <TextField\n          label=\"Search\"\n          fullWidth\n          variant=\"outlined\"\n          margin=\"dense\"\n          value={search.searchText}\n          onChange={this.handleChangeSearchText}\n        />\n        {this.renderTagPreferences()}\n        <Button onClick={this.query}>Find</Button>\n        <SearchResults />\n      </div>\n    );\n  }\n\n  renderTagPreferences = () => {\n    const {\n      projectStore: { availableTags, search }\n    } = this.props;\n    const tags = availableTags.getTagArray();\n    return tags.map(tag => (\n      <div key={`search-tag-preference-${tag.__id}`}>\n        <Chip name={tag.name} color={tag.color} isActive />\n        <Checkbox\n          key={`inclusion-tag-${tag.__id}`}\n          checked={Boolean(search.includedTags[tag.__id])}\n          icon={<DoneIcon fontSize=\"small\" />}\n          checkedIcon={<DoneIcon fontSize=\"small\" />}\n          onChange={() => search.toggleTagInclusion(tag)}\n        />\n        <Checkbox\n          key={`exclusion-tag-${tag.__id}`}\n          checked={Boolean(search.excludedTags[tag.__id])}\n          icon={<ClearIcon fontSize=\"small\" />}\n          checkedIcon={<ClearIcon fontSize=\"small\" />}\n          onChange={() => search.toggleTagExclusion(tag)}\n        />\n      </div>\n    ));\n  };\n\n  handleChangeSearchText = e => {\n    this.props.projectStore.search.searchText = e.target.value;\n  };\n\n  query = () => {\n    const {\n      projectStore: { search }\n    } = this.props;\n    search.query();\n  };\n}\n\nexport { SearchPanel };\n","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport './App.css';\nimport GraphView from './graph/GraphView';\nimport { GraphEditPanel } from './panels/GraphEditPanel';\nimport { SavePanel } from './panels/SavePanel';\nimport { GistSelection } from './gist/gistSelection';\nimport { SettingsPanel } from './SettingsPanel';\nimport { SearchPanel } from './search/SearchPanel';\nimport { version } from '../package.json';\n\nfunction AppVesion(props: any) {\n  return <div className=\"AppVersion\">Version: {props.version}</div>;\n}\n\n@inject('projectStore')\n@observer\nclass App extends Component {\n  render() {\n    const {\n      graphData, changeStamp, forceStrength, forceDistance, activeNode, isLoaded\n    } = (this.props as any).projectStore;\n    let content;\n    if (!graphData) {\n      content = (\n        <>\n          <GistSelection />\n          <AppVesion version={version} />\n        </>\n      );\n    } else {\n      content = (\n        <>\n          <GraphView\n            changeStamp={changeStamp}\n            forceStrength={forceStrength}\n            forceDistance={forceDistance}\n          />\n          <GraphEditPanel activeNode={activeNode} />\n          <SavePanel />\n          <SettingsPanel />\n          <SearchPanel changeStamp={changeStamp} />\n          <AppVesion version={version}/>\n        </>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        {content}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { toJS } from 'mobx';\nimport { Provider } from 'mobx-react';\nimport { init as initSentry } from '@sentry/browser';\nimport { version } from '../package.json';\nimport { ProjectStore } from './ProjectStore';\nimport './index.css';\nimport '@material-ui/core';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst projectStore = new ProjectStore();\nconst stores = {\n  projectStore,\n};\n\n// For easier debugging\nif (process.env.NODE_ENV === 'development') {\n  (window as any)._____APP_STATE_____ = stores;\n  (window as any).toJS = toJS;\n}\n\nif (process.env.NODE_ENV === 'production') {\n  initSentry({\n    beforeSend: (event) => {\n      // TODO: message ok for sending state ?\n      event.message = JSON.stringify(projectStore.getAfterErrorSnapshot());\n      return event;\n    },\n    release: version,\n    dsn: 'https://504d6ec417994bf7b7f559ffcdc5afab@sentry.io/1527022'\n  });\n}\n\nReactDOM.render(\n  <Provider { ...stores }>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}