{"version":3,"sources":["Graph.js","request.js","gist/constants.js","Gist.js","config.js","migrator.js","validator.js","ProjectStore.js","GraphView.js","debounce.js","Button.js","GraphEditPanel.js","SaveInterface.js","gistSelection.js","SettingsPanel.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["stripTempData","key","value","startsWith","Graph","savedGraphState","_this","this","Object","classCallCheck","_nodeMap","_linkMap","_nextNodeId","_nextLinkId","getImmutableCopy","str","JSON","stringify","parse","addNode","nodeName","newNode","__id","name","__links","deleteNode","node","findNode","keys","length","Error","addLink","sourceId","targetId","type","arguments","undefined","oldLinks","oldLinkKey","oldLink","newLink","source","target","deleteLink","link","findLink","result","concat","getNodeArray","values","getLinkArray","nodeId","Number","linkId","refillMapIds","refillLinks","request","method","path","headers","data","Promise","resolve","reject","xhr","XMLHttpRequest","onreadystatechange","readyState","status","responseText","open","forEach","header","setRequestHeader","send","API_URL","GRAPH_STATE_FILENAME","Gist","token","gistId","_auth","Authorization","_gistId","_files","_description","_public","fileName","fileData","isPublic","description","dto","wrapNewFileData","response","responseObj","console","error","_context","t0","message","id","_context2","files","public","filename","content","GRAPH_FORCE_STRENGTH_DEFAULT","GRAPH_FORCE_DISTANCE_DEFAULT","applyMigrations","graph","meta","forceStrength","forceDistance","version","replaceRootSections","validateDataObject","requiredProps","optionalProps","constructor","requiredKeys","i","property","hasOwnProperty","optionalKeys","FORCE","INITIAL_GRAPH_DATA","1","2","ProjectStore","_class","githubToken","initializerDefineProperty","_descriptor","graphData","_descriptor2","projectGist","_initializeGraph","gistInfo","errorMsg","savedState","savedGraphStateJson","projectName","err","notie","alert","text","isLoaded","_prepareStateForSave","optionalGraphData","appVersion","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","createClass","read","then","stateForSave","stateJson","create","_this2","resultJson","update","savedChangeStamp","changeStamp","get","_activeNode","set","v","__focused","applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","action","getOwnPropertyDescriptor","nsp","width","window","innerWidth","height","innerHeight","updateNode","selection","attr","d","x","y","Math","max","min","updateLink","updateGraph","selectAll","call","dragStarted","d3","active","force","alphaTarget","restart","fx","fy","dragging","dragEnded","enterNode","select","style","enterLink","initForce","nodes","links","forceOptions","strength","distance","iterations","initDrag","on","initTick","that","d3Graph","ReactDOM","findDOMNode","GraphView","inject","observer","reInitForce","assertThisInitialized","reInitForceDebounced","fn","delay","timerId","context","args","clearTimeout","setTimeout","apply","debounce","_this$props$projectSt","props","projectStore","prevProps","_this$props$projectSt2","activeNode","map","react_default","a","createElement","GraphView_Node","focused","GraphView_Link","className","viewBox","refX","refY","markerWidth","markerHeight","orient","markerUnits","Component","Link","d3Link","datum","markerEnd","Node","processFocus","d3NodeSelection","isFocused","classed","handleClick","e","targetLinkChoiceInProgress","sourceNodeId","targetNodeId","currentTarget","dataset","warn","d3Node","onClick","data-node-id","StyledButton","styled","Button","margin","CustomButton","_ref","_ref$size","size","_ref$variant","variant","children","rest","objectWithoutProperties","assign","GraphEditPanel","state","linksHided","renderActiveNodeInfo","descriptionContent","Fragment","TextField","label","fullWidth","multiline","onChange","handleChangeNodeName","handleChangeDescription","targetNode","renderLinks","src_Button","showLinks","items","_loop","sourceNode","push","ListItem","button","ListItemText","ListItemSecondaryAction","IconButton","handleDeleteLink","Delete_default","fontSize","List","subheader","dense","setState","renderDeleteNodeButton","handleDeleteNode","renderNewLinkComponent","handleAbortNewLinkCreation","color","handleNewLinkTargetSelection","renderNewChildButton","handleNewChildCreation","createNewNode","currentNodeId","prevState","SaveInterface","handleLeavePage","event","warningText","returnValue","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","handleSave","saveProject","LOCAL_STORAGE_KEY","requestToken","cb","localStorage","getItem","fieldName","input","inputResult","errMsg","notieInput","setItem","_callee","userGists","regenerator_default","wrap","prev","next","getAllUserGists","sent","abrupt","filter","gist","stop","_callee2","GistSelection","handleSelect","loadProject","handleNewGist","newProject","getSuitableGists","gists","gistElems","SettingsPanel","Slider","defaultValue","c","AppVesion","App","_projectStore","src_GraphView_0","GraphEditPanel_GraphEditPanel","src_SaveInterface_0","SettingsPanel_SettingsPanel","gistSelection_GistSelection","Boolean","location","hostname","match","stores","render","index_module","src_App_0","document","querySelector","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a71a1e52.chunk.js","sourcesContent":["/**\n * \"_data\" - is a private data\n * \"__data\" - is a temporary data\n */\n\nfunction refillMapIds(savedGraphState) {\n  for (let nodeId in savedGraphState._nodeMap) {\n    let node = savedGraphState._nodeMap[nodeId];\n    node.__id = Number(nodeId);\n  }\n  for (let linkId in savedGraphState._linkMap) {\n    let link = savedGraphState._linkMap[linkId];\n    link.__id = Number(linkId);\n  }\n}\n\nfunction refillLinks(savedGraphState) {\n  for (let nodeId in savedGraphState._nodeMap) {\n    let node = savedGraphState._nodeMap[nodeId];\n    node.__links = {};\n  }\n  for (let linkId in savedGraphState._linkMap) {\n    let link = savedGraphState._linkMap[linkId];\n\n    let sourceNode = savedGraphState._nodeMap[link.sourceId];\n    sourceNode.__links[linkId] = link;\n    let targetNode = savedGraphState._nodeMap[link.targetId];\n    targetNode.__links[linkId] = link;\n\n    // for d3 force links // TODO: maybe extern this code?\n    link.source = link.sourceId;\n    link.target = link.targetId;\n  }\n}\n\nfunction stripTempData(key, value) {\n  // remove temp data\n  if (key.startsWith('__')) return void 0;\n\n  // remove d3 temp data\n  if (key === 'x') return void 0;\n  if (key === 'y') return void 0;\n  if (key === 'vx') return void 0;\n  if (key === 'vy') return void 0;\n  if (key === 'fx') return void 0;\n  if (key === 'fy') return void 0;\n  if (key === 'index') return void 0;\n  if (key === 'source') return void 0;\n  if (key === 'target') return void 0;\n\n  return value;\n}\n\nexport default class Graph {\n  _nodeMap = {};\n  _linkMap = {};\n  _nextNodeId = null;\n  _nextLinkId = null;\n\n  // TODO: add case, when savedGraphState === undefined\n  constructor(savedGraphState) {\n    refillMapIds(savedGraphState);\n    refillLinks(savedGraphState);\n\n    this._nodeMap = savedGraphState._nodeMap;\n    this._linkMap = savedGraphState._linkMap;\n    this._nextNodeId = savedGraphState._nextNodeId;\n    this._nextLinkId = savedGraphState._nextLinkId;\n  }\n\n  getImmutableCopy = () => {\n    const str = JSON.stringify(\n      {\n        _nodeMap: this._nodeMap,\n        _linkMap: this._linkMap,\n        _nextNodeId: this._nextNodeId,\n        _nextLinkId: this._nextLinkId\n      },\n      stripTempData,\n      2\n    );\n    return JSON.parse(str);\n  };\n\n  addNode = nodeName => {\n    let newNode = {\n      __id: this._nextNodeId,\n      name: nodeName,\n      __links: {}\n    };\n    this._nodeMap[this._nextNodeId] = newNode;\n    this._nextNodeId++;\n    return newNode;\n  };\n\n  deleteNode = node => {\n    node = this.findNode(node);\n    // TODO: delete all links or warn about current links ?\n    // current behavior: warn about current links\n    if (Object.keys(node.__links).length > 0) {\n      throw new Error('Cannot delete node, when node has links');\n    }\n\n    delete this._nodeMap[node.__id];\n  };\n\n  addLink = (sourceId, targetId, type = 'CHILD') => {\n    if (sourceId === targetId)\n      throw new Error('Cannot create link with same sourceId and targetId');\n\n    let oldLinks = this._nodeMap[sourceId].__links;\n    for (let oldLinkKey in oldLinks) {\n      const oldLink = oldLinks[oldLinkKey];\n      if (oldLink.sourceId === sourceId && oldLink.targetId === targetId) {\n        throw new Error('Cannot create duplicate links');\n      }\n    }\n\n    let newLink = {\n      __id: this._nextLinkId,\n      type,\n      sourceId,\n      targetId,\n      // for d3 force links // TODO: maybe extern this code?\n      source: sourceId,\n      target: targetId\n    };\n    this._linkMap[this._nextLinkId] = newLink;\n    this._nodeMap[sourceId].__links[this._nextLinkId] = newLink;\n    this._nodeMap[targetId].__links[this._nextLinkId] = newLink;\n    this._nextLinkId++;\n    return newLink;\n  };\n\n  deleteLink = link => {\n    link = this.findLink(link);\n    delete this._linkMap[link.__id];\n\n    let sourceNode = this._nodeMap[link.sourceId];\n    delete sourceNode.__links[link.__id];\n    let targetNode = this._nodeMap[link.targetId];\n    delete targetNode.__links[link.__id];\n  };\n\n  /**\n   * node - nodeId or node\n   * result - node\n   */\n  findNode = node => {\n    let result;\n    if (typeof node === 'number') {\n      result = this._nodeMap[node];\n    } else {\n      result = node;\n    }\n\n    if (!result) throw new Error(`Cannot find node ${node}`);\n\n    return result;\n  };\n\n  /**\n   * link - linkId or link\n   * result - link\n   */\n  findLink = link => {\n    let result;\n    if (typeof link === 'number') {\n      result = this._linkMap[link];\n    } else {\n      result = link;\n    }\n\n    if (!result) throw new Error(`Cannot find link ${link}`);\n\n    return result;\n  };\n\n  getNodeArray = () => {\n    if (!this._nodeMap) return [];\n\n    return Object.values(this._nodeMap);\n  };\n\n  getLinkArray = () => {\n    if (!this._linkMap) return [];\n\n    return Object.values(this._linkMap);\n  };\n}\n","export default function request(method, path, headers, data) {\n  return new Promise((resolve, reject) => {\n    let xhr = new XMLHttpRequest();\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200 || xhr.status === 201) {\n          resolve(xhr.responseText);\n        } else {\n          reject(new Error(`response failed, status: ${xhr.status}`));\n        }\n      }\n    };\n    xhr.open(method, path, true);\n    if (headers) {\n      Object.keys(headers).forEach(header => {\n        xhr.setRequestHeader(header, headers[header]);\n      });\n    }\n    if (!data) {\n      xhr.send();\n    } else {\n      xhr.send(JSON.stringify(data));\n    }\n  });\n}\n","export const API_URL = 'https://api.github.com/';\nexport const GRAPH_STATE_FILENAME = 'graphState.json';\n","import request from './request';\nimport { API_URL } from './gist/constants';\n\nexport default class Gist {\n  constructor(token, gistId) {\n    if (!token) throw new Error('Token not passed!');\n    this._auth = { Authorization: `token ${token}` };\n    this._gistId = gistId;\n\n    this._files = null;\n    this._description = '';\n    this._public = null;\n  }\n\n  async create(fileName, fileData, isPublic, description) {\n    const dto = this.wrapNewFileData(fileName, fileData, isPublic, description);\n    let response = await request('POST', `${API_URL}gists`, this._auth, dto);\n    let responseObj;\n    try {\n      responseObj = JSON.parse(response);\n    } catch (e) {\n      console.error(`Retrieved json from gist failed to parse: ${e.message}`);\n      throw e;\n    }\n\n    if (!responseObj) throw new Error('Data from response not available');\n\n    this._gistId = responseObj.id;\n    return responseObj;\n  }\n\n  async update(fileName, fileData, isPublic, description) {\n    const dto = this.wrapNewFileData(fileName, fileData, isPublic, description);\n    let response = await request(\n      'PATCH',\n      `${API_URL}gists/${this._gistId}`,\n      this._auth,\n      dto\n    );\n    let responseObj;\n    try {\n      responseObj = JSON.parse(response);\n    } catch (e) {\n      console.error(`Retrieved json from gist failed to parse: ${e.message}`);\n      throw e;\n    }\n\n    if (responseObj.id !== this._gistId)\n      throw new Error(\n        'Gist id from respons does not match the current Gist id'\n      );\n\n    return responseObj;\n  }\n\n  async read() {\n    let response = await request(\n      'GET',\n      `${API_URL}gists/${this._gistId}`,\n      this._auth,\n      null\n    );\n    let responseObj;\n    try {\n      responseObj = JSON.parse(response);\n    } catch (e) {\n      console.error(`Retrieved json from gist failed to parse`);\n      throw e;\n    }\n\n    if (!responseObj) throw new Error('Data from response not available');\n\n    this._description = responseObj.description;\n    this._files = responseObj.files;\n    this._public = responseObj.public;\n\n    return responseObj;\n  }\n\n  wrapNewFileData(\n    fileName,\n    fileData,\n    isPublic = this._public,\n    description = this._description\n  ) {\n    if (!this._files) this._files = {};\n\n    this._files[fileName] = { filename: fileName, content: fileData };\n    return {\n      description,\n      files: this._files,\n      public: isPublic\n    };\n  }\n}\n","export const GRAPH_FORCE_STRENGTH_DEFAULT = -300;\nexport const GRAPH_FORCE_STRENGTH_MIN = -550;\nexport const GRAPH_FORCE_STRENGTH_MAX = -50;\n\nexport const GRAPH_FORCE_DISTANCE_DEFAULT = 130;\nexport const GRAPH_FORCE_DISTANCE_MIN = 50;\nexport const GRAPH_FORCE_DISTANCE_MAX = 210;\n","import { version } from '../package.json';\nimport {\n  GRAPH_FORCE_STRENGTH_DEFAULT,\n  GRAPH_FORCE_DISTANCE_DEFAULT\n} from './config';\n\nexport default function applyMigrations(savedGraphState) {\n  replaceRootSections(savedGraphState);\n}\n\nfunction replaceRootSections(savedGraphState) {\n  if (!savedGraphState.graph) {\n    savedGraphState.graph = {\n      _nodeMap: savedGraphState._nodeMap,\n      _linkMap: savedGraphState._linkMap,\n      _nextNodeId: savedGraphState._nextNodeId,\n      _nextLinkId: savedGraphState._nextLinkId\n    };\n    delete savedGraphState._nodeMap;\n    delete savedGraphState._linkMap;\n    delete savedGraphState._nextNodeId;\n    delete savedGraphState._nextLinkId;\n  }\n  if (!savedGraphState.meta) {\n    savedGraphState.meta = {\n      forceStrength: GRAPH_FORCE_STRENGTH_DEFAULT,\n      forceDistance: GRAPH_FORCE_DISTANCE_DEFAULT,\n      version\n    };\n  }\n}\n","export default function validateSavedState(savedState) {\n  if (\n    !validateDataObject(savedState.graph, {\n      _nodeMap: 'object',\n      _linkMap: 'object',\n      _nextNodeId: 'number',\n      _nextLinkId: 'number'\n    })\n  )\n    return false;\n\n  if (\n    !validateDataObject(savedState.meta, {\n      forceStrength: 'number',\n      forceDistance: 'number',\n      version: 'string'\n    })\n  )\n    return false;\n\n  return true;\n}\n\nfunction validateDataObject(target, requiredProps, optionalProps) {\n  if (target.constructor !== Object) return false;\n\n  const requiredKeys = Object.keys(requiredProps);\n  for (let i = 0; i < requiredKeys.length; i++) {\n    const property = requiredKeys[i];\n    if (!target.hasOwnProperty(property)) return false;\n\n    if (requiredProps[property] === 'object') {\n      if (target[property].constructor !== Object) return false;\n    } else {\n      if (typeof target[property] !== requiredProps[property]) return false;\n    }\n  }\n\n  if (optionalProps) {\n    const optionalKeys = Object.keys(optionalProps);\n    for (let i = 0; i < optionalKeys.length; i++) {\n      const property = optionalKeys[i];\n      if (target.hasOwnProperty(property)) {\n        if (typeof target[property] !== optionalProps[property]) return false;\n      }\n    }\n  }\n\n  return true;\n}\n","import { observable, action } from 'mobx';\nimport { version as appVersion } from '../package.json';\nimport Graph from './Graph';\nimport Gist from './Gist';\nimport { GRAPH_STATE_FILENAME } from './gist/constants';\nimport {\n  GRAPH_FORCE_DISTANCE_DEFAULT,\n  GRAPH_FORCE_STRENGTH_DEFAULT\n} from './config';\nimport applyMigrations from './migrator';\nimport notie from 'notie';\nimport validateSavedState from './validator';\n\nconst INITIAL_GRAPH_DATA = {\n  _nodeMap: {\n    1: { name: 'initial node' },\n    2: { name: 'linked node' }\n  },\n  _linkMap: {\n    1: { type: 'CHILD', sourceId: 1, targetId: 2 }\n  },\n  _nextNodeId: 3,\n  _nextLinkId: 2\n};\n\nexport class ProjectStore {\n  githubToken = null;\n  @observable gists = null;\n\n  graphData = null;\n  @observable isLoaded = false;\n\n  projectGist = null;\n  @action loadProject(gistId) {\n    this.projectGist = new Gist(this.githubToken, gistId);\n    this.projectGist.read().then(this._initializeGraph);\n  }\n\n  @action newProject() {\n    this.projectGist = new Gist(this.githubToken);\n    const stateForSave = this._prepareStateForSave(INITIAL_GRAPH_DATA);\n    const stateJson = JSON.stringify(stateForSave, null, 2);\n    this.projectGist\n      .create('graphState.json', stateJson, false, 'new graph')\n      .then(this._initializeGraph);\n  }\n\n  // TODO: decompose initializeGraph on validate / migrate / initialize\n  _initializeGraph = gistInfo => {\n    let savedGraphStateJson = gistInfo.files[GRAPH_STATE_FILENAME].content;\n    const projectName = gistInfo.description;\n    let errorMsg;\n    let savedGraphState;\n    try {\n      savedGraphState = JSON.parse(savedGraphStateJson);\n      applyMigrations(savedGraphState);\n      if (!validateSavedState(savedGraphState)) {\n        errorMsg = `Project format \"${projectName ||\n          'Untitled'}\" has invalid data format`;\n      }\n    } catch (err) {\n      errorMsg = `Project \"${projectName ||\n        'Untitled'}\" failed to parse / migrate / validate`;\n    }\n\n    if (errorMsg) {\n      notie.alert({ type: 'error', text: errorMsg });\n      return;\n    }\n\n    this.graphData = new Graph(savedGraphState.graph);\n    this.forceStrength = savedGraphState.meta.forceStrength;\n    this.forceDistance = savedGraphState.meta.forceDistance;\n    this.isLoaded = true;\n  };\n\n  _prepareStateForSave = optionalGraphData => {\n    let graphData = optionalGraphData || this.graphData.getImmutableCopy();\n    return {\n      graph: graphData,\n      meta: {\n        forceStrength: this.forceStrength,\n        forceDistance: this.forceDistance,\n        version: appVersion\n      }\n    };\n  };\n\n  @action saveProject() {\n    let result = this._prepareStateForSave();\n    const resultJson = JSON.stringify(result, null, 2);\n    this.projectGist\n      .update(GRAPH_STATE_FILENAME, resultJson)\n      .then(responseObj => {\n        this.savedChangeStamp = this.changeStamp;\n      });\n  }\n\n  @observable _activeNode = null;\n  get activeNode() {\n    return this._activeNode;\n  }\n  set activeNode(v) {\n    if (this._activeNode) {\n      this.graphData.findNode(this._activeNode).__focused = false;\n    }\n    if (v) {\n      this.graphData.findNode(v).__focused = true;\n    }\n    this._activeNode = v;\n  }\n\n  @observable targetLinkChoiceInProgress = false;\n  @observable changeStamp = 0;\n  @observable savedChangeStamp = 0;\n\n  @observable forceStrength = GRAPH_FORCE_STRENGTH_DEFAULT;\n  @observable forceDistance = GRAPH_FORCE_DISTANCE_DEFAULT;\n}\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { inject, observer } from 'mobx-react';\nimport * as d3 from 'd3';\nimport './GraphView.css';\nimport debounce from './debounce';\n\n// Functions and variables\nvar FORCE;\nFORCE = (function(nsp) {\n  var width = window.innerWidth,\n    height = window.innerHeight,\n    // TODO: maybe need d3.forceX and d3.forceY instead of d3.forceCenter\n    initForce = (nodes, links, forceOptions) => {\n      const { strength, distance } = forceOptions;\n      nsp.force = d3\n        .forceSimulation(nodes)\n        .force('charge', d3.forceManyBody().strength(strength))\n        .force(\n          'link',\n          d3\n            .forceLink(links)\n            .id(d => d.__id)\n            .distance(distance)\n        )\n        .force(\n          'center',\n          d3\n            .forceCenter()\n            .x(nsp.width / 2)\n            .y(nsp.height / 2)\n        )\n        .force('collide', d3.forceCollide([5]).iterations([5]));\n    },\n    enterNode = selection => {\n      selection\n        .select('circle')\n        .attr('r', 25)\n        .style('fill', 'tomato')\n        .style('stroke', 'bisque')\n        .style('stroke-width', '3px');\n\n      selection\n        .select('text')\n        .style('fill', 'honeydew')\n        .style('font-weight', '600')\n        .style('text-transform', 'uppercase')\n        .style('text-anchor', 'middle')\n        .style('alignment-baseline', 'middle')\n        .style('font-size', '10px')\n        .style('font-family', 'cursive');\n    },\n    updateNode = selection => {\n      selection\n        .attr('transform', d => 'translate(' + d.x + ',' + d.y + ')')\n        .attr('cx', d => (d.x = Math.max(30, Math.min(width - 30, d.x))))\n        .attr('cy', d => (d.y = Math.max(30, Math.min(height - 30, d.y))));\n    },\n    enterLink = selection => {\n      selection.attr('stroke-width', 3).attr('stroke', 'bisque');\n    },\n    updateLink = selection => {\n      selection\n        .attr('x1', d => d.source.x)\n        .attr('y1', d => d.source.y)\n        .attr('x2', d => d.target.x)\n        .attr('y2', d => d.target.y);\n    },\n    updateGraph = selection => {\n      selection.selectAll('.node').call(updateNode);\n      selection.selectAll('.link').call(updateLink);\n    },\n    dragStarted = d => {\n      if (!d3.event.active) nsp.force.alphaTarget(0.3).restart();\n\n      d.fx = d.x;\n      d.fy = d.y;\n    },\n    dragging = d => {\n      d.fx = d3.event.x;\n      d.fy = d3.event.y;\n    },\n    dragEnded = d => {\n      if (!d3.event.active) nsp.force.alphaTarget(0);\n\n      d.fx = null;\n      d.fy = null;\n    },\n    initDrag = () =>\n      d3.selectAll('g.node').call(\n        d3\n          .drag()\n          .on('start', dragStarted)\n          .on('drag', dragging)\n          .on('end', dragEnded)\n      ),\n    initTick = that => {\n      that.d3Graph = d3.select(ReactDOM.findDOMNode(that));\n      nsp.force.on('tick', () => {\n        that.d3Graph.call(updateGraph);\n      });\n    };\n\n  nsp.width = width;\n  nsp.height = height;\n  nsp.enterNode = enterNode;\n  nsp.updateNode = updateNode;\n  nsp.enterLink = enterLink;\n  nsp.updateLink = updateLink;\n  nsp.updateGraph = updateGraph;\n  nsp.initForce = initForce;\n  nsp.dragStarted = dragStarted;\n  nsp.dragging = dragging;\n  nsp.dragEnded = dragEnded;\n  nsp.initDrag = initDrag;\n  nsp.initTick = initTick;\n\n  return nsp;\n})(FORCE || {});\n\n@inject('projectStore')\n@observer\nclass GraphView extends Component {\n  componentDidMount() {\n    const {\n      projectStore: { graphData, forceStrength, forceDistance }\n    } = this.props;\n    this.reInitForce(graphData, {\n      strength: forceStrength,\n      distance: forceDistance\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const { graphData } = this.props.projectStore;\n    if (\n      prevProps.changeStamp !== this.props.changeStamp ||\n      prevProps.forceStrength !== this.props.forceStrength ||\n      prevProps.forceDistance !== this.props.forceDistance\n    ) {\n      this.reInitForceDebounced(graphData, {\n        strength: this.props.forceStrength,\n        distance: this.props.forceDistance\n      });\n    }\n  }\n\n  reInitForce = (graphData, forceOptions) => {\n    FORCE.initForce(\n      graphData.getNodeArray(),\n      graphData.getLinkArray(),\n      forceOptions\n    );\n    FORCE.initTick(this);\n    FORCE.initDrag();\n  };\n\n  reInitForceDebounced = debounce(this.reInitForce, 100);\n\n  render() {\n    // activeNode observe for highlightning active node\n    // eslint-disable-next-line no-unused-vars\n    const { graphData, activeNode } = this.props.projectStore;\n    let nodes = graphData.getNodeArray().map(node => {\n      return (\n        <Node\n          key={node.__id}\n          name={node.name}\n          data={node}\n          focused={node.__focused}\n        />\n      );\n    });\n    let links = graphData.getLinkArray().map(link => {\n      return <Link key={link.__id} data={link} />;\n    });\n    return (\n      <div className=\"graph_container\">\n        <svg className=\"graph\" width={FORCE.width} height={FORCE.height}>\n          <defs>\n            <marker\n              id=\"arrow\"\n              viewBox=\"0 0 10 10\"\n              refX=\"26\"\n              refY=\"5\"\n              markerWidth=\"5\"\n              markerHeight=\"5\"\n              orient=\"auto-start-reverse\"\n              markerUnits=\"strokeWidth\"\n            >\n              <path d=\"M 0 0 L 10 5 L 0 10 z\" />\n            </marker>\n          </defs>\n          <g>{links}</g>\n          <g>{nodes}</g>\n        </svg>\n      </div>\n    );\n  }\n}\n\nclass Link extends Component {\n  componentDidMount() {\n    this.d3Link = d3\n      .select(ReactDOM.findDOMNode(this))\n      .datum(this.props.data)\n      .call(FORCE.enterLink);\n  }\n\n  componentDidUpdate() {\n    this.d3Link.datum(this.props.data).call(FORCE.updateLink);\n  }\n\n  render() {\n    return <line className=\"link\" markerEnd=\"url('#arrow')\" />;\n  }\n}\n\n@inject('projectStore')\n@observer\nclass Node extends Component {\n  componentDidMount() {\n    this.d3Node = d3\n      .select(ReactDOM.findDOMNode(this))\n      .datum(this.props.data)\n      .call(FORCE.enterNode)\n      .call(this.processFocus, this.props.focused);\n  }\n\n  componentDidUpdate() {\n    this.d3Node\n      .datum(this.props.data)\n      .call(FORCE.updateNode)\n      .call(this.processFocus, this.props.focused);\n  }\n\n  processFocus = (d3NodeSelection, isFocused) => {\n    d3NodeSelection.select('circle').classed('focused', isFocused);\n  };\n\n  render() {\n    const nodeId = this.props.data.__id;\n    return (\n      <g className=\"node\" onClick={this.handleClick} data-node-id={nodeId}>\n        <circle />\n        <text>{this.props.data.name}</text>\n      </g>\n    );\n  }\n\n  handleClick = e => {\n    const { projectStore } = this.props;\n    if (!projectStore.targetLinkChoiceInProgress) {\n      projectStore.activeNode = Number(e.currentTarget.dataset.nodeId);\n      return;\n    }\n\n    // handle new link creation\n    const sourceNodeId = projectStore.activeNode;\n    const targetNodeId = Number(e.currentTarget.dataset.nodeId);\n    try {\n      projectStore.graphData.addLink(sourceNodeId, targetNodeId, 'CHILD');\n    } catch (e) {\n      console.warn(e.message); // TODO: warn with alertify\n      return;\n    }\n    projectStore.targetLinkChoiceInProgress = false;\n    projectStore.changeStamp++;\n  };\n}\n\nexport default GraphView;\n","export default function debounce(fn, delay) {\n  let timerId;\n  return function() {\n    let context = this;\n    let args = arguments;\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(() => {\n      fn.apply(context, args);\n      timerId = null;\n    }, delay);\n  };\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { styled } from '@material-ui/core/styles';\n\nconst StyledButton = styled(Button)({\n  margin: '2px'\n});\n\nconst CustomButton = ({\n  size = 'small',\n  variant = 'contained',\n  children,\n  ...rest\n}) => {\n  return (\n    <StyledButton size={size} variant={variant} {...rest}>\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default CustomButton;\n","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport './GraphEditPanel.css';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Button from './Button';\n\n@inject('projectStore')\n@observer\nclass GraphEditPanel extends Component {\n  state = { activeNode: null, linksHided: false };\n\n  static getDerivedStateFromProps(props, prevState) {\n    const { projectStore } = props;\n    const { activeNode } = projectStore;\n    if (activeNode === prevState.activeNode) return prevState;\n    let node = null;\n    let linksHided = false;\n    if (activeNode) {\n      node = projectStore.graphData.findNode(activeNode);\n      // TODO: extern to configuration\n      linksHided = Object.keys(node.__links).length > 5;\n    }\n    return { activeNode, linksHided };\n  }\n\n  render() {\n    const { projectStore } = this.props;\n    // changeStamp here for observe\n    // eslint-disable-next-line no-unused-vars\n    const { activeNode, changeStamp } = projectStore;\n    let content;\n    if (!activeNode) {\n      content = (\n        <>\n          Click on node to edit\n          <br />\n          or\n          <br />\n          <Button onClick={this.createNewNode}>create new node</Button>\n        </>\n      );\n    } else {\n      const node = projectStore.graphData.findNode(activeNode);\n      content = (\n        <>\n          {this.renderActiveNodeInfo(node)}\n          <br />\n          {this.renderLinks(node)}\n          {this.renderDeleteNodeButton(node)}\n          {this.renderNewLinkComponent(node)}\n          {this.renderNewChildButton(node)}\n        </>\n      );\n    }\n    return (\n      <div key=\"graphEditPanel\" className=\"graphEditPanel\">\n        {content}\n      </div>\n    );\n  }\n\n  renderActiveNodeInfo = node => {\n    const descriptionContent = node.description ? node.description : '';\n    return (\n      <>\n        <TextField\n          label=\"Node Name\"\n          fullWidth\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          value={node.name}\n          onChange={e => this.handleChangeNodeName(e, node)}\n        />\n        <br />\n        <TextField\n          label=\"Description\"\n          fullWidth\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          value={descriptionContent}\n          onChange={e => this.handleChangeDescription(e, node)}\n        />\n        <br />\n        {'Node ID: '}\n        {node.__id}\n        <br />\n      </>\n    );\n  };\n\n  handleChangeNodeName = (e, targetNode) => {\n    targetNode.name = e.target.value;\n    this.props.projectStore.changeStamp++;\n  };\n\n  handleChangeDescription = (e, targetNode) => {\n    targetNode.description = e.target.value;\n    this.props.projectStore.changeStamp++;\n  };\n\n  renderLinks = node => {\n    const {\n      projectStore: { graphData }\n    } = this.props;\n    if (this.state.linksHided) {\n      return <Button onClick={this.showLinks}>Show links ...</Button>;\n    }\n    let items = [];\n    for (let linkId in node.__links) {\n      const link = node.__links[linkId];\n      const sourceNode = graphData.findNode(link.sourceId);\n      const targetNode = graphData.findNode(link.targetId);\n      // TODO: draw arrow instead of source / target text\n      items.push(\n        <ListItem key={`item-${linkId}`} button>\n          <ListItemText>\n            <b>source: </b>\n            {sourceNode.__id}: {sourceNode.name}, <b>target: </b>\n            {targetNode.__id}: {targetNode.name}\n          </ListItemText>\n          <ListItemSecondaryAction>\n            <IconButton onClick={() => this.handleDeleteLink(link)}>\n              <DeleteIcon fontSize=\"small\" />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n      );\n    }\n\n    return (\n      <>\n        <span>Links:</span>\n        <List className=\"links-list\" subheader={<li />} dense>\n          {items}\n        </List>\n      </>\n    );\n  };\n\n  showLinks = () => {\n    this.setState({ linksHided: false });\n  };\n\n  renderDeleteNodeButton = node => {\n    if (Object.keys(node.__links).length > 0) return null;\n\n    return (\n      <Button onClick={() => this.handleDeleteNode(node)}>\n        Delete this node\n      </Button>\n    );\n  };\n\n  renderNewLinkComponent = () => {\n    const { projectStore } = this.props;\n    if (!projectStore.targetLinkChoiceInProgress) {\n      return (\n        <div>\n          <Button onClick={this.handleNewLinkTargetSelection}>\n            add new link...\n          </Button>\n          <br />\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {'Click on target node to create new link ... '}\n        <Button\n          onClick={this.handleAbortNewLinkCreation}\n          variant=\"outlined\"\n          color=\"secondary\"\n        >\n          cancel\n        </Button>\n      </div>\n    );\n  };\n\n  handleAbortNewLinkCreation = () => {\n    const { projectStore } = this.props;\n    projectStore.targetLinkChoiceInProgress = false;\n  };\n\n  renderNewChildButton = node => {\n    return (\n      <div key=\"newChild\">\n        <Button onClick={() => this.handleNewChildCreation(node.__id)}>\n          add new child...\n        </Button>\n        <br />\n      </div>\n    );\n  };\n\n  handleDeleteNode = node => {\n    const { projectStore } = this.props;\n    projectStore.activeNode = null;\n    projectStore.graphData.deleteNode(node);\n    projectStore.changeStamp++;\n  };\n\n  handleDeleteLink = link => {\n    const { projectStore } = this.props;\n    projectStore.graphData.deleteLink(link);\n    projectStore.changeStamp++;\n  };\n\n  createNewNode = () => {\n    const { projectStore } = this.props;\n    const { graphData } = projectStore;\n    const newNode = graphData.addNode('new node');\n    projectStore.activeNode = newNode.__id;\n    projectStore.changeStamp++;\n  };\n\n  handleNewChildCreation = currentNodeId => {\n    const { projectStore } = this.props;\n    const { graphData } = projectStore;\n    const newNode = graphData.addNode('new child node');\n    graphData.addLink(newNode.__id, currentNodeId, 'CHILD');\n    projectStore.activeNode = newNode.__id;\n    projectStore.changeStamp++;\n  };\n\n  handleNewLinkTargetSelection = () => {\n    const { projectStore } = this.props;\n    projectStore.targetLinkChoiceInProgress = true;\n  };\n}\n\nexport { GraphEditPanel };\n","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport './SaveInterface.css';\nimport Button from './Button';\n\n@inject('projectStore')\n@observer\nclass SaveInterface extends Component {\n  handleLeavePage = event => {\n    const { changeStamp, savedChangeStamp } = this.props.projectStore;\n    if (process.env.NODE_ENV === 'development') return;\n    if (changeStamp === savedChangeStamp) return;\n\n    // for browsers, that not support standard alert-on-exit message\n    const warningText =\n      'Data not saved, sure you want to leave the application?';\n    event.returnValue = warningText;\n    return warningText;\n  };\n\n  componentDidMount = () => {\n    window.addEventListener('beforeunload', this.handleLeavePage);\n  };\n\n  componentWillUnmount = () => {\n    window.removeEventListener('beforeunload', this.handleLeavePage);\n  };\n\n  render() {\n    const { changeStamp, savedChangeStamp } = this.props.projectStore;\n    let content;\n    if (changeStamp > savedChangeStamp) {\n      content = (\n        <>\n          <span className=\"redPoint\">Has unsaved changes</span>\n          <Button onClick={this.handleSave}>Save</Button>\n        </>\n      );\n    } else {\n      content = <span className=\"greenPoint\">Graph saved</span>;\n    }\n\n    return <div className=\"saveInterface\">{content}</div>;\n  }\n\n  handleSave = () => {\n    this.props.projectStore.saveProject();\n  };\n}\n\nexport default SaveInterface;\n","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport notie from 'notie';\nimport request from './request';\nimport { API_URL, GRAPH_STATE_FILENAME } from './gist/constants';\nimport './GistSelection.css';\n\nconst LOCAL_STORAGE_KEY = 'GITHUB_TOKEN';\n\n// cached\nfunction requestToken(cb) {\n  const githubToken = localStorage.getItem(LOCAL_STORAGE_KEY);\n  if (githubToken) {\n    return cb(null, githubToken);\n  }\n\n  notieInput('token with gist access', (err, githubToken) => {\n    if (err) return cb(err);\n\n    localStorage.setItem(LOCAL_STORAGE_KEY, githubToken);\n    return cb(null, githubToken);\n  });\n}\n\nfunction notieInput(fieldName, cb) {\n  notie.input(\n    {\n      text: `Specify github ${fieldName}`\n    },\n    inputResult => {\n      return cb(null, inputResult);\n    },\n    () => {\n      const errMsg = `Need Specify github ${fieldName} to continue =(`;\n      notie.error({\n        text: errMsg\n      });\n      return cb(new Error(errMsg));\n    }\n  );\n}\n\nasync function getSuitableGists(githubToken) {\n  let userGists = await getAllUserGists(githubToken);\n  return userGists.filter(gist => !!gist.files[GRAPH_STATE_FILENAME]);\n}\n\nasync function getAllUserGists(githubToken) {\n  let response = await request(\n    'GET',\n    `${API_URL}gists`,\n    { Authorization: `token ${githubToken}` },\n    null\n  );\n  let userGists;\n  try {\n    userGists = JSON.parse(response);\n  } catch (e) {\n    console.error(`Retrieved json from gist storage failed to parse`);\n    throw e;\n  }\n\n  if (!userGists) throw new Error('Data from response not available');\n\n  return userGists;\n}\n\n@inject('projectStore')\n@observer\nclass GistSelection extends Component {\n  componentDidMount() {\n    const { projectStore } = this.props;\n    requestToken((err, githubToken) => {\n      if (err) throw err;\n\n      projectStore.githubToken = githubToken;\n      getSuitableGists(githubToken).then(gists => {\n        projectStore.gists = gists;\n      });\n    });\n  }\n\n  render() {\n    const { gists } = this.props.projectStore;\n    if (!gists) {\n      return 'gists loading...';\n    }\n\n    let gistElems = gists.map(gist => (\n      <span\n        key={gist.id}\n        className=\"gistDescription yellow\"\n        onClick={() => this.handleSelect(gist.id)}\n      >\n        {gist.description}\n      </span>\n    ));\n    gistElems.push(\n      <span\n        key=\"new\"\n        className=\"gistDescription blue\"\n        onClick={this.handleNewGist}\n      >\n        create new\n      </span>\n    );\n\n    return (\n      <div className=\"gistSelection\">\n        <span>Choose gist with graph:</span>\n        {gistElems}\n      </div>\n    );\n  }\n\n  handleSelect = gistId => {\n    this.props.projectStore.loadProject(gistId);\n  };\n\n  handleNewGist = () => {\n    this.props.projectStore.newProject();\n  };\n}\n\nexport { GistSelection };\n","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\n// import Slider from '@material-ui/lab/esm/Slider';\nimport Slider from '@material-ui/core/Slider';\nimport './SettingsPanel.css';\nimport {\n  GRAPH_FORCE_STRENGTH_MIN,\n  GRAPH_FORCE_STRENGTH_MAX,\n  GRAPH_FORCE_DISTANCE_MIN,\n  GRAPH_FORCE_DISTANCE_MAX\n} from './config';\n\n@inject('projectStore')\n@observer\nclass SettingsPanel extends Component {\n  render() {\n    const { projectStore } = this.props;\n    return (\n      <div className=\"settingsPanel\">\n        Strength:\n        <Slider\n          defaultValue={projectStore.forceStrength}\n          value={projectStore.forceStrength}\n          min={GRAPH_FORCE_STRENGTH_MIN}\n          max={GRAPH_FORCE_STRENGTH_MAX}\n          onChange={(c, value) => {\n            projectStore.forceStrength = value;\n            projectStore.changeStamp++;\n          }}\n        />\n        Distance:\n        <Slider\n          defaultValue={projectStore.forceDistance}\n          value={projectStore.forceDistance}\n          min={GRAPH_FORCE_DISTANCE_MIN}\n          max={GRAPH_FORCE_DISTANCE_MAX}\n          onChange={(c, value) => {\n            projectStore.forceDistance = value;\n            projectStore.changeStamp++;\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport { SettingsPanel };\n","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport './App.css';\nimport GraphView from './GraphView';\nimport { GraphEditPanel } from './GraphEditPanel';\nimport SaveInterface from './SaveInterface';\nimport { GistSelection } from './gistSelection';\nimport { SettingsPanel } from './SettingsPanel';\nimport { version } from '../package.json';\n\nfunction AppVesion(props: any) {\n  return <div className=\"app-version\">Version: {props.version}</div>;\n}\n\n@inject('projectStore')\n@observer\nclass App extends Component {\n  render() {\n    const {\n      graphData, changeStamp, forceStrength, forceDistance, isLoaded\n    } = (this.props as any).projectStore;\n    let content;\n    if (!graphData) {\n      content = (\n        <>\n          <GistSelection />\n          <AppVesion version={version} />\n        </>\n      );\n    } else {\n      content = (\n        <>\n          <GraphView\n            changeStamp={changeStamp}\n            forceStrength={forceStrength}\n            forceDistance={forceDistance}\n          />\n          <GraphEditPanel />\n          <SaveInterface />\n          <SettingsPanel />\n          <AppVesion version={version}/>\n        </>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        {content}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'mobx-react';\nimport { ProjectStore } from './ProjectStore';\nimport './index.css';\nimport '@material-ui/core';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst projectStore = new ProjectStore();\nconst stores = {\n  projectStore,\n};\n\n// For easier debugging\nif (process.env.NODE_ENV !== 'production') {\n  (window as any)._____APP_STATE_____ = stores;\n}\n\nReactDOM.render(\n  <Provider { ...stores }>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}