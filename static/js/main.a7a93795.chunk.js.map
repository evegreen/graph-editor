{"version":3,"sources":["graph/Graph.js","tags/constants.js","tags/AvailableTags.js","request.js","gist/constants.js","gist/Gist.js","constants.js","graph/migrator.js","validator.js","ProjectStore.js","graph/GraphView.js","graph/TagLabels.js","utils/debounce.js","components/Button.js","components/Chip.js","tags/TagEdit.js","tags/TagPopover.js","tags/Tags.js","panels/GraphEditPanel.js","panels/Save.js","panels/SavePanel.js","gist/gistSelection.js","SettingsPanel.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["stripTempData","key","value","length","map","tag","__id","startsWith","Graph","savedGraphState","_this","this","Object","classCallCheck","_nodeMap","_linkMap","_nextNodeId","_nextLinkId","getImmutableCopy","str","JSON","stringify","parse","addNode","nodeName","newNode","name","__links","x","y","vx","vy","deleteNode","node","findNode","keys","Error","addLink","sourceId","targetId","type","arguments","undefined","oldLinks","oldLinkKey","oldLink","newLink","source","target","deleteLink","link","findLink","result","concat","getNodeArray","values","getLinkArray","nodeId","Number","linkId","refillMapIds","refillLinks","COLORS","INITIAL_TAGS_DATA","_tagMap","1","color","2","3","4","_nextTagId","AvailableTags","savedTagState","add","newTag","getNextColor","delete","findTag","usedTagColors","filter","includes","Math","floor","random","getTagsArray","tagId","request","method","path","headers","data","Promise","resolve","reject","xhr","XMLHttpRequest","onreadystatechange","readyState","status","responseText","open","forEach","header","setRequestHeader","send","API_URL","GRAPH_STATE_FILENAME","Gist","token","gistId","_auth","Authorization","_gistId","_files","_description","_public","fileName","fileData","isPublic","description","setDescription","dto","wrapNewFileData","public","response","responseObj","console","error","_context","t0","message","id","_context2","files","filename","content","GRAPH_FORCE_STRENGTH_DEFAULT","GRAPH_FORCE_DISTANCE_DEFAULT","INITIAL_GRAPH_DATA","applyMigrations","graph","meta","forceStrength","forceDistance","version","tags","replaceRootSections","validateDataObject","requiredProps","optionalProps","constructor","requiredKeys","i","property","hasOwnProperty","optionalKeys","FORCE","ProjectStore","_class","githubToken","initializerDefineProperty","_descriptor","graphData","_descriptor2","_descriptor3","_descriptor4","projectGist","_initializeGraph","gistInfo","errorMsg","savedState","savedGraphStateJson","projectName","err","notie","alert","text","availableTags","isLoaded","_prepareStateForSave","optionalGraphData","optionalTagsData","appVersion","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","createClass","read","then","stateForSave","stateJson","create","_this2","resultJson","update","savedChangeStamp","changeStamp","targetLinkChoiceInProgress","get","_projectName","set","v","document","title","_activeNode","__focused","applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","action","getOwnPropertyDescriptor","TagLabels","props","idx","react_default","a","createElement","width","height","rx","ry","style","fill","Component","nsp","window","innerWidth","innerHeight","updateNode","selection","attr","d","max","min","updateLink","updateGraph","selectAll","call","dragStarted","d3","active","force","alphaTarget","restart","fx","fy","dragging","dragEnded","enterNode","select","enterLink","initForce","nodes","links","forceOptions","strength","distance","iterations","initDrag","on","initTick","that","d3Graph","ReactDOM","findDOMNode","GraphView","inject","observer","reInitForce","assertThisInitialized","reInitForceDebounced","fn","delay","timerId","context","args","clearTimeout","setTimeout","apply","debounce","_this$props$projectSt","projectStore","prevProps","_this$props$projectSt2","activeNode","GraphView_Node","focused","GraphView_Link","className","viewBox","refX","refY","markerWidth","markerHeight","orient","markerUnits","Link","d3Link","datum","markerEnd","Node","processFocus","d3NodeSelection","isFocused","classed","handleClick","e","sourceNodeId","targetNodeId","currentTarget","dataset","warn","d3Node","_this$props$data","onClick","data-node-id","TagLabels_TagLabels","StyledButton","styled","Button","margin","CustomButton","_ref","_ref$size","size","_ref$variant","variant","children","rest","objectWithoutProperties","assign","noop","Chip","isActive","_ref$toggle","toggle","Chip_Chip","label","backgroundColor","borderColor","onDelete","deleteIcon","HighlightOff_default","CheckCircle_default","renderColor","TagEdit","onNameChange","onColorChange","onEditDone","onDeleteForce","errorMessage","IconButton","Backspace_default","TextField","onChange","renderNameInput","InputLabel","shrink","htmlFor","Select","renderValue","inputProps","MenuItem","renderColorSelect","components_Button","TagPopover","state","editingTag","deletionErrorMessage","renderAvailableTags","activeTags","components_Chip_Chip","toggleTag","handleEditTag","Edit_default","fontSize","deleteTag","tagUsageCount","setState","handleEditTagDone","deleteTagForce","index","indexOf","splice","push","handleCreateNewTag","targetTag","_this$props","anchorEl","handlePopoverClose","TagEdit_TagEdit","newName","newColor","Popover","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Tags","renderActiveTags","handleActivateTagPopover","AddCircle_default","TagPopover_TagPopover","GraphEditPanel","linksHided","focusNodenameInput","nodeNameRef","focus","renderActiveNodeInfo","descriptionContent","Fragment","fullWidth","multiline","handleChangeNodeName","inputRef","ref","handleChangeDescription","handleCloseEditPanel","targetNode","renderLinks","showLinks","items","_loop","sourceNode","ListItem","button","ListItemText","ListItemSecondaryAction","handleDeleteLink","Delete_default","List","subheader","dense","renderDeleteNodeButton","handleDeleteNode","renderNewLinkComponent","handleAbortNewLinkCreation","handleNewLinkTargetSelection","renderNewChildButton","handleNewChildCreation","createNewNode","currentNodeId","Close_default","Tags_Tags","prevState","Save","componentDidMount","addEventListener","handleLeavePage","componentWillUnmount","removeEventListener","handleSave","saveProject","event","warningText","returnValue","SavePanel","handleChangeProjectName","Tooltip","placement","TransitionComponent","Zoom","InfoOutlined_default","placeholder","Save_Save","LOCAL_STORAGE_KEY","requestToken","cb","localStorage","getItem","fieldName","input","inputResult","errMsg","notieInput","setItem","_callee","userGists","regenerator_default","wrap","prev","next","getAllUserGists","sent","abrupt","gist","stop","_callee2","GistSelection","handleSelect","loadProject","handleNewGist","newProject","getSuitableGists","gists","gistElems","SettingsPanel","Slider","defaultValue","c","AppVesion","App","_projectStore","src_graph_GraphView","GraphEditPanel_GraphEditPanel","SavePanel_SavePanel","SettingsPanel_SettingsPanel","gistSelection_GistSelection","location","hostname","match","stores","initSentry","beforeSend","getAfterErrorSnapshot","release","dsn","render","index_module","src_App_0","querySelector","navigator","serviceWorker","ready","registration","unregister"],"mappings":"seAmCA,SAASA,EAAcC,EAAKC,GAC1B,GAAY,SAARD,EAAgB,CAElB,GAAqB,IAAjBC,EAAMC,OAAc,OAExB,OAAOD,EAAME,IAAI,SAAAC,GAAG,OAAIA,EAAIC,OAI9B,IAAIL,EAAIM,WAAW,OAGP,MAARN,GACQ,MAARA,GACQ,OAARA,GACQ,OAARA,GACQ,OAARA,GACQ,OAARA,GACQ,UAARA,GACQ,WAARA,GACQ,WAARA,EAEJ,OAAOC,MAGYM,EAMnB,SAAAA,EAAYC,GAAiB,IAAAC,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAAH,GAAAG,KAL7BG,SAAW,GAKkBH,KAJ7BI,SAAW,GAIkBJ,KAH7BK,YAAc,KAGeL,KAF7BM,YAAc,KAEeN,KAU7BO,iBAAmB,WACjB,IAAMC,EAAMC,KAAKC,UACf,CACEP,SAAUJ,EAAKI,SACfC,SAAUL,EAAKK,SACfC,YAAaN,EAAKM,YAClBC,YAAaP,EAAKO,aAEpBjB,EACA,GAEF,OAAOoB,KAAKE,MAAMH,IArBSR,KAwB7BY,QAAU,SAAAC,GACR,IAAIC,EAAU,CACZnB,KAAMI,EAAKM,YACXU,KAAMF,EACNG,QAAS,GAITC,EAAG,EACHC,EAAG,EACHC,GAAI,EACJC,GAAI,GAIN,OAFArB,EAAKI,SAASJ,EAAKM,aAAeS,EAClCf,EAAKM,cACES,GAvCoBd,KA0C7BqB,WAAa,SAAAC,GAEX,GADAA,EAAOvB,EAAKwB,SAASD,GACjBrB,OAAOuB,KAAKF,EAAKN,SAASxB,OAAS,EACrC,MAAM,IAAIiC,MAAM,kDAGX1B,EAAKI,SAASmB,EAAK3B,OAhDCK,KAmD7B0B,QAAU,SAACC,EAAUC,GAA6B,IAAnBC,EAAmBC,UAAAtC,OAAA,QAAAuC,IAAAD,UAAA,GAAAA,UAAA,GAAZ,QACpC,GAAIH,IAAaC,EACf,MAAM,IAAIH,MAAM,sDAElB,IAAIO,EAAWjC,EAAKI,SAASwB,GAAUX,QACvC,IAAK,IAAIiB,KAAcD,EAAU,CAC/B,IAAME,EAAUF,EAASC,GACzB,GAAIC,EAAQP,WAAaA,GAAYO,EAAQN,WAAaA,EACxD,MAAM,IAAIH,MAAM,iCAIpB,IAAIU,EAAU,CACZxC,KAAMI,EAAKO,YACXuB,OACAF,WACAC,WAEAQ,OAAQT,EACRU,OAAQT,GAMV,OAJA7B,EAAKK,SAASL,EAAKO,aAAe6B,EAClCpC,EAAKI,SAASwB,GAAUX,QAAQjB,EAAKO,aAAe6B,EACpDpC,EAAKI,SAASyB,GAAUZ,QAAQjB,EAAKO,aAAe6B,EACpDpC,EAAKO,cACE6B,GA5EoBnC,KA+E7BsC,WAAa,SAAAC,GACXA,EAAOxC,EAAKyC,SAASD,UACdxC,EAAKK,SAASmC,EAAK5C,aAETI,EAAKI,SAASoC,EAAKZ,UAClBX,QAAQuB,EAAK5C,aACdI,EAAKI,SAASoC,EAAKX,UAClBZ,QAAQuB,EAAK5C,OAtFJK,KA6F7BuB,SAAW,SAAAD,GACT,IAAImB,EAOJ,KALEA,EADkB,kBAATnB,EACAvB,EAAKI,SAASmB,GAEdA,GAGE,MAAM,IAAIG,MAAJ,oBAAAiB,OAA8BpB,IAEjD,OAAOmB,GAvGoBzC,KA8G7BwC,SAAW,SAAAD,GACT,IAAIE,EAOJ,KALEA,EADkB,kBAATF,EACAxC,EAAKK,SAASmC,GAEdA,GAGE,MAAM,IAAId,MAAJ,oBAAAiB,OAA8BH,IAEjD,OAAOE,GAxHoBzC,KA2H7B2C,aAAe,WACb,OAAK5C,EAAKI,SAEHF,OAAO2C,OAAO7C,EAAKI,UAFC,IA5HAH,KAiI7B6C,aAAe,WACb,OAAK9C,EAAKK,SAEHH,OAAO2C,OAAO7C,EAAKK,UAFC,IA/L/B,SAAsBN,GACpB,IAAK,IAAIgD,KAAUhD,EAAgBK,SACtBL,EAAgBK,SAAS2C,GAC/BnD,KAAOoD,OAAOD,GAErB,IAAK,IAAIE,KAAUlD,EAAgBM,SACtBN,EAAgBM,SAAS4C,GAC/BrD,KAAOoD,OAAOC,GAuDnBC,CAAanD,GAnDjB,SAAqBA,GACnB,IAAK,IAAIgD,KAAUhD,EAAgBK,SACtBL,EAAgBK,SAAS2C,GAC/B9B,QAAU,GAEjB,IAAK,IAAIgC,KAAUlD,EAAgBM,SAAU,CAC3C,IAAImC,EAAOzC,EAAgBM,SAAS4C,GAEnBlD,EAAgBK,SAASoC,EAAKZ,UACpCX,QAAQgC,GAAUT,EACZzC,EAAgBK,SAASoC,EAAKX,UACpCZ,QAAQgC,GAAUT,EAG7BA,EAAKH,OAASG,EAAKZ,SACnBY,EAAKF,OAASE,EAAKX,UAqCnBsB,CAAYpD,GAEZE,KAAKG,SAAWL,EAAgBK,SAChCH,KAAKI,SAAWN,EAAgBM,SAChCJ,KAAKK,YAAcP,EAAgBO,YACnCL,KAAKM,YAAcR,EAAgBQ,aCzE1B6C,EAAS,CACpB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGWC,EAAoB,CAC/BC,QAAS,CACPC,EAAG,CAAEC,MAAOJ,EAAO,GAAIpC,KAAM,IAC7ByC,EAAG,CAAED,MAAOJ,EAAO,GAAIpC,KAAM,IAC7B0C,EAAG,CAAEF,MAAOJ,EAAO,GAAIpC,KAAM,IAC7B2C,EAAG,CAAEH,MAAOJ,EAAO,GAAIpC,KAAM,KAE/B4C,WAAY,GCZd,SAAStE,EAAcC,EAAKC,GAE1B,IAAID,EAAIM,WAAW,MAEnB,OAAOL,MAGYqE,EAInB,SAAAA,EAAYC,GAAe,IAAA9D,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAA4D,GAAA5D,KAH3BqD,QAAU,GAGiBrD,KAF3B2D,WAAa,KAEc3D,KAM3BO,iBAAmB,WACjB,IAAMC,EAAMC,KAAKC,UACf,CACE2C,QAAStD,EAAKsD,QACdM,WAAY5D,EAAK4D,YAEnBtE,EACA,GAEF,OAAOoB,KAAKE,MAAMH,IAfOR,KAkB3B8D,IAAM,WAAsD,IACtDC,EAAS,CACXR,MAFwDzB,UAAAtC,OAAA,QAAAuC,IAAAD,UAAA,GAAAA,UAAA,GAA7C/B,EAAKiE,eAGhBjD,KAHwDe,UAAAtC,OAAA,QAAAuC,IAAAD,UAAA,GAAAA,UAAA,GAAd,UAI1CnC,KAAMI,EAAK4D,YAIb,OAFA5D,EAAKsD,QAAQtD,EAAK4D,YAAcI,EAChChE,EAAK4D,aACEI,GA1BkB/D,KA6B3BiE,OAAS,SAAAvE,GACPA,EAAMK,EAAKmE,QAAQxE,UACZK,EAAKsD,QAAQ3D,EAAIC,OA/BCK,KAsC3BkE,QAAU,SAAAxE,GACR,IAAI+C,EAOJ,KALEA,EADiB,kBAAR/C,EACAK,EAAKsD,QAAQ3D,GAEbA,GAGE,MAAM,IAAI+B,MAAJ,mBAAAiB,OAA6BhD,IAEhD,OAAO+C,GAhDkBzC,KAmD3BgE,aAAe,WACb,IAAMG,EAAgBlE,OAAO2C,OAAO7C,EAAKsD,SAAS5D,IAAI,SAAAC,GAAG,OAAIA,EAAI6D,QAEjE,OADkBJ,EAAOiB,OAAO,SAAAb,GAAK,OAAKY,EAAcE,SAASd,KAErD,IACVY,EAAcG,KAAKC,MAAMD,KAAKE,SAAWL,EAAc3E,UAxDhCQ,KA4D3ByE,aAAe,WACb,OAAK1E,EAAKsD,QAEHpD,OAAO2C,OAAO7C,EAAKsD,SAFA,IA/E9B,SAAsBQ,GACpB,IAAK,IAAIa,KAASb,EAAcR,QACpBQ,EAAcR,QAAQqB,GAC5B/E,KAAOoD,OAAO2B,GAgBlBzB,CAAaY,GACb7D,KAAKqD,QAAUQ,EAAcR,QAC7BrD,KAAK2D,WAAaE,EAAcF,qCCvBrB,SAASgB,EAAQC,EAAQC,EAAMC,EAASC,GACrD,OAAO,IAAIC,QAAQ,SAACC,EAASC,GAC3B,IAAIC,EAAM,IAAIC,eACdD,EAAIE,mBAAqB,WACA,IAAnBF,EAAIG,aACa,MAAfH,EAAII,QAAiC,MAAfJ,EAAII,OAC5BN,EAAQE,EAAIK,cAEZN,EAAO,IAAIzD,MAAJ,4BAAAiB,OAAsCyC,EAAII,YAIvDJ,EAAIM,KAAKb,EAAQC,GAAM,GACnBC,GACF7E,OAAOuB,KAAKsD,GAASY,QAAQ,SAAAC,GAC3BR,EAAIS,iBAAiBD,EAAQb,EAAQa,MAGpCZ,EAGHI,EAAIU,KAAKpF,KAAKC,UAAUqE,IAFxBI,EAAIU,SCnBH,IAAMC,EAAU,0BACVC,EAAuB,kBCEfC,aACnB,SAAAA,EAAYC,EAAOC,GACjB,GAD0BjG,OAAAC,EAAA,EAAAD,CAAAD,KAAAgG,IACrBC,EAAO,MAAM,IAAIxE,MAAM,qBAC5BzB,KAAKmG,MAAQ,CAAEC,cAAa,SAAA1D,OAAWuD,IACvCjG,KAAKqG,QAAUH,EAEflG,KAAKsG,OAAS,KACdtG,KAAKuG,aAAe,GACpBvG,KAAKwG,QAAU,gGAGJC,EAAUC,EAAUC,EAAUC,oFACzC5G,KAAK6G,eAAeD,GACdE,EAAM9G,KAAK+G,gBAAgBN,EAAUC,GAC3C1G,KAAKwG,QAAUG,EACfG,EAAIE,OAASL,WACQhC,EAAQ,OAAD,GAAAjC,OAAYoD,EAAZ,SAA4B9F,KAAKmG,MAAOW,UAAhEG,kBAGFC,EAAczG,KAAKE,MAAMsG,2DAEzBE,QAAQC,MAAR,6CAAA1E,OAA2D2E,EAAAC,GAAEC,0BAI1DL,yBAAmB,IAAIzF,MAAM,mDAElCzB,KAAKqG,QAAUa,EAAYM,qBACpBN,6JAGMN,GACb5G,KAAKuG,aAAeK,yEAGTH,EAAUC,oFACfI,EAAM9G,KAAK+G,gBAAgBN,EAAUC,YACtB/B,EACnB,QAD0B,GAAAjC,OAEvBoD,EAFuB,UAAApD,OAEP1C,KAAKqG,SACxBrG,KAAKmG,MACLW,UAJEG,kBAQFC,EAAczG,KAAKE,MAAMsG,yDAEzBE,QAAQC,MAAR,6CAAA1E,OAA2D+E,EAAAH,GAAEC,0BAI3DL,EAAYM,KAAOxH,KAAKqG,+BACpB,IAAI5E,MACR,4FAGGyF,gRAIcvC,EACnB,MAD0B,GAAAjC,OAEvBoD,EAFuB,UAAApD,OAEP1C,KAAKqG,SACxBrG,KAAKmG,MACL,aAJEc,kBAQFC,EAAczG,KAAKE,MAAMsG,yDAEzBE,QAAQC,MAAR,4DAIGF,yBAAmB,IAAIzF,MAAM,mDAElCzB,KAAKuG,aAAeW,EAAYN,YAChC5G,KAAKsG,OAASY,EAAYQ,MAC1B1H,KAAKwG,QAAUU,EAAYF,yBAEpBE,sJAGOT,EAAUC,GAIxB,OAHK1G,KAAKsG,SAAQtG,KAAKsG,OAAS,IAEhCtG,KAAKsG,OAAOG,GAAY,CAAEkB,SAAUlB,EAAUmB,QAASlB,GAChD,CACLE,YAAa5G,KAAKuG,aAClBmB,MAAO1H,KAAKsG,iBC5FLuB,GAAgC,IAIhCC,EAA+B,IAI/BC,EAAqB,CAChC5H,SAAU,CACRmD,EAAG,CAAEvC,KAAM,gBACXyC,EAAG,CAAEzC,KAAM,gBAEbX,SAAU,CACRkD,EAAG,CAAEzB,KAAM,QAASF,SAAU,EAAGC,SAAU,IAE7CvB,YAAa,EACbC,YAAa,GCVA,SAAS0H,EAAgBlI,IAIxC,SAA6BA,GACtBA,EAAgBmI,QACnBnI,EAAgBmI,MAAQ,CACtB9H,SAAUL,EAAgBK,SAC1BC,SAAUN,EAAgBM,SAC1BC,YAAaP,EAAgBO,YAC7BC,YAAaR,EAAgBQ,oBAExBR,EAAgBK,gBAChBL,EAAgBM,gBAChBN,EAAgBO,mBAChBP,EAAgBQ,aAEpBR,EAAgBoI,OACnBpI,EAAgBoI,KAAO,CACrBC,cAAeN,EACfO,cAAeN,EACfO,cAGCvI,EAAgBwI,OACnBxI,EAAgBwI,KAAOlF,GAxBzBmF,CAAoBzI,8CCuBtB,SAAS0I,EAAmBnG,EAAQoG,EAAeC,GACjD,GAAIrG,EAAOsG,cAAgB1I,OAAQ,OAAO,EAG1C,IADA,IAAM2I,EAAe3I,OAAOuB,KAAKiH,GACxBI,EAAI,EAAGA,EAAID,EAAapJ,OAAQqJ,IAAK,CAC5C,IAAMC,EAAWF,EAAaC,GAC9B,IAAKxG,EAAO0G,eAAeD,GAAW,OAAO,EAE7C,GAAgC,WAA5BL,EAAcK,IAChB,GAAIzG,EAAOyG,GAAUH,cAAgB1I,OAAQ,OAAO,OAEpD,UAAWoC,EAAOyG,KAAcL,EAAcK,GAAW,OAAO,EAIpE,GAAIJ,EAEF,IADA,IAAMM,EAAe/I,OAAOuB,KAAKkH,GACxBG,EAAI,EAAGA,EAAIG,EAAaxJ,OAAQqJ,IAAK,CAC5C,IAAMC,EAAWE,EAAaH,GAC9B,GAAIxG,EAAO0G,eAAeD,WACbzG,EAAOyG,KAAcJ,EAAcI,GAAW,OAAO,EAKtE,OAAO,ECxCF,QCPHG,EDOSC,GAAbC,EAAA,oBAAAD,IAAA,IAAAnJ,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAAkJ,GAAAlJ,KACEoJ,YAAc,KADhBnJ,OAAAoJ,EAAA,EAAApJ,CAAAD,KAAA,QAAAsJ,EAAAtJ,WAIEuJ,UAAY,KAJdtJ,OAAAoJ,EAAA,EAAApJ,CAAAD,KAAA,gBAAAwJ,EAAAxJ,MAAAC,OAAAoJ,EAAA,EAAApJ,CAAAD,KAAA,WAAAyJ,EAAAzJ,MAAAC,OAAAoJ,EAAA,EAAApJ,CAAAD,KAAA,eAAA0J,EAAA1J,WAqBE2J,YAAc,KArBhB3J,KAwCE4J,iBAAmB,SAAAC,GACjB,IAEIC,EACAhK,ED5DmCiK,ECyDnCC,EAAsBH,EAASnC,MAAM3B,GAAsB6B,QACzDqC,EAAcJ,EAASjD,YAG7B,IAEEoB,EADAlI,EAAkBW,KAAKE,MAAMqJ,ID5D9BxB,GAFsCuB,ECgEbjK,GD9DKmI,MAAO,CACpC9H,SAAU,SACVC,SAAU,SACVC,YAAa,SACbC,YAAa,YAMdkI,EAAmBuB,EAAWzB,KAAM,CACnCjF,QAAS,SACTM,WAAY,YAMb6E,EAAmBuB,EAAW7B,KAAM,CACnCC,cAAe,SACfC,cAAe,SACfC,QAAS,aC0CPyB,EAAQ,mBAAApH,OAAsBuH,GAC5B,WADM,8BAGV,MAAOC,GACPJ,EAAQ,YAAApH,OAAeuH,GACrB,WADM,0CAINH,EACFK,IAAMC,MAAM,CAAEvI,KAAM,QAASwI,KAAMP,KAIrC/J,EAAKkK,YAAcA,EACnBlK,EAAKuK,cAAgB,IAAI1G,EAAc9D,EAAgBwI,MACvDvI,EAAKwJ,UAAY,IAAI1J,EAAMC,EAAgBmI,OAE3ClI,EAAKwJ,UAAU5G,eAAe+C,QAAQ,SAAApE,GAChCA,EAAKgH,OACPhH,EAAKgH,KAAOhH,EAAKgH,KAAK7I,IAAI,SAAAiF,GAAK,OAAI3E,EAAKuK,cAAcpG,QAAQQ,QAGlE3E,EAAKoI,cAAgBrI,EAAgBoI,KAAKC,cAC1CpI,EAAKqI,cAAgBtI,EAAgBoI,KAAKE,cAC1CrI,EAAKwK,UAAW,IAzEpBvK,KA4EEwK,qBAAuB,SAACC,EAAmBC,GAIzC,MAAO,CACLzC,MAJcwC,GAAqB1K,EAAKwJ,UAAUhJ,mBAKlD+H,KAHAoC,GAAoB3K,EAAKuK,cAAc/J,mBAIvC2H,KAAM,CACJC,cAAepI,EAAKoI,cACpBC,cAAerI,EAAKqI,cACpBC,QAASsC,OAtFjB1K,OAAAoJ,EAAA,EAAApJ,CAAAD,KAAA,cAAA4K,EAAA5K,MAAAC,OAAAoJ,EAAA,EAAApJ,CAAAD,KAAA,6BAAA6K,EAAA7K,MAAAC,OAAAoJ,EAAA,EAAApJ,CAAAD,KAAA,cAAA8K,EAAA9K,MAAAC,OAAAoJ,EAAA,EAAApJ,CAAAD,KAAA,mBAAA+K,EAAA/K,MAAAC,OAAAoJ,EAAA,EAAApJ,CAAAD,KAAA,gBAAAgL,EAAAhL,MAAAC,OAAAoJ,EAAA,EAAApJ,CAAAD,KAAA,gBAAAiL,EAAAjL,MAAA,OAAAC,OAAAiL,EAAA,EAAAjL,CAAAiJ,EAAA,EAAA5J,IAAA,cAAAC,MAAA,SAsBsB2G,GAClBlG,KAAK2J,YAAc,IAAI3D,EAAKhG,KAAKoJ,YAAalD,GAC9ClG,KAAK2J,YAAYwB,OAAOC,KAAKpL,KAAK4J,oBAxBtC,CAAAtK,IAAA,aAAAC,MAAA,WA4BIS,KAAK2J,YAAc,IAAI3D,EAAKhG,KAAKoJ,aACjC,IAAMiC,EAAerL,KAAKwK,qBACxBzC,EACA3E,GAEIkI,EAAY7K,KAAKC,UAAU2K,EAAc,KAAM,GACrDrL,KAAK2J,YACF4B,OAAOxF,EAAsBuF,GAAW,EAAO,aAC/CF,KAAKpL,KAAK4J,oBApCjB,CAAAtK,IAAA,cAAAC,MAAA,WA2FwB,IAAAiM,EAAAxL,KAChByC,EAASzC,KAAKwK,uBACZiB,EAAahL,KAAKC,UAAU+B,EAAQ,KAAM,GAChDzC,KAAK2J,YACF+B,OAAO3F,EAAsB0F,GAC7BL,KAAK,SAAAlE,GACJsE,EAAKG,iBAAmBH,EAAKI,gBAjGrC,CAAAtM,IAAA,wBAAAC,MAAA,WA2HI,MAAO,CACLgK,UAAWvJ,KAAKuJ,UAAYvJ,KAAKuJ,UAAUhJ,mBAAqB,KAChE+J,cAAetK,KAAKsK,cAChBtK,KAAKsK,cAAc/J,mBACnB,KACJ4H,cAAenI,KAAKmI,cACpBC,cAAepI,KAAKoI,cACpByD,2BAA4B7L,KAAK6L,2BACjCD,YAAa5L,KAAK4L,YAClBD,iBAAkB3L,KAAK2L,iBACvBzF,OAAQlG,KAAK2J,YAAYtD,WArI/B,CAAA/G,IAAA,cAAAwM,IAAA,WASI,OAAO9L,KAAK+L,cAThBC,IAAA,SAWkBC,GACdjM,KAAK+L,aAAeE,EACpBjM,KAAK2J,YAAY9C,eAAeoF,GAChCC,SAASC,MAAQF,EAAI,oBAdzB,CAAA3M,IAAA,WAAAwM,IAAA,WAkBI,OAAO9L,KAAK2J,YAAYnD,UAlB5B,CAAAlH,IAAA,aAAAwM,IAAA,WAuGI,OAAO9L,KAAKoM,aAvGhBJ,IAAA,SAyGiBC,GACTjM,KAAKoM,cACPpM,KAAKuJ,UAAUhI,SAASvB,KAAKoM,aAAaC,WAAY,GAEpDJ,IACFjM,KAAKuJ,UAAUhI,SAAS0K,GAAGI,WAAY,GAEzCrM,KAAKoM,YAAcH,MAhHvB/C,EAAA,GAAAI,EAAArJ,OAAAqM,EAAA,EAAArM,CAAAkJ,EAAAoD,UAAA,SAEGC,KAFH,CAAAC,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,kBAEsB,QAFtBpD,EAAAvJ,OAAAqM,EAAA,EAAArM,CAAAkJ,EAAAoD,UAAA,iBAKGC,KALH,CAAAC,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,kBAK8B,QAL9BnD,EAAAxJ,OAAAqM,EAAA,EAAArM,CAAAkJ,EAAAoD,UAAA,YAMGC,KANH,CAAAC,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,kBAMyB,KANzBlD,EAAAzJ,OAAAqM,EAAA,EAAArM,CAAAkJ,EAAAoD,UAAA,gBAOGC,KAPH,CAAAC,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,iBAO6B,MAP7B3M,OAAAqM,EAAA,EAAArM,CAAAkJ,EAAAoD,UAAA,eAsBGM,KAtBH5M,OAAA6M,yBAAA3D,EAAAoD,UAAA,eAAApD,EAAAoD,WAAAtM,OAAAqM,EAAA,EAAArM,CAAAkJ,EAAAoD,UAAA,cA2BGM,KA3BH5M,OAAA6M,yBAAA3D,EAAAoD,UAAA,cAAApD,EAAAoD,WAAAtM,OAAAqM,EAAA,EAAArM,CAAAkJ,EAAAoD,UAAA,eA2FGM,KA3FH5M,OAAA6M,yBAAA3D,EAAAoD,UAAA,eAAApD,EAAAoD,WAAA3B,EAAA3K,OAAAqM,EAAA,EAAArM,CAAAkJ,EAAAoD,UAAA,eAqGGC,KArGH,CAAAC,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,kBAqG4B,QArG5B/B,EAAA5K,OAAAqM,EAAA,EAAArM,CAAAkJ,EAAAoD,UAAA,8BAmHGC,KAnHH,CAAAC,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,kBAmH2C,KAnH3C9B,EAAA7K,OAAAqM,EAAA,EAAArM,CAAAkJ,EAAAoD,UAAA,eAoHGC,KApHH,CAAAC,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,kBAoH4B,KApH5B7B,EAAA9K,OAAAqM,EAAA,EAAArM,CAAAkJ,EAAAoD,UAAA,oBAqHGC,KArHH,CAAAC,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,kBAqHiC,KArHjC5B,EAAA/K,OAAAqM,EAAA,EAAArM,CAAAkJ,EAAAoD,UAAA,iBAuHGC,KAvHH,CAAAC,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,kBAuH8B/E,KAvH9BoD,EAAAhL,OAAAqM,EAAA,EAAArM,CAAAkJ,EAAAoD,UAAA,iBAwHGC,KAxHH,CAAAC,cAAA,EAAAC,YAAA,EAAAC,UAAA,EAAAC,YAAA,kBAwH8B9E,KAxH9BqB,8DEZM4D,oLACK,IACCzE,EAAStI,KAAKgN,MAAd1E,KACR,OAAKA,EAEEA,EAAK7I,IAAI,SAACC,EAAKuN,GAAN,OACdC,EAAAC,EAAAC,cAAA,QACEC,MATgB,GAUhBC,OAAQ,EACRC,GAAI,EACJC,GAAI,EACJvM,EAAM,GAAHgM,EAA8B,GACjC/L,GAAI,GACJuM,MAAO,CAAEC,KAAMhO,EAAI6D,WAVL,YAHEoK,oBDMxB1E,EAAS,SAAS2E,GAChB,IAAIP,EAAQQ,OAAOC,WACjBR,EAASO,OAAOE,YAyChBC,EAAa,SAAAC,GACXA,EACGC,KAAK,YAAa,SAAAC,GAAC,MAAI,aAAeA,EAAElN,EAAI,IAAMkN,EAAEjN,EAAI,MACxDgN,KAAK,KAAM,SAAAC,GAAC,OAAKA,EAAElN,EAAIqD,KAAK8J,IAAI,GAAI9J,KAAK+J,IAAIhB,EAAQ,GAAIc,EAAElN,MAC3DiN,KAAK,KAAM,SAAAC,GAAC,OAAKA,EAAEjN,EAAIoD,KAAK8J,IAAI,GAAI9J,KAAK+J,IAAIf,EAAS,GAAIa,EAAEjN,OAKjEoN,EAAa,SAAAL,GACXA,EACGC,KAAK,KAAM,SAAAC,GAAC,OAAIA,EAAE/L,OAAOnB,IACzBiN,KAAK,KAAM,SAAAC,GAAC,OAAIA,EAAE/L,OAAOlB,IACzBgN,KAAK,KAAM,SAAAC,GAAC,OAAIA,EAAE9L,OAAOpB,IACzBiN,KAAK,KAAM,SAAAC,GAAC,OAAIA,EAAE9L,OAAOnB,KAE9BqN,EAAc,SAAAN,GACZA,EAAUO,UAAU,SAASC,KAAKT,GAClCC,EAAUO,UAAU,SAASC,KAAKH,IAEpCI,EAAc,SAAAP,GACPQ,KAASC,QAAQhB,EAAIiB,MAAMC,YAAY,IAAKC,UAEjDZ,EAAEa,GAAKb,EAAElN,EACTkN,EAAEc,GAAKd,EAAEjN,GAEXgO,EAAW,SAAAf,GACTA,EAAEa,GAAKL,KAAS1N,EAChBkN,EAAEc,GAAKN,KAASzN,GAElBiO,EAAY,SAAAhB,GACLQ,KAASC,QAAQhB,EAAIiB,MAAMC,YAAY,GAE5CX,EAAEa,GAAK,KACPb,EAAEc,GAAK,MA+BX,OAdArB,EAAIP,MAAQA,EACZO,EAAIN,OAASA,EACbM,EAAIwB,UAvEU,SAAAnB,GACVA,EACGoB,OAAO,UACPnB,KAAK,IAAK,IACVT,MAAM,OAAQ,UACdA,MAAM,SAAU,UAChBA,MAAM,eAAgB,OAEzBQ,EACGoB,OAAO,QACP5B,MAAM,OAAQ,YACdA,MAAM,cAAe,OACrBA,MAAM,iBAAkB,aACxBA,MAAM,cAAe,UACrBA,MAAM,qBAAsB,UAC5BA,MAAM,YAAa,QACnBA,MAAM,cAAe,YAwD5BG,EAAII,WAAaA,EACjBJ,EAAI0B,UAjDU,SAAArB,GACVA,EAAUC,KAAK,eAAgB,GAAGA,KAAK,SAAU,WAiDrDN,EAAIU,WAAaA,EACjBV,EAAIW,YAAcA,EAClBX,EAAI2B,UAjGU,SAACC,EAAOC,EAAOC,GAAiB,IAClCC,EAAuBD,EAAvBC,SAAUC,EAAaF,EAAbE,SAClBhC,EAAIiB,MAAQF,KACOa,GAChBX,MAAM,SAAUF,OAAmBgB,SAASA,IAC5Cd,MACC,OACAF,KACac,GACVjI,GAAG,SAAA2G,GAAC,OAAIA,EAAExO,OACViQ,SAASA,IAEbf,MACC,SACAF,OAEG1N,EAAE2M,EAAIP,MAAQ,GACdnM,EAAE0M,EAAIN,OAAS,IAEnBuB,MAAM,UAAWF,KAAgB,CAAC,IAAIkB,WAAW,CAAC,MA+EzDjC,EAAIc,YAAcA,EAClBd,EAAIsB,SAAWA,EACftB,EAAIuB,UAAYA,EAChBvB,EAAIkC,SA1BS,kBACTnB,KAAa,UAAUF,KACrBE,OAEGoB,GAAG,QAASrB,GACZqB,GAAG,OAAQb,GACXa,GAAG,MAAOZ,KAqBnBvB,EAAIoC,SAnBS,SAAAC,GACTA,EAAKC,QAAUvB,KAAUwB,IAASC,YAAYH,IAC9CrC,EAAIiB,MAAMkB,GAAG,OAAQ,WACnBE,EAAKC,QAAQzB,KAAKF,MAkBjBX,EA5GA,CA6GN3E,GAAS,0BAINoH,GAFLC,YAAO,kBACPC,yNA0BCC,YAAc,SAACjH,EAAWmG,GACxBzG,EAAMsG,UACJhG,EAAU5G,eACV4G,EAAU1G,eACV6M,GAEFzG,EAAM+G,SAAN/P,OAAAwQ,EAAA,EAAAxQ,QAAAwQ,EAAA,EAAAxQ,CAAAF,KACAkJ,EAAM6G,cAGRY,qBE9Ja,SAAkBC,EAAIC,GACnC,IAAIC,EACJ,OAAO,WACL,IAAIC,EAAU9Q,KACV+Q,EAAOjP,UACP+O,GACFG,aAAaH,GAEfA,EAAUI,WAAW,WACnBN,EAAGO,MAAMJ,EAASC,GAClBF,EAAU,MACTD,IFmJkBO,CAASpR,EAAKyQ,YAAa,wFAlC9B,IAAAY,EAGdpR,KAAKgN,MADPqE,aAAgB9H,EAFA6H,EAEA7H,UAAWpB,EAFXiJ,EAEWjJ,cAAeC,EAF1BgJ,EAE0BhJ,cAE5CpI,KAAKwQ,YAAYjH,EAAW,CAC1BoG,SAAUxH,EACVyH,SAAUxH,+CAIKkJ,GAAW,IACpB/H,EAAcvJ,KAAKgN,MAAMqE,aAAzB9H,UAEN+H,EAAU1F,cAAgB5L,KAAKgN,MAAMpB,aACrC0F,EAAUnJ,gBAAkBnI,KAAKgN,MAAM7E,eACvCmJ,EAAUlJ,gBAAkBpI,KAAKgN,MAAM5E,eAEvCpI,KAAK0Q,qBAAqBnH,EAAW,CACnCoG,SAAU3P,KAAKgN,MAAM7E,cACrByH,SAAU5P,KAAKgN,MAAM5E,iDAiBlB,IAAAmJ,EAG2BvR,KAAKgN,MAAMqE,aAArC9H,EAHDgI,EAGChI,UACJiG,GAJG+B,EAGYC,WACPjI,EAAU5G,eAAelD,IAAI,SAAA6B,GACvC,OACE4L,EAAAC,EAAAC,cAACqE,GAAD,CACEnS,IAAKgC,EAAK3B,KACVoB,KAAMO,EAAKP,KACXgE,KAAMzD,EACNoQ,QAASpQ,EAAK+K,eAIhBoD,EAAQlG,EAAU1G,eAAepD,IAAI,SAAA8C,GACvC,OAAO2K,EAAAC,EAAAC,cAACuE,GAAD,CAAMrS,IAAKiD,EAAK5C,KAAMoF,KAAMxC,MAErC,OACE2K,EAAAC,EAAAC,cAAA,OAAKwE,UAAU,mBACb1E,EAAAC,EAAAC,cAAA,OAAKwE,UAAU,QAAQvE,MAAOpE,EAAMoE,MAAOC,OAAQrE,EAAMqE,QACvDJ,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,UACE5F,GAAG,QACHqK,QAAQ,YACRC,KAAK,KACLC,KAAK,IACLC,YAAY,IACZC,aAAa,IACbC,OAAO,qBACPC,YAAY,eAEZjF,EAAAC,EAAAC,cAAA,QAAMe,EAAE,4BAGZjB,EAAAC,EAAAC,cAAA,SAAIqC,GACJvC,EAAAC,EAAAC,cAAA,SAAIoC,YAxEU7B,qBA+ElByE,+LAEFpS,KAAKqS,OAAS1D,KACJwB,IAASC,YAAYpQ,OAC5BsS,MAAMtS,KAAKgN,MAAMjI,MACjB0J,KAAKxF,EAAMqG,wDAIdtP,KAAKqS,OAAOC,MAAMtS,KAAKgN,MAAMjI,MAAM0J,KAAKxF,EAAMqF,6CAI9C,OAAOpB,EAAAC,EAAAC,cAAA,QAAMwE,UAAU,OAAOW,UAAU,yBAbzB5E,aAmBb6E,GAFLlC,YAAO,kBACPC,yNAiBCkC,aAAe,SAACC,EAAiBC,GAC/BD,EAAgBrD,OAAO,UAAUuD,QAAQ,UAAWD,MActDE,YAAc,SAAAC,GAAK,IACTzB,EAAiB7F,EAAKwB,MAAtBqE,aACR,GAAKA,EAAaxF,2BAAlB,CAMA,IAAMkH,EAAe1B,EAAaG,WAC5BwB,EAAejQ,OAAO+P,EAAEG,cAAcC,QAAQpQ,QACpD,IACEuO,EAAa9H,UAAU7H,QAAQqR,EAAcC,EAAc,SAC3D,MAAOF,GAEP,YADA3L,QAAQgM,KAAKL,EAAEvL,SAGjB8J,EAAaxF,4BAA6B,EAC1CwF,EAAazF,mBAdXyF,EAAaG,WAAazO,OAAO+P,EAAEG,cAAcC,QAAQpQ,4FAhC3D9C,KAAKoT,OAASzE,KACJwB,IAASC,YAAYpQ,OAC5BsS,MAAMtS,KAAKgN,MAAMjI,MACjB0J,KAAKxF,EAAMmG,WACXX,KAAKzO,KAAKyS,aAAczS,KAAKgN,MAAM0E,sDAItC1R,KAAKoT,OACFd,MAAMtS,KAAKgN,MAAMjI,MACjB0J,KAAKxF,EAAM+E,YACXS,KAAKzO,KAAKyS,aAAczS,KAAKgN,MAAM0E,0CAO/B,IAAA2B,EACgBrT,KAAKgN,MAAMjI,KAA1BpF,EADD0T,EACC1T,KAAM2I,EADP+K,EACO/K,KACd,OACE4E,EAAAC,EAAAC,cAAA,KAAGwE,UAAU,OAAO0B,QAAStT,KAAK6S,YAAaU,eAAc5T,GAC3DuN,EAAAC,EAAAC,cAAA,eACAF,EAAAC,EAAAC,cAAA,YAAOpN,KAAKgN,MAAMjI,KAAKhE,MACvBmM,EAAAC,EAAAC,cAACoG,GAAD,CAAWlL,KAAMA,YA1BNqF,qBAoDJ0C,gJG7QToD,GAAeC,aAAOC,KAAPD,CAAe,CAClCE,OAAQ,QAgBKC,GAbM,SAAAC,GAKf,IAAAC,EAAAD,EAJJE,YAII,IAAAD,EAJG,QAIHA,EAAAE,EAAAH,EAHJI,eAGI,IAAAD,EAHM,YAGNA,EAFJE,EAEIL,EAFJK,SACGC,EACCnU,OAAAoU,GAAA,EAAApU,CAAA6T,EAAA,+BACJ,OACE5G,EAAAC,EAAAC,cAACqG,GAADxT,OAAAqU,OAAA,CAAcN,KAAMA,EAAME,QAASA,GAAaE,GAC7CD,0ECXDI,GAAO,aAEPC,GAAO,SAAAV,GAA8C,IAA3C/S,EAA2C+S,EAA3C/S,KAAMwC,EAAqCuQ,EAArCvQ,MAAOkR,EAA8BX,EAA9BW,SAA8BC,EAAAZ,EAApBa,cAAoB,IAAAD,EAAXH,GAAWG,EACzD,OACExH,EAAAC,EAAAC,cAACwH,GAAA,EAAD,CACEZ,KAAK,QACLa,MAAO9T,GAAQ,UACfmT,QAASO,OAAW,EAAS,WAC7BhH,MAAO,CACLmG,OAAQ,EACRkB,gBAAiBL,EAAWlR,EAAQ,QACpCwR,YAAaxR,GAEf+P,QAASqB,EACTK,SAAUL,EACVM,WAAYR,EAAWvH,EAAAC,EAAAC,cAAC8H,GAAA/H,EAAD,MAAuBD,EAAAC,EAAAC,cAAC+H,GAAAhI,EAAD,yFCT9CiI,WAAc,SAAA7R,GAAK,OACvB2J,EAAAC,EAAAC,cAAA,QAAMwE,UAAU,QAAQnE,MAAO,CAAEqH,gBAAiBvR,IAC/CA,KA2CC8R,GAAU,SAAAvB,GASV,IARJ/S,EAQI+S,EARJ/S,KACAwC,EAOIuQ,EAPJvQ,MACA+R,EAMIxB,EANJwB,aACAC,EAKIzB,EALJyB,cACAC,EAII1B,EAJJ0B,WACAR,EAGIlB,EAHJkB,SACAS,EAEI3B,EAFJ2B,cACAC,EACI5B,EADJ4B,aAEA,OACExI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKwE,UAAU,SACb1E,EAAAC,EAAAC,cAAA,QAAMwE,UAAU,iBAAhB,aACA1E,EAAAC,EAAAC,cAAA,QAAMwE,UAAU,sBACd1E,EAAAC,EAAAC,cAACuI,GAAA,EAAD,CAAYrC,QAASkC,EAAYxB,KAAK,SACpC9G,EAAAC,EAAAC,cAACwI,GAAAzI,EAAD,SAvDY,SAACpM,EAAMuU,GAC7B,OACEpI,EAAAC,EAAAC,cAAA,OAAKwE,UAAU,WACb1E,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CACEhB,MAAM,WACNX,QAAQ,WACRN,OAAO,QACPrU,MAAOwB,EACP+U,SAAU,SAAAhD,GAAC,OAAIwC,EAAaxC,EAAEzQ,OAAO9C,WAmDtCwW,CAAgBhV,EAAMuU,GA7CH,SAAC/R,EAAOgS,GAChC,OACErI,EAAAC,EAAAC,cAAA,OAAKwE,UAAU,WACb1E,EAAAC,EAAAC,cAAC4I,GAAA,EAAD,CAAYC,QAAM,EAACC,QAAQ,oBAA3B,aAGAhJ,EAAAC,EAAAC,cAAC+I,GAAA,EAAD,CACEjC,QAAQ,WACRkC,YAAahB,GACb7V,MAAOgE,EACPuS,SAAU,SAAAhD,GAAC,OAAIyC,EAAczC,EAAEzQ,OAAO9C,QACtC8W,WAAY,CACV7O,GAAI,qBAGLrE,EAAO1D,IAAI,SAAA8D,GAAK,OACf2J,EAAAC,EAAAC,cAACkJ,GAAA,EAAD,CAAU/W,MAAOgE,EAAOjE,IAAKiE,GAC1B6R,GAAY7R,QA6BlBgT,CAAkBhT,EAAOgS,GAC1BrI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoJ,GAAD,CAAQlD,QAASkC,GAAjB,SAEFtI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoJ,GAAD,CAAQlD,QAAS0B,EAAUzR,MAAM,aAAjC,2BAIDmS,EACCxI,EAAAC,EAAAC,cAAA,OAAKwE,UAAU,WACb1E,EAAAC,EAAAC,cAAA,OAAKwE,UAAU,gBAAgB8D,IAE/B,KACJxI,EAAAC,EAAAC,cAACoJ,GAAD,CAAQlD,QAASmC,EAAelS,MAAM,aAAtC,kCC1EAkT,WAFLnG,YAAO,mBACPC,0NAECmG,MAAQ,CAAEC,WAAY,KAAMC,qBAAsB,QAoDlDC,oBAAsB,SAACvM,EAAehJ,GACpC,IAAMgH,EAAOgC,EAAc7F,eAC3B,IAAK6D,EAAK9I,OAAQ,MAAO,4BAEzB,IAAMsX,EAAaxV,EAAKgH,MAAQhH,EAAKgH,KAAK9I,OAAS8B,EAAKgH,KAAO,GAC/D,OAAOA,EAAK7I,IAAI,SAAAC,GAAG,OACjBwN,EAAAC,EAAAC,cAAA,OAAKwE,UAAU,eAAetS,IAAKI,EAAIC,MACrCuN,EAAAC,EAAAC,cAAC2J,GAAD,CACEhW,KAAMrB,EAAIqB,KACVwC,MAAO7D,EAAI6D,MACXkR,SAAUqC,EAAWzS,SAAS3E,GAC9BiV,OAAQ,kBAAM5U,EAAKiX,UAAUtX,EAAK4B,MAEpC4L,EAAAC,EAAAC,cAACuI,GAAA,EAAD,CAAYrC,QAAS,kBAAMvT,EAAKkX,cAAcvX,IAAMsU,KAAK,SACvD9G,EAAAC,EAAAC,cAAC8J,GAAA/J,EAAD,CAAUgK,SAAS,iBAM3BC,UAAY,SAAA1X,GAAO,IACT2R,EAAiBtR,EAAKiN,MAAtBqE,aACA/G,EAA6B+G,EAA7B/G,cAAef,EAAc8H,EAAd9H,UACvB7J,EAAM4K,EAAcpG,QAAQxE,GAC5B,IAAI2X,EAAgB9N,EACjB5G,eACAyB,OAAO,SAAA9C,GAAI,OAAIA,EAAKgH,MAAQhH,EAAKgH,KAAKjE,SAAS3E,KAAMF,OACpD6X,EAAgB,EAClBtX,EAAKuX,SAAS,CACZV,qBAAoB,eAAAlU,OAAiB2U,EAAjB,aAKxBtX,EAAKuX,SAAS,CAAEV,qBAAsB,OACtCtM,EAAcrG,OAAOvE,GACrBK,EAAKwX,oBACLlG,EAAazF,kBAIf4L,eAAiB,SAAA9X,GAAO,IACd2R,EAAiBtR,EAAKiN,MAAtBqE,aACA/G,EAA6B+G,EAA7B/G,cAAef,EAAc8H,EAAd9H,UACvB7J,EAAM4K,EAAcpG,QAAQxE,GAC5B6J,EAAU5G,eAAe+C,QAAQ,SAAApE,GAC/B,GAAKA,EAAKgH,KAAV,CAEA,IAAMmP,EAAQnW,EAAKgH,KAAKoP,QAAQhY,IACjB,IAAX+X,GAEJnW,EAAKgH,KAAKqP,OAAOF,EAAO,MAG1B1X,EAAKuX,SAAS,CAAEV,qBAAsB,OACtCtM,EAAcrG,OAAOvE,GACrBK,EAAKwX,oBACLlG,EAAazF,iBAGfoL,UAAY,SAACtX,EAAK4B,GAChB,GAAKA,EAAKgH,KAEH,CACL,IAAM2E,EAAM3L,EAAKgH,KAAKoP,QAAQhY,IACrB,IAATuN,EAAa3L,EAAKgH,KAAKsP,KAAKlY,GAAO4B,EAAKgH,KAAKqP,OAAO1K,EAAK,QAHzD3L,EAAKgH,KAAO,CAAC5I,GAMfK,EAAKiN,MAAMqE,aAAazF,iBAG1BiM,mBAAqB,WAAM,IACjBxG,EAAiBtR,EAAKiN,MAAtBqE,aACJtN,EAASsN,EAAa/G,cAAcxG,MACxCuN,EAAazF,cACb7L,EAAKuX,SAAS,CAAEX,WAAY5S,EAAQ6S,qBAAsB,UAG5DK,cAAgB,SAAAa,GACd/X,EAAKuX,SAAS,CAAEX,WAAYmB,EAAWlB,qBAAsB,UAG/DW,kBAAoB,WAClBxX,EAAKuX,SAAS,CAAEX,WAAY,KAAMC,qBAAsB,gFArIjD,IAAApL,EAAAxL,KAAA+X,EACsD/X,KAAKgN,MAA1DgL,EADDD,EACCC,SAAUC,EADXF,EACWE,mBAAoB3W,EAD/ByW,EAC+BzW,KAAM+P,EADrC0G,EACqC1G,aAGpC/G,EAA+B+G,EAA/B/G,cACFqM,GADiCtF,EAAhBzF,YACF5L,KAAK0W,MAApBC,YACA/O,EAAU+O,EACdzJ,EAAAC,EAAAC,cAAC8K,GAAD,CACEnX,KAAM4V,EAAW5V,KACjBwC,MAAOoT,EAAWpT,MAClB+R,aAAc,SAAA6C,GACZxB,EAAW5V,KAAOoX,EAClB9G,EAAazF,eAEf2J,cAAe,SAAA6C,GACbzB,EAAWpT,MAAQ6U,EACnB/G,EAAazF,eAEf4J,WAAYxV,KAAKuX,kBACjBvC,SAAU,WACRxJ,EAAK4L,UAAUT,IAEjBlB,cAAe,WACbjK,EAAKgM,eAAeb,IAEtBjB,aAAc1V,KAAK0W,MAAME,uBAG3B1J,EAAAC,EAAAC,cAAA,OAAKwE,UAAU,iBACZ5R,KAAK6W,oBAAoBvM,EAAehJ,GACzC4L,EAAAC,EAAAC,cAACoJ,GAAD,CAAQlD,QAAStT,KAAK6X,oBAAtB,mBAGJ,OACE3K,EAAAC,EAAAC,cAACiL,GAAA,EAAD,CACE5S,KAAM6S,QAAQN,GACdA,SAAUA,EACVO,QAAS,WACP/M,EAAK+L,oBACLU,KAEFO,aAAc,CAAEC,SAAU,MAAOC,WAAY,QAC7CC,gBAAiB,CAAEF,SAAU,SAAUC,WAAY,SAEnDxL,EAAAC,EAAAC,cAAA,OAAKwE,UAAU,oBAAf,QACChK,UAhDgB+F,wBCFnBiL,WAFLtI,YAAO,mBACPC,0NAECmG,MAAQ,CAAEsB,SAAU,QA6BpBa,iBAAmB,SAAAvQ,GACjB,OAAOA,EAAK7I,IAAI,SAAAC,GAAG,OACjBwN,EAAAC,EAAAC,cAAC2J,GAAD,CACEzX,IAAKI,EAAIC,KACToB,KAAMrB,EAAIqB,KACVwC,MAAO7D,EAAI6D,MACXkR,UAAU,EACVE,OAAQ5U,EAAK+Y,gCAKnBb,mBAAqB,WACnBlY,EAAKuX,SAAS,CAAEU,SAAU,UAG5Bc,yBAA2B,SAAAhG,GACzB/S,EAAKuX,SAAS,CAAEU,SAAUlF,EAAEG,yFA5CrB,IACD3R,EAAStB,KAAKgN,MAAd1L,KACFwV,EAAa,KACbxV,EAAKgH,MAAQhH,EAAKgH,KAAK9I,SACzBsX,EAAa9W,KAAK6Y,iBAAiBvX,EAAKgH,OAJnC,IAOC0P,EAAahY,KAAK0W,MAAlBsB,SACR,OACE9K,EAAAC,EAAAC,cAAA,OAAKwE,UAAU,QACZkF,EACAA,EACC5J,EAAAC,EAAAC,cAACuI,GAAA,EAAD,CAAYrC,QAAStT,KAAK8Y,yBAA0B9E,KAAK,SACvD9G,EAAAC,EAAAC,cAAC2L,GAAA5L,EAAD,OAGFD,EAAAC,EAAAC,cAACoJ,GAAD,CAAQlD,QAAStT,KAAK8Y,0BAAtB,eAEF5L,EAAAC,EAAAC,cAAC4L,GAAD,CACEhB,SAAUA,EACV1W,KAAMA,EACN2W,mBAAoBjY,KAAKiY,6BAxBhBtK,wBCCbsL,GAFL3I,YAAO,mBACPC,0NAECmG,MAAQ,CAAElF,WAAY,KAAM0H,YAAY,KAiExCC,mBAAqB,WACfpZ,EAAKqZ,aACPnI,WAAW,WACTlR,EAAKqZ,YAAYC,SAChB,QAIPC,qBAAuB,SAAAhY,GACrB,IAAMiY,EAAqBjY,EAAKsF,YAActF,EAAKsF,YAAc,GACjE,OACEsG,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqM,SAAA,KACEtM,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CACEhB,MAAM,YACN4E,WAAS,EACTC,WAAS,EACTxF,QAAQ,WACRN,OAAO,SACPrU,MAAO+B,EAAKP,KACZ+U,SAAU,SAAAhD,GAAC,OAAI/S,EAAK4Z,qBAAqB7G,EAAGxR,IAC5CsY,SAAU,SAAAC,GACR9Z,EAAKqZ,YAAcS,KAGvB3M,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CACEhB,MAAM,cACN4E,WAAS,EACTC,WAAS,EACTxF,QAAQ,WACRN,OAAO,SACPrU,MAAOga,EACPzD,SAAU,SAAAhD,GAAC,OAAI/S,EAAK+Z,wBAAwBhH,EAAGxR,MAEjD4L,EAAAC,EAAAC,cAAA,WACC,YACA9L,EAAK3B,KACNuN,EAAAC,EAAAC,cAAA,eAKN2M,qBAAuB,WACIha,EAAKiN,MAAtBqE,aACKG,WAAa,QAG5BmI,qBAAuB,SAAC7G,EAAGkH,GACzBA,EAAWjZ,KAAO+R,EAAEzQ,OAAO9C,MAC3BQ,EAAKiN,MAAMqE,aAAazF,iBAG1BkO,wBAA0B,SAAChH,EAAGkH,GAC5BA,EAAWpT,YAAckM,EAAEzQ,OAAO9C,MAClCQ,EAAKiN,MAAMqE,aAAazF,iBAG1BqO,YAAc,SAAA3Y,GAAQ,IAEFiI,EACdxJ,EAAKiN,MADPqE,aAAgB9H,UAElB,GAAIxJ,EAAK2W,MAAMwC,WACb,OAAOhM,EAAAC,EAAAC,cAACoJ,GAAD,CAAQlD,QAASvT,EAAKma,WAAtB,kBAET,IAAIC,EAAQ,GAPQC,EAAA,SAQXpX,GACP,IAAMT,EAAOjB,EAAKN,QAAQgC,GACpBqX,EAAa9Q,EAAUhI,SAASgB,EAAKZ,UACrCqY,EAAazQ,EAAUhI,SAASgB,EAAKX,UAE3CuY,EAAMvC,KACJ1K,EAAAC,EAAAC,cAACkN,GAAA,EAAD,CAAUhb,IAAG,QAAAoD,OAAUM,GAAUuX,QAAM,GACrCrN,EAAAC,EAAAC,cAACoN,GAAA,EAAD,KACEtN,EAAAC,EAAAC,cAAA,qBACCiN,EAAW1a,KAFd,KAEsB0a,EAAWtZ,KAFjC,KAEwCmM,EAAAC,EAAAC,cAAA,qBACrC4M,EAAWra,KAHd,KAGsBqa,EAAWjZ,MAEjCmM,EAAAC,EAAAC,cAACqN,GAAA,EAAD,KACEvN,EAAAC,EAAAC,cAACuI,GAAA,EAAD,CAAYrC,QAAS,kBAAMvT,EAAK2a,iBAAiBnY,KAC/C2K,EAAAC,EAAAC,cAACuN,GAAAxN,EAAD,CAAYgK,SAAS,eAd/B,IAAK,IAAInU,KAAU1B,EAAKN,QAASoZ,EAAxBpX,GAqBT,OACEkK,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqM,SAAA,KACEtM,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAACwN,GAAA,EAAD,CAAMhJ,UAAU,aAAaiJ,UAAW3N,EAAAC,EAAAC,cAAA,WAAQ0N,OAAK,GAClDX,OAMTD,UAAY,WACVna,EAAKuX,SAAS,CAAE4B,YAAY,OAG9B6B,uBAAyB,SAAAzZ,GACvB,OAAIrB,OAAOuB,KAAKF,EAAKN,SAASxB,OAAS,EAAU,KAG/C0N,EAAAC,EAAAC,cAACoJ,GAAD,CAAQlD,QAAS,kBAAMvT,EAAKib,iBAAiB1Z,KAA7C,uBAMJ2Z,uBAAyB,WAEvB,OADyBlb,EAAKiN,MAAtBqE,aACUxF,2BAYhBqB,EAAAC,EAAAC,cAAA,WACG,+CACDF,EAAAC,EAAAC,cAACoJ,GAAD,CACElD,QAASvT,EAAKmb,2BACdhH,QAAQ,WACR3Q,MAAM,aAHR,WAZA2J,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoJ,GAAD,CAAQlD,QAASvT,EAAKob,8BAAtB,mBAGAjO,EAAAC,EAAAC,cAAA,eAmBR8N,2BAA6B,WACFnb,EAAKiN,MAAtBqE,aACKxF,4BAA6B,KAG5CuP,qBAAuB,SAAA9Z,GACrB,OACE4L,EAAAC,EAAAC,cAAA,OAAK9N,IAAI,YACP4N,EAAAC,EAAAC,cAACoJ,GAAD,CAAQlD,QAAS,kBAAMvT,EAAKsb,uBAAuB/Z,EAAK3B,QAAxD,oBAGAuN,EAAAC,EAAAC,cAAA,eAKN4N,iBAAmB,SAAA1Z,GAAQ,IACjB+P,EAAiBtR,EAAKiN,MAAtBqE,aACRA,EAAaG,WAAa,KAC1BH,EAAa9H,UAAUlI,WAAWC,GAClC+P,EAAazF,iBAGf8O,iBAAmB,SAAAnY,GAAQ,IACjB8O,EAAiBtR,EAAKiN,MAAtBqE,aACRA,EAAa9H,UAAUjH,WAAWC,GAClC8O,EAAazF,iBAGf0P,cAAgB,WAAM,IACZjK,EAAiBtR,EAAKiN,MAAtBqE,aAEFvQ,EADgBuQ,EAAd9H,UACkB3I,QAAQ,YAClCyQ,EAAaG,WAAa1Q,EAAQnB,KAClC0R,EAAazF,iBAGfyP,uBAAyB,SAAAE,GAAiB,IAChClK,EAAiBtR,EAAKiN,MAAtBqE,aACA9H,EAAc8H,EAAd9H,UACFzI,EAAUyI,EAAU3I,QAAQ,kBAClC2I,EAAU7H,QAAQZ,EAAQnB,KAAM4b,EAAe,SAC/ClK,EAAaG,WAAa1Q,EAAQnB,KAClC0R,EAAazF,iBAGfuP,6BAA+B,WACJpb,EAAKiN,MAAtBqE,aACKxF,4BAA6B,qFA1OzByF,GACbA,EAAUE,aAAexR,KAAKgN,MAAMwE,YACtCxR,KAAKmZ,sDAIA,IAKHvR,EAJIyJ,EAAiBrR,KAAKgN,MAAtBqE,aAGAG,EAA4BH,EAA5BG,WAA4BH,EAAhBzF,YAEpB,GAAK4F,EAUE,CACL,IAAMlQ,EAAO+P,EAAa9H,UAAUhI,SAASiQ,GAC7C5J,EACEsF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqM,SAAA,KACEtM,EAAAC,EAAAC,cAAA,OAAKwE,UAAU,wBACb1E,EAAAC,EAAAC,cAACuI,GAAA,EAAD,CAAYrC,QAAStT,KAAK+Z,qBAAsB/F,KAAK,SACnD9G,EAAAC,EAAAC,cAACoO,GAAArO,EAAD,QAGHnN,KAAKsZ,qBAAqBhY,GAC3B4L,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACqO,GAAD,CAAMna,KAAMA,IACZ4L,EAAAC,EAAAC,cAAA,WACCpN,KAAKia,YAAY3Y,GACjBtB,KAAK+a,uBAAuBzZ,GAC5BtB,KAAKib,uBAAuB3Z,GAC5BtB,KAAKob,qBAAqB9Z,SAzB/BsG,EACEsF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqM,SAAA,6BAEEtM,EAAAC,EAAAC,cAAA,WAFF,KAIEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACoJ,GAAD,CAAQlD,QAAStT,KAAKsb,eAAtB,oBAuBN,OACEpO,EAAAC,EAAAC,cAAA,OAAK9N,IAAI,iBAAiBsS,UAAU,kBACjChK,sDA1DyBoF,EAAO0O,GAAW,IACxCrK,EAAiBrE,EAAjBqE,aACAG,EAAeH,EAAfG,WACR,GAAIA,IAAekK,EAAUlK,WAAY,OAAOkK,EAChD,IAAIpa,EAAO,KACP4X,GAAa,EAMjB,OALI1H,IACFlQ,EAAO+P,EAAa9H,UAAUhI,SAASiQ,GAEvC0H,EAAajZ,OAAOuB,KAAKF,EAAKN,SAASxB,OAAS,GAE3C,CAAEgS,aAAY0H,qBAdIvL,+DCTvBgO,kBAFLrL,YAAO,mBACPC,0NAECqL,kBAAoB,WAClB/N,OAAOgO,iBAAiB,eAAgB9b,EAAK+b,oBAG/CC,qBAAuB,WACrBlO,OAAOmO,oBAAoB,eAAgBjc,EAAK+b,oBAoBlDG,WAAa,WACXlc,EAAKiN,MAAMqE,aAAa6K,iBAG1BJ,gBAAkB,SAAAK,GAAS,IAAA/K,EACiBrR,EAAKiN,MAAMqE,aAErD,GAHyBD,EACjBxF,cADiBwF,EACJzF,iBAErB,CAGA,IAAMyQ,EACJ,0DAEF,OADAD,EAAME,YAAcD,EACbA,4EA9BA,IAEHxU,EAFG2J,EACmCvR,KAAKgN,MAAMqE,aAarD,OAVEzJ,EAJK2J,EACC3F,YADD2F,EACc5F,iBAIjBuB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqM,SAAA,KACEtM,EAAAC,EAAAC,cAAA,QAAMwE,UAAU,YAAhB,uBACA1E,EAAAC,EAAAC,cAACoJ,GAAD,CAAQlD,QAAStT,KAAKic,YAAtB,SAIM/O,EAAAC,EAAAC,cAAA,QAAMwE,UAAU,cAAhB,eAGL1E,EAAAC,EAAAC,cAAA,OAAKwE,UAAU,QAAQhK,UAvBf+F,wBCIb2O,GAFLhM,YAAO,mBACPC,0NA+BCgM,wBAA0B,SAAAzJ,GAAK,IACvBzB,EAAiBtR,EAAKiN,MAAtBqE,aACNA,EAAapH,YAAc6I,EAAEzQ,OAAO9C,MACpC8R,EAAazF,uFAhCN,IAAAwF,EAGHpR,KAAKgN,MADPqE,aAAgB1K,EAFXyK,EAEWzK,SAAUsD,EAFrBmH,EAEqBnH,YAE5B,OACEiD,EAAAC,EAAAC,cAAA,OAAKwE,UAAU,aACb1E,EAAAC,EAAAC,cAACoP,GAAA,EAAD,CACErQ,MAAM,qEACNsQ,UAAU,QACVC,oBAAqBC,MAErBzP,EAAAC,EAAAC,cAAA,QAAMwE,UAAU,oBACbjL,EAAW,kBAAoB,mBAChCuG,EAAAC,EAAAC,cAACwP,GAAAzP,EAAD,QAGJD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CACEgH,YAAY,aACZtd,MAAO0K,EACP6L,SAAU9V,KAAKuc,wBACf3I,OAAO,SACPhC,UAAU,mBAEZ1E,EAAAC,EAAAC,cAAC0P,GAAD,cAzBgBnP,uBCJlBoP,WAAoB,gBAG1B,SAASC,GAAaC,GACpB,IAAM7T,EAAc8T,aAAaC,QAAQJ,IACzC,GAAI3T,EACF,OAAO6T,EAAG,KAAM7T,IAWpB,SAAoBgU,EAAWH,GAC7B9S,IAAMkT,MACJ,CACEhT,KAAI,kBAAA3H,OAAoB0a,IAE1B,SAAAE,GACE,OAAOL,EAAG,KAAMK,IAElB,WACE,IAAMC,EAAM,uBAAA7a,OAA0B0a,EAA1B,mBACZjT,IAAMC,MAAM,CACVvI,KAAM,QACNwI,KAAMkT,MApBZC,CAAW,yBAA0B,SAACtT,EAAKd,GACzC,OAAIc,EAAY+S,EAAG/S,IAEnBgT,aAAaO,QAAQV,GAAmB3T,GACjC6T,EAAG,KAAM7T,mDAyBpB,SAAAsU,EAAgCtU,GAAhC,IAAAuU,EAAA,OAAAC,EAAAzQ,EAAA0Q,KAAA,SAAAxW,GAAA,cAAAA,EAAAyW,KAAAzW,EAAA0W,MAAA,cAAA1W,EAAA0W,KAAA,EACwBC,GAAgB5U,GADxC,cACMuU,EADNtW,EAAA4W,KAAA5W,EAAA6W,OAAA,SAESP,EAAUvZ,OAAO,SAAA+Z,GAAI,QAAMA,EAAKzW,MAAM3B,MAF/C,wBAAAsB,EAAA+W,SAAAV,sCAKeM,mFAAf,SAAAK,EAA+BjV,GAA/B,IAAAnC,EAAA0W,EAAA,OAAAC,EAAAzQ,EAAA0Q,KAAA,SAAApW,GAAA,cAAAA,EAAAqW,KAAArW,EAAAsW,MAAA,cAAAtW,EAAAsW,KAAA,EACuBpZ,EACnB,MAD0B,GAAAjC,OAEvBoD,EAFuB,SAG1B,CAAEM,cAAa,SAAA1D,OAAW0G,IAC1B,MALJ,OACMnC,EADNQ,EAAAwW,KAAAxW,EAAAqW,KAAA,EASIH,EAAYld,KAAKE,MAAMsG,GAT3BQ,EAAAsW,KAAA,sBAAAtW,EAAAqW,KAAA,EAAArW,EAAAH,GAAAG,EAAA,SAWIN,QAAQC,MAAR,oDAXJK,EAAAH,GAAA,WAeOqW,EAfP,CAAAlW,EAAAsW,KAAA,eAewB,IAAItc,MAAM,oCAflC,eAAAgG,EAAAyW,OAAA,SAiBSP,GAjBT,yBAAAlW,EAAA2W,SAAAC,EAAA,kDAsBMC,GAFLhO,YAAO,mBACPC,0NA+CCgO,aAAe,SAAArY,GACbnG,EAAKiN,MAAMqE,aAAamN,YAAYtY,MAGtCuY,cAAgB,WACd1e,EAAKiN,MAAMqE,aAAaqN,iGAlDN,IACVrN,EAAiBrR,KAAKgN,MAAtBqE,aACR2L,GAAa,SAAC9S,EAAKd,GACjB,GAAIc,EAAK,MAAMA,EAEfmH,EAAajI,YAAcA,8CAC3BuV,CAAiBvV,GAAagC,KAAK,SAAAwT,GACjCvN,EAAauN,MAAQA,uCAKlB,IAAApT,EAAAxL,KACC4e,EAAU5e,KAAKgN,MAAMqE,aAArBuN,MACR,IAAKA,EACH,MAAO,mBAGT,IAAIC,EAAYD,EAAMnf,IAAI,SAAA0e,GAAI,OAC5BjR,EAAAC,EAAAC,cAAA,QACE9N,IAAK6e,EAAK3W,GACVoK,UAAU,yBACV0B,QAAS,kBAAM9H,EAAK+S,aAAaJ,EAAK3W,MAErC2W,EAAKvX,eAaV,OAVAiY,EAAUjH,KACR1K,EAAAC,EAAAC,cAAA,QACE9N,IAAI,MACJsS,UAAU,uBACV0B,QAAStT,KAAKye,eAHhB,eAUAvR,EAAAC,EAAAC,cAAA,OAAKwE,UAAU,iBACb1E,EAAAC,EAAAC,cAAA,uCACCyR,UAzCmBlR,iCC1DtBmR,WAFLxO,YAAO,mBACPC,gMAEU,IACCc,EAAiBrR,KAAKgN,MAAtBqE,aACR,OACEnE,EAAAC,EAAAC,cAAA,OAAKwE,UAAU,iBAAf,YAEE1E,EAAAC,EAAAC,cAAC2R,GAAA,EAAD,CACEC,aAAc3N,EAAalJ,cAC3B5I,MAAO8R,EAAalJ,cACpBkG,KhBtB8B,IgBuB9BD,KhBtB8B,GgBuB9B0H,SAAU,SAACmJ,EAAG1f,GACZ8R,EAAalJ,cAAgB5I,EAC7B8R,EAAazF,iBATnB,YAaEsB,EAAAC,EAAAC,cAAC2R,GAAA,EAAD,CACEC,aAAc3N,EAAajJ,cAC3B7I,MAAO8R,EAAajJ,cACpBiG,IhB7B8B,GgB8B9BD,IhB7B8B,IgB8B9B0H,SAAU,SAACmJ,EAAG1f,GACZ8R,EAAajJ,cAAgB7I,EAC7B8R,EAAazF,yBAxBG+B,wBCJ5B,SAASuR,GAAUlS,GACjB,OAAOE,EAAAC,EAAAC,cAAA,OAAKwE,UAAU,eAAf,YAAuC5E,EAAM3E,aA0CvC8W,GAvCd7O,YAAO,mBACPC,gMAEU,IAIH3I,EAJGwX,EAGFpf,KAAKgN,MAAcqE,aADtB9H,EAFK6V,EAEL7V,UAAWqC,EAFNwT,EAEMxT,YAAazD,EAFnBiX,EAEmBjX,cAAeC,EAFlCgX,EAEkChX,cAAeoJ,EAFjD4N,EAEiD5N,WAFjD4N,EAE6D7U,SA0BpE,OAfE3C,EARG2B,EASD2D,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqM,SAAA,KACEtM,EAAAC,EAAAC,cAACiS,GAAD,CACEzT,YAAaA,EACbzD,cAAeA,EACfC,cAAeA,IAEjB8E,EAAAC,EAAAC,cAACkS,GAAD,CAAgB9N,WAAYA,IAC5BtE,EAAAC,EAAAC,cAACmS,GAAD,MACArS,EAAAC,EAAAC,cAACoS,GAAD,MACAtS,EAAAC,EAAAC,cAAC8R,GAAD,CAAW7W,QAASA,OAhBtB6E,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqM,SAAA,KACEtM,EAAAC,EAAAC,cAACqS,GAAD,MACAvS,EAAAC,EAAAC,cAAC8R,GAAD,CAAW7W,QAASA,OAoBxB6E,EAAAC,EAAAC,cAAA,OAAKwE,UAAU,OACZhK,UA/BS+F,uBCJE2K,QACW,cAA7BzK,OAAO6R,SAASC,UAEe,UAA7B9R,OAAO6R,SAASC,UAEhB9R,OAAO6R,SAASC,SAASC,MACvB,2DCNN,IAAMvO,GAAe,IAAInI,EACnB2W,GAAS,CACbxO,iBAUAyO,YAAW,CACTC,WAAY,SAAU5D,GAGpB,OADAA,EAAM5U,QAAU9G,KAAKC,UAAU2Q,GAAa2O,yBACrC7D,GAET8D,QAAS5X,IACT6X,IAAK,+DAIT/P,IAASgQ,OACPjT,EAAAC,EAAAC,cAACgT,EAAA,EAAcP,GACb3S,EAAAC,EAAAC,cAACiT,GAAD,OAEFnU,SAASoU,cAAc,UDkGnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrV,KAAK,SAAAsV,GACjCA,EAAaC","file":"static/js/main.a7a93795.chunk.js","sourcesContent":["/**\n * \"_data\" - is a private data\n * \"__data\" - is a temporary data\n */\n\nfunction refillMapIds(savedGraphState) {\n  for (let nodeId in savedGraphState._nodeMap) {\n    let node = savedGraphState._nodeMap[nodeId];\n    node.__id = Number(nodeId);\n  }\n  for (let linkId in savedGraphState._linkMap) {\n    let link = savedGraphState._linkMap[linkId];\n    link.__id = Number(linkId);\n  }\n}\n\nfunction refillLinks(savedGraphState) {\n  for (let nodeId in savedGraphState._nodeMap) {\n    let node = savedGraphState._nodeMap[nodeId];\n    node.__links = {};\n  }\n  for (let linkId in savedGraphState._linkMap) {\n    let link = savedGraphState._linkMap[linkId];\n\n    let sourceNode = savedGraphState._nodeMap[link.sourceId];\n    sourceNode.__links[linkId] = link;\n    let targetNode = savedGraphState._nodeMap[link.targetId];\n    targetNode.__links[linkId] = link;\n\n    // for d3 force links // TODO: maybe extern this code?\n    link.source = link.sourceId;\n    link.target = link.targetId;\n  }\n}\n\nfunction stripTempData(key, value) {\n  if (key === 'tags') {\n    // remove empty tag arrays\n    if (value.length === 0) return void 0;\n\n    return value.map(tag => tag.__id); // map tag links to ids\n  }\n\n  // remove temp data\n  if (key.startsWith('__')) return void 0;\n\n  // remove d3 temp data\n  if (key === 'x') return void 0;\n  if (key === 'y') return void 0;\n  if (key === 'vx') return void 0;\n  if (key === 'vy') return void 0;\n  if (key === 'fx') return void 0;\n  if (key === 'fy') return void 0;\n  if (key === 'index') return void 0;\n  if (key === 'source') return void 0;\n  if (key === 'target') return void 0;\n\n  return value;\n}\n\nexport default class Graph {\n  _nodeMap = {};\n  _linkMap = {};\n  _nextNodeId = null;\n  _nextLinkId = null;\n\n  constructor(savedGraphState) {\n    refillMapIds(savedGraphState);\n    refillLinks(savedGraphState);\n\n    this._nodeMap = savedGraphState._nodeMap;\n    this._linkMap = savedGraphState._linkMap;\n    this._nextNodeId = savedGraphState._nextNodeId;\n    this._nextLinkId = savedGraphState._nextLinkId;\n  }\n\n  getImmutableCopy = () => {\n    const str = JSON.stringify(\n      {\n        _nodeMap: this._nodeMap,\n        _linkMap: this._linkMap,\n        _nextNodeId: this._nextNodeId,\n        _nextLinkId: this._nextLinkId\n      },\n      stripTempData,\n      2\n    );\n    return JSON.parse(str);\n  };\n\n  addNode = nodeName => {\n    let newNode = {\n      __id: this._nextNodeId,\n      name: nodeName,\n      __links: {},\n      // i cannot find where each node datum get vx, vy, x, y from d3js\n      // TODO: u can try to find\n      // so i create it myself here:\n      x: 0,\n      y: 0,\n      vx: 0,\n      vy: 0\n    };\n    this._nodeMap[this._nextNodeId] = newNode;\n    this._nextNodeId++;\n    return newNode;\n  };\n\n  deleteNode = node => {\n    node = this.findNode(node);\n    if (Object.keys(node.__links).length > 0) {\n      throw new Error('Cannot delete node, when node has links');\n    }\n\n    delete this._nodeMap[node.__id];\n  };\n\n  addLink = (sourceId, targetId, type = 'CHILD') => {\n    if (sourceId === targetId)\n      throw new Error('Cannot create link with same sourceId and targetId');\n\n    let oldLinks = this._nodeMap[sourceId].__links;\n    for (let oldLinkKey in oldLinks) {\n      const oldLink = oldLinks[oldLinkKey];\n      if (oldLink.sourceId === sourceId && oldLink.targetId === targetId) {\n        throw new Error('Cannot create duplicate links');\n      }\n    }\n\n    let newLink = {\n      __id: this._nextLinkId,\n      type,\n      sourceId,\n      targetId,\n      // for d3 force links // TODO: maybe extern this code?\n      source: sourceId,\n      target: targetId\n    };\n    this._linkMap[this._nextLinkId] = newLink;\n    this._nodeMap[sourceId].__links[this._nextLinkId] = newLink;\n    this._nodeMap[targetId].__links[this._nextLinkId] = newLink;\n    this._nextLinkId++;\n    return newLink;\n  };\n\n  deleteLink = link => {\n    link = this.findLink(link);\n    delete this._linkMap[link.__id];\n\n    let sourceNode = this._nodeMap[link.sourceId];\n    delete sourceNode.__links[link.__id];\n    let targetNode = this._nodeMap[link.targetId];\n    delete targetNode.__links[link.__id];\n  };\n\n  /**\n   * node - nodeId or node\n   * result - node\n   */\n  findNode = node => {\n    let result;\n    if (typeof node === 'number') {\n      result = this._nodeMap[node];\n    } else {\n      result = node;\n    }\n\n    if (!result) throw new Error(`Cannot find node ${node}`);\n\n    return result;\n  };\n\n  /**\n   * link - linkId or link\n   * result - link\n   */\n  findLink = link => {\n    let result;\n    if (typeof link === 'number') {\n      result = this._linkMap[link];\n    } else {\n      result = link;\n    }\n\n    if (!result) throw new Error(`Cannot find link ${link}`);\n\n    return result;\n  };\n\n  getNodeArray = () => {\n    if (!this._nodeMap) return [];\n\n    return Object.values(this._nodeMap);\n  };\n\n  getLinkArray = () => {\n    if (!this._linkMap) return [];\n\n    return Object.values(this._linkMap);\n  };\n}\n","export const COLORS = [\n  '#eb5a46',\n  '#61bd4f',\n  '#1b79bf',\n  '#f2d601',\n  '#fb9f1b',\n  '#c377e0',\n  '#32c2e0',\n  '#50e897',\n  '#fa78cb',\n  '#344563',\n  '#b3bac4'\n];\n\nexport const INITIAL_TAGS_DATA = {\n  _tagMap: {\n    1: { color: COLORS[0], name: '' },\n    2: { color: COLORS[1], name: '' },\n    3: { color: COLORS[2], name: '' },\n    4: { color: COLORS[3], name: '' }\n  },\n  _nextTagId: 5\n};\n","import { COLORS } from './constants';\n\nfunction refillMapIds(savedTagState) {\n  for (let tagId in savedTagState._tagMap) {\n    let tag = savedTagState._tagMap[tagId];\n    tag.__id = Number(tagId);\n  }\n}\n\nfunction stripTempData(key, value) {\n  // remove temp data\n  if (key.startsWith('__')) return void 0;\n\n  return value;\n}\n\nexport default class AvailableTags {\n  _tagMap = {};\n  _nextTagId = null;\n\n  constructor(savedTagState) {\n    refillMapIds(savedTagState);\n    this._tagMap = savedTagState._tagMap;\n    this._nextTagId = savedTagState._nextTagId;\n  }\n\n  getImmutableCopy = () => {\n    const str = JSON.stringify(\n      {\n        _tagMap: this._tagMap,\n        _nextTagId: this._nextTagId\n      },\n      stripTempData,\n      2\n    );\n    return JSON.parse(str);\n  };\n\n  add = (color = this.getNextColor(), tagName = 'New tag') => {\n    let newTag = {\n      color,\n      name: tagName,\n      __id: this._nextTagId\n    };\n    this._tagMap[this._nextTagId] = newTag;\n    this._nextTagId++;\n    return newTag;\n  };\n\n  delete = tag => {\n    tag = this.findTag(tag);\n    delete this._tagMap[tag.__id];\n  };\n\n  /**\n   * tag - tagId or tag\n   * result - tag\n   */\n  findTag = tag => {\n    let result;\n    if (typeof tag === 'number') {\n      result = this._tagMap[tag];\n    } else {\n      result = tag;\n    }\n\n    if (!result) throw new Error(`Cannot find tag ${tag}`);\n\n    return result;\n  };\n\n  getNextColor = () => {\n    const usedTagColors = Object.values(this._tagMap).map(tag => tag.color);\n    const newColors = COLORS.filter(color => !usedTagColors.includes(color));\n    return (\n      newColors[0] ||\n      usedTagColors[Math.floor(Math.random() * usedTagColors.length)]\n    );\n  };\n\n  getTagsArray = () => {\n    if (!this._tagMap) return [];\n\n    return Object.values(this._tagMap);\n  };\n}\n","export default function request(method, path, headers, data) {\n  return new Promise((resolve, reject) => {\n    let xhr = new XMLHttpRequest();\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200 || xhr.status === 201) {\n          resolve(xhr.responseText);\n        } else {\n          reject(new Error(`response failed, status: ${xhr.status}`));\n        }\n      }\n    };\n    xhr.open(method, path, true);\n    if (headers) {\n      Object.keys(headers).forEach(header => {\n        xhr.setRequestHeader(header, headers[header]);\n      });\n    }\n    if (!data) {\n      xhr.send();\n    } else {\n      xhr.send(JSON.stringify(data));\n    }\n  });\n}\n","export const API_URL = 'https://api.github.com/';\nexport const GRAPH_STATE_FILENAME = 'graphState.json';\n","import request from '../request';\nimport { API_URL } from './constants';\n\nexport default class Gist {\n  constructor(token, gistId) {\n    if (!token) throw new Error('Token not passed!');\n    this._auth = { Authorization: `token ${token}` };\n    this._gistId = gistId;\n\n    this._files = null;\n    this._description = '';\n    this._public = null;\n  }\n\n  async create(fileName, fileData, isPublic, description) {\n    this.setDescription(description);\n    const dto = this.wrapNewFileData(fileName, fileData);\n    this._public = isPublic;\n    dto.public = isPublic;\n    let response = await request('POST', `${API_URL}gists`, this._auth, dto);\n    let responseObj;\n    try {\n      responseObj = JSON.parse(response);\n    } catch (e) {\n      console.error(`Retrieved json from gist failed to parse: ${e.message}`);\n      throw e;\n    }\n\n    if (!responseObj) throw new Error('Data from response not available');\n\n    this._gistId = responseObj.id;\n    return responseObj;\n  }\n\n  setDescription(description) {\n    this._description = description;\n  }\n\n  async update(fileName, fileData) {\n    const dto = this.wrapNewFileData(fileName, fileData);\n    let response = await request(\n      'PATCH',\n      `${API_URL}gists/${this._gistId}`,\n      this._auth,\n      dto\n    );\n    let responseObj;\n    try {\n      responseObj = JSON.parse(response);\n    } catch (e) {\n      console.error(`Retrieved json from gist failed to parse: ${e.message}`);\n      throw e;\n    }\n\n    if (responseObj.id !== this._gistId)\n      throw new Error(\n        'Gist id from respons does not match the current Gist id'\n      );\n\n    return responseObj;\n  }\n\n  async read() {\n    let response = await request(\n      'GET',\n      `${API_URL}gists/${this._gistId}`,\n      this._auth,\n      null\n    );\n    let responseObj;\n    try {\n      responseObj = JSON.parse(response);\n    } catch (e) {\n      console.error(`Retrieved json from gist failed to parse`);\n      throw e;\n    }\n\n    if (!responseObj) throw new Error('Data from response not available');\n\n    this._description = responseObj.description;\n    this._files = responseObj.files;\n    this._public = responseObj.public;\n\n    return responseObj;\n  }\n\n  wrapNewFileData(fileName, fileData) {\n    if (!this._files) this._files = {};\n\n    this._files[fileName] = { filename: fileName, content: fileData };\n    return {\n      description: this._description,\n      files: this._files\n    };\n  }\n}\n","export const GRAPH_FORCE_STRENGTH_DEFAULT = -300;\nexport const GRAPH_FORCE_STRENGTH_MIN = -550;\nexport const GRAPH_FORCE_STRENGTH_MAX = -50;\n\nexport const GRAPH_FORCE_DISTANCE_DEFAULT = 130;\nexport const GRAPH_FORCE_DISTANCE_MIN = 50;\nexport const GRAPH_FORCE_DISTANCE_MAX = 210;\n\nexport const INITIAL_GRAPH_DATA = {\n  _nodeMap: {\n    1: { name: 'Initial node' },\n    2: { name: 'Linked node' }\n  },\n  _linkMap: {\n    1: { type: 'CHILD', sourceId: 1, targetId: 2 }\n  },\n  _nextNodeId: 3,\n  _nextLinkId: 2\n};\n","import { version } from '../../package.json';\nimport {\n  GRAPH_FORCE_STRENGTH_DEFAULT,\n  GRAPH_FORCE_DISTANCE_DEFAULT\n} from '../constants';\nimport { INITIAL_TAGS_DATA } from '../tags/constants';\n\nexport default function applyMigrations(savedGraphState) {\n  replaceRootSections(savedGraphState);\n}\n\nfunction replaceRootSections(savedGraphState) {\n  if (!savedGraphState.graph) {\n    savedGraphState.graph = {\n      _nodeMap: savedGraphState._nodeMap,\n      _linkMap: savedGraphState._linkMap,\n      _nextNodeId: savedGraphState._nextNodeId,\n      _nextLinkId: savedGraphState._nextLinkId\n    };\n    delete savedGraphState._nodeMap;\n    delete savedGraphState._linkMap;\n    delete savedGraphState._nextNodeId;\n    delete savedGraphState._nextLinkId;\n  }\n  if (!savedGraphState.meta) {\n    savedGraphState.meta = {\n      forceStrength: GRAPH_FORCE_STRENGTH_DEFAULT,\n      forceDistance: GRAPH_FORCE_DISTANCE_DEFAULT,\n      version\n    };\n  }\n  if (!savedGraphState.tags) {\n    savedGraphState.tags = INITIAL_TAGS_DATA;\n  }\n}\n","export default function validateSavedState(savedState) {\n  if (\n    !validateDataObject(savedState.graph, {\n      _nodeMap: 'object',\n      _linkMap: 'object',\n      _nextNodeId: 'number',\n      _nextLinkId: 'number'\n    })\n  )\n    return false;\n\n  if (\n    !validateDataObject(savedState.tags, {\n      _tagMap: 'object',\n      _nextTagId: 'number'\n    })\n  )\n    return false;\n\n  if (\n    !validateDataObject(savedState.meta, {\n      forceStrength: 'number',\n      forceDistance: 'number',\n      version: 'string'\n    })\n  )\n    return false;\n\n  return true;\n}\n\nfunction validateDataObject(target, requiredProps, optionalProps) {\n  if (target.constructor !== Object) return false;\n\n  const requiredKeys = Object.keys(requiredProps);\n  for (let i = 0; i < requiredKeys.length; i++) {\n    const property = requiredKeys[i];\n    if (!target.hasOwnProperty(property)) return false;\n\n    if (requiredProps[property] === 'object') {\n      if (target[property].constructor !== Object) return false;\n    } else {\n      if (typeof target[property] !== requiredProps[property]) return false;\n    }\n  }\n\n  if (optionalProps) {\n    const optionalKeys = Object.keys(optionalProps);\n    for (let i = 0; i < optionalKeys.length; i++) {\n      const property = optionalKeys[i];\n      if (target.hasOwnProperty(property)) {\n        if (typeof target[property] !== optionalProps[property]) return false;\n      }\n    }\n  }\n\n  return true;\n}\n","import { observable, action } from 'mobx';\nimport { version as appVersion } from '../package.json';\nimport Graph from './graph/Graph';\nimport AvailableTags from './tags/AvailableTags';\nimport { INITIAL_TAGS_DATA } from './tags/constants';\nimport Gist from './gist/Gist';\nimport { GRAPH_STATE_FILENAME } from './gist/constants';\nimport {\n  GRAPH_FORCE_DISTANCE_DEFAULT,\n  GRAPH_FORCE_STRENGTH_DEFAULT,\n  INITIAL_GRAPH_DATA\n} from './constants';\nimport applyMigrations from './graph/migrator';\nimport notie from 'notie';\nimport validateSavedState from './validator';\n\nexport class ProjectStore {\n  githubToken = null;\n  @observable gists = null;\n\n  graphData = null;\n  @observable availableTags = null;\n  @observable isLoaded = false;\n  @observable _projectName = '';\n  get projectName() {\n    return this._projectName;\n  }\n  set projectName(v) {\n    this._projectName = v;\n    this.projectGist.setDescription(v);\n    document.title = v + ' | Graph editor';\n  }\n\n  get isPublic() {\n    return this.projectGist._public;\n  }\n\n  projectGist = null;\n  @action loadProject(gistId) {\n    this.projectGist = new Gist(this.githubToken, gistId);\n    this.projectGist.read().then(this._initializeGraph);\n  }\n\n  @action newProject() {\n    this.projectGist = new Gist(this.githubToken);\n    const stateForSave = this._prepareStateForSave(\n      INITIAL_GRAPH_DATA,\n      INITIAL_TAGS_DATA\n    );\n    const stateJson = JSON.stringify(stateForSave, null, 2);\n    this.projectGist\n      .create(GRAPH_STATE_FILENAME, stateJson, false, 'New graph')\n      .then(this._initializeGraph);\n  }\n\n  // TODO: decompose initializeGraph on validate / migrate / initialize\n  _initializeGraph = gistInfo => {\n    let savedGraphStateJson = gistInfo.files[GRAPH_STATE_FILENAME].content;\n    const projectName = gistInfo.description;\n    let errorMsg;\n    let savedGraphState;\n    try {\n      savedGraphState = JSON.parse(savedGraphStateJson);\n      applyMigrations(savedGraphState);\n      if (!validateSavedState(savedGraphState)) {\n        errorMsg = `Project format \"${projectName ||\n          'Untitled'}\" has invalid data format`;\n      }\n    } catch (err) {\n      errorMsg = `Project \"${projectName ||\n        'Untitled'}\" failed to parse / migrate / validate`;\n    }\n\n    if (errorMsg) {\n      notie.alert({ type: 'error', text: errorMsg });\n      return;\n    }\n\n    this.projectName = projectName;\n    this.availableTags = new AvailableTags(savedGraphState.tags);\n    this.graphData = new Graph(savedGraphState.graph);\n    // refill tags data to graph nodes\n    this.graphData.getNodeArray().forEach(node => {\n      if (node.tags) {\n        node.tags = node.tags.map(tagId => this.availableTags.findTag(tagId));\n      }\n    });\n    this.forceStrength = savedGraphState.meta.forceStrength;\n    this.forceDistance = savedGraphState.meta.forceDistance;\n    this.isLoaded = true;\n  };\n\n  _prepareStateForSave = (optionalGraphData, optionalTagsData) => {\n    let graphData = optionalGraphData || this.graphData.getImmutableCopy();\n    let availableTagsData =\n      optionalTagsData || this.availableTags.getImmutableCopy();\n    return {\n      graph: graphData,\n      tags: availableTagsData,\n      meta: {\n        forceStrength: this.forceStrength,\n        forceDistance: this.forceDistance,\n        version: appVersion\n      }\n    };\n  };\n\n  @action saveProject() {\n    let result = this._prepareStateForSave();\n    const resultJson = JSON.stringify(result, null, 2);\n    this.projectGist\n      .update(GRAPH_STATE_FILENAME, resultJson)\n      .then(responseObj => {\n        this.savedChangeStamp = this.changeStamp;\n      });\n  }\n\n  @observable _activeNode = null;\n  get activeNode() {\n    return this._activeNode;\n  }\n  set activeNode(v) {\n    if (this._activeNode) {\n      this.graphData.findNode(this._activeNode).__focused = false;\n    }\n    if (v) {\n      this.graphData.findNode(v).__focused = true;\n    }\n    this._activeNode = v;\n  }\n\n  @observable targetLinkChoiceInProgress = false;\n  @observable changeStamp = 0;\n  @observable savedChangeStamp = 0;\n\n  @observable forceStrength = GRAPH_FORCE_STRENGTH_DEFAULT;\n  @observable forceDistance = GRAPH_FORCE_DISTANCE_DEFAULT;\n\n  getAfterErrorSnapshot() {\n    return {\n      graphData: this.graphData ? this.graphData.getImmutableCopy() : null,\n      availableTags: this.availableTags\n        ? this.availableTags.getImmutableCopy()\n        : null,\n      forceStrength: this.forceStrength,\n      forceDistance: this.forceDistance,\n      targetLinkChoiceInProgress: this.targetLinkChoiceInProgress,\n      changeStamp: this.changeStamp,\n      savedChangeStamp: this.savedChangeStamp,\n      gistId: this.projectGist._gistId\n    };\n  }\n}\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { inject, observer } from 'mobx-react';\nimport * as d3 from 'd3';\nimport { TagLabels } from './TagLabels';\nimport './GraphView.css';\nimport debounce from '../utils/debounce';\n\n// Functions and variables\nvar FORCE;\nFORCE = (function(nsp) {\n  var width = window.innerWidth,\n    height = window.innerHeight,\n    // TODO: maybe need d3.forceX and d3.forceY instead of d3.forceCenter\n    initForce = (nodes, links, forceOptions) => {\n      const { strength, distance } = forceOptions;\n      nsp.force = d3\n        .forceSimulation(nodes)\n        .force('charge', d3.forceManyBody().strength(strength))\n        .force(\n          'link',\n          d3\n            .forceLink(links)\n            .id(d => d.__id)\n            .distance(distance)\n        )\n        .force(\n          'center',\n          d3\n            .forceCenter()\n            .x(nsp.width / 2)\n            .y(nsp.height / 2)\n        )\n        .force('collide', d3.forceCollide([5]).iterations([5]));\n    },\n    enterNode = selection => {\n      selection\n        .select('circle')\n        .attr('r', 25)\n        .style('fill', 'tomato')\n        .style('stroke', 'bisque')\n        .style('stroke-width', '3px');\n\n      selection\n        .select('text')\n        .style('fill', 'honeydew')\n        .style('font-weight', '600')\n        .style('text-transform', 'uppercase')\n        .style('text-anchor', 'middle')\n        .style('alignment-baseline', 'middle')\n        .style('font-size', '10px')\n        .style('font-family', 'cursive');\n    },\n    updateNode = selection => {\n      selection\n        .attr('transform', d => 'translate(' + d.x + ',' + d.y + ')')\n        .attr('cx', d => (d.x = Math.max(30, Math.min(width - 30, d.x))))\n        .attr('cy', d => (d.y = Math.max(30, Math.min(height - 30, d.y))));\n    },\n    enterLink = selection => {\n      selection.attr('stroke-width', 3).attr('stroke', 'bisque');\n    },\n    updateLink = selection => {\n      selection\n        .attr('x1', d => d.source.x)\n        .attr('y1', d => d.source.y)\n        .attr('x2', d => d.target.x)\n        .attr('y2', d => d.target.y);\n    },\n    updateGraph = selection => {\n      selection.selectAll('.node').call(updateNode);\n      selection.selectAll('.link').call(updateLink);\n    },\n    dragStarted = d => {\n      if (!d3.event.active) nsp.force.alphaTarget(0.3).restart();\n\n      d.fx = d.x;\n      d.fy = d.y;\n    },\n    dragging = d => {\n      d.fx = d3.event.x;\n      d.fy = d3.event.y;\n    },\n    dragEnded = d => {\n      if (!d3.event.active) nsp.force.alphaTarget(0);\n\n      d.fx = null;\n      d.fy = null;\n    },\n    initDrag = () =>\n      d3.selectAll('g.node').call(\n        d3\n          .drag()\n          .on('start', dragStarted)\n          .on('drag', dragging)\n          .on('end', dragEnded)\n      ),\n    initTick = that => {\n      that.d3Graph = d3.select(ReactDOM.findDOMNode(that));\n      nsp.force.on('tick', () => {\n        that.d3Graph.call(updateGraph);\n      });\n    };\n\n  nsp.width = width;\n  nsp.height = height;\n  nsp.enterNode = enterNode;\n  nsp.updateNode = updateNode;\n  nsp.enterLink = enterLink;\n  nsp.updateLink = updateLink;\n  nsp.updateGraph = updateGraph;\n  nsp.initForce = initForce;\n  nsp.dragStarted = dragStarted;\n  nsp.dragging = dragging;\n  nsp.dragEnded = dragEnded;\n  nsp.initDrag = initDrag;\n  nsp.initTick = initTick;\n\n  return nsp;\n})(FORCE || {});\n\n@inject('projectStore')\n@observer\nclass GraphView extends Component {\n  componentDidMount() {\n    const {\n      projectStore: { graphData, forceStrength, forceDistance }\n    } = this.props;\n    this.reInitForce(graphData, {\n      strength: forceStrength,\n      distance: forceDistance\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const { graphData } = this.props.projectStore;\n    if (\n      prevProps.changeStamp !== this.props.changeStamp ||\n      prevProps.forceStrength !== this.props.forceStrength ||\n      prevProps.forceDistance !== this.props.forceDistance\n    ) {\n      this.reInitForceDebounced(graphData, {\n        strength: this.props.forceStrength,\n        distance: this.props.forceDistance\n      });\n    }\n  }\n\n  reInitForce = (graphData, forceOptions) => {\n    FORCE.initForce(\n      graphData.getNodeArray(),\n      graphData.getLinkArray(),\n      forceOptions\n    );\n    FORCE.initTick(this);\n    FORCE.initDrag();\n  };\n\n  reInitForceDebounced = debounce(this.reInitForce, 100);\n\n  render() {\n    // activeNode observe for highlightning active node\n    // eslint-disable-next-line no-unused-vars\n    const { graphData, activeNode } = this.props.projectStore;\n    let nodes = graphData.getNodeArray().map(node => {\n      return (\n        <Node\n          key={node.__id}\n          name={node.name}\n          data={node}\n          focused={node.__focused}\n        />\n      );\n    });\n    let links = graphData.getLinkArray().map(link => {\n      return <Link key={link.__id} data={link} />;\n    });\n    return (\n      <div className=\"graph_container\">\n        <svg className=\"graph\" width={FORCE.width} height={FORCE.height}>\n          <defs>\n            <marker\n              id=\"arrow\"\n              viewBox=\"0 0 10 10\"\n              refX=\"26\"\n              refY=\"5\"\n              markerWidth=\"5\"\n              markerHeight=\"5\"\n              orient=\"auto-start-reverse\"\n              markerUnits=\"strokeWidth\"\n            >\n              <path d=\"M 0 0 L 10 5 L 0 10 z\" />\n            </marker>\n          </defs>\n          <g>{links}</g>\n          <g>{nodes}</g>\n        </svg>\n      </div>\n    );\n  }\n}\n\nclass Link extends Component {\n  componentDidMount() {\n    this.d3Link = d3\n      .select(ReactDOM.findDOMNode(this))\n      .datum(this.props.data)\n      .call(FORCE.enterLink);\n  }\n\n  componentDidUpdate() {\n    this.d3Link.datum(this.props.data).call(FORCE.updateLink);\n  }\n\n  render() {\n    return <line className=\"link\" markerEnd=\"url('#arrow')\" />;\n  }\n}\n\n@inject('projectStore')\n@observer\nclass Node extends Component {\n  componentDidMount() {\n    this.d3Node = d3\n      .select(ReactDOM.findDOMNode(this))\n      .datum(this.props.data)\n      .call(FORCE.enterNode)\n      .call(this.processFocus, this.props.focused);\n  }\n\n  componentDidUpdate() {\n    this.d3Node\n      .datum(this.props.data)\n      .call(FORCE.updateNode)\n      .call(this.processFocus, this.props.focused);\n  }\n\n  processFocus = (d3NodeSelection, isFocused) => {\n    d3NodeSelection.select('circle').classed('focused', isFocused);\n  };\n\n  render() {\n    const { __id, tags } = this.props.data;\n    return (\n      <g className=\"node\" onClick={this.handleClick} data-node-id={__id}>\n        <circle />\n        <text>{this.props.data.name}</text>\n        <TagLabels tags={tags} />\n      </g>\n    );\n  }\n\n  handleClick = e => {\n    const { projectStore } = this.props;\n    if (!projectStore.targetLinkChoiceInProgress) {\n      projectStore.activeNode = Number(e.currentTarget.dataset.nodeId);\n      return;\n    }\n\n    // handle new link creation\n    const sourceNodeId = projectStore.activeNode;\n    const targetNodeId = Number(e.currentTarget.dataset.nodeId);\n    try {\n      projectStore.graphData.addLink(sourceNodeId, targetNodeId, 'CHILD');\n    } catch (e) {\n      console.warn(e.message); // TODO: warn with alertify\n      return;\n    }\n    projectStore.targetLinkChoiceInProgress = false;\n    projectStore.changeStamp++;\n  };\n}\n\nexport default GraphView;\n","import React, { Component } from 'react';\n\nconst TAG_LABEL_WIDTH = 12;\n\nclass TagLabels extends Component {\n  render() {\n    const { tags } = this.props;\n    if (!tags) return null;\n\n    return tags.map((tag, idx) => (\n      <rect\n        width={TAG_LABEL_WIDTH}\n        height={3}\n        rx={3}\n        ry={3}\n        x={idx * (TAG_LABEL_WIDTH + 3) + 21}\n        y={-20}\n        style={{ fill: tag.color }}\n      />\n    ));\n  }\n}\n\nexport { TagLabels };\n","export default function debounce(fn, delay) {\n  let timerId;\n  return function() {\n    let context = this;\n    let args = arguments;\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(() => {\n      fn.apply(context, args);\n      timerId = null;\n    }, delay);\n  };\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { styled } from '@material-ui/core/styles';\n\nconst StyledButton = styled(Button)({\n  margin: '5px'\n});\n\nconst CustomButton = ({\n  size = 'small',\n  variant = 'contained',\n  children,\n  ...rest\n}) => {\n  return (\n    <StyledButton size={size} variant={variant} {...rest}>\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default CustomButton;\n","import React from 'react';\nimport MaterialChip from '@material-ui/core/Chip';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\n\nconst noop = () => {};\n\nconst Chip = ({ name, color, isActive, toggle = noop }) => {\n  return (\n    <MaterialChip\n      size=\"small\"\n      label={name || 'Unnamed'}\n      variant={isActive ? void 0 : 'outlined'}\n      style={{\n        margin: 1,\n        backgroundColor: isActive ? color : 'white',\n        borderColor: color\n      }}\n      onClick={toggle}\n      onDelete={toggle}\n      deleteIcon={isActive ? <HighlightOffIcon /> : <CheckCircleIcon />}\n    />\n  );\n};\n\nexport { Chip };\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '../components/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport BackspaceIcon from '@material-ui/icons/Backspace';\nimport { COLORS } from './constants';\nimport './TagEdit.css';\n\nconst renderColor = color => (\n  <span className=\"Color\" style={{ backgroundColor: color }}>\n    {color}\n  </span>\n);\n\nconst renderNameInput = (name, onNameChange) => {\n  return (\n    <div className=\"section\">\n      <TextField\n        label=\"Tag name\"\n        variant=\"outlined\"\n        margin=\"dense\"\n        value={name}\n        onChange={e => onNameChange(e.target.value)}\n      />\n    </div>\n  );\n};\n\nconst renderColorSelect = (color, onColorChange) => {\n  return (\n    <div className=\"section\">\n      <InputLabel shrink htmlFor=\"select-tag-color\">\n        Tag Color\n      </InputLabel>\n      <Select\n        variant=\"outlined\"\n        renderValue={renderColor}\n        value={color}\n        onChange={e => onColorChange(e.target.value)}\n        inputProps={{\n          id: 'select-tag-color'\n        }}\n      >\n        {COLORS.map(color => (\n          <MenuItem value={color} key={color}>\n            {renderColor(color)}\n          </MenuItem>\n        ))}\n      </Select>\n    </div>\n  );\n};\n\nconst TagEdit = ({\n  name,\n  color,\n  onNameChange,\n  onColorChange,\n  onEditDone,\n  onDelete,\n  onDeleteForce,\n  errorMessage\n}) => {\n  return (\n    <div>\n      <div className=\"Title\">\n        <span className=\"Label section\">Edit tag:</span>\n        <span className=\"BackButton section\">\n          <IconButton onClick={onEditDone} size=\"small\">\n            <BackspaceIcon />\n          </IconButton>\n        </span>\n      </div>\n      {renderNameInput(name, onNameChange)}\n      {renderColorSelect(color, onColorChange)}\n      <div>\n        <Button onClick={onEditDone}>Save</Button>\n      </div>\n      <div>\n        <Button onClick={onDelete} color=\"secondary\">\n          Delete tag (if unused)\n        </Button>\n      </div>\n      {errorMessage ? (\n        <div className=\"section\">\n          <div className=\"ErrorMessage\">{errorMessage}</div>\n        </div>\n      ) : null}\n      <Button onClick={onDeleteForce} color=\"secondary\">\n        Delete tag (with all usages)\n      </Button>\n    </div>\n  );\n};\n\nexport { TagEdit };\n","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport Popover from '@material-ui/core/Popover';\nimport { Chip } from '../components/Chip';\nimport Button from '../components/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { TagEdit } from './TagEdit';\nimport './TagPopover.css';\n\n/**\n * anchorEl - determines \"isOpen\" and element,\n *   that used to set the position of the popover\n */\n\n@inject('projectStore')\n@observer\nclass TagPopover extends Component {\n  state = { editingTag: null, deletionErrorMessage: null };\n\n  render() {\n    const { anchorEl, handlePopoverClose, node, projectStore } = this.props;\n    // changeStamp here for observe\n    // eslint-disable-next-line no-unused-vars\n    const { availableTags, changeStamp } = projectStore;\n    let { editingTag } = this.state;\n    const content = editingTag ? (\n      <TagEdit\n        name={editingTag.name}\n        color={editingTag.color}\n        onNameChange={newName => {\n          editingTag.name = newName;\n          projectStore.changeStamp++;\n        }}\n        onColorChange={newColor => {\n          editingTag.color = newColor;\n          projectStore.changeStamp++;\n        }}\n        onEditDone={this.handleEditTagDone}\n        onDelete={() => {\n          this.deleteTag(editingTag);\n        }}\n        onDeleteForce={() => {\n          this.deleteTagForce(editingTag);\n        }}\n        errorMessage={this.state.deletionErrorMessage}\n      />\n    ) : (\n      <div className=\"AvailableTags\">\n        {this.renderAvailableTags(availableTags, node)}\n        <Button onClick={this.handleCreateNewTag}>Create new tag</Button>\n      </div>\n    );\n    return (\n      <Popover\n        open={Boolean(anchorEl)}\n        anchorEl={anchorEl}\n        onClose={() => {\n          this.handleEditTagDone();\n          handlePopoverClose();\n        }}\n        anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\n        transformOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n      >\n        <div className=\"TagPopoverHeader\">Tags</div>\n        {content}\n      </Popover>\n    );\n  }\n\n  renderAvailableTags = (availableTags, node) => {\n    const tags = availableTags.getTagsArray();\n    if (!tags.length) return 'Available tags is missing';\n\n    const activeTags = node.tags && node.tags.length ? node.tags : [];\n    return tags.map(tag => (\n      <div className=\"AvailableTag\" key={tag.__id}>\n        <Chip\n          name={tag.name}\n          color={tag.color}\n          isActive={activeTags.includes(tag)}\n          toggle={() => this.toggleTag(tag, node)}\n        />\n        <IconButton onClick={() => this.handleEditTag(tag)} size=\"small\">\n          <EditIcon fontSize=\"small\" />\n        </IconButton>\n      </div>\n    ));\n  };\n\n  deleteTag = tag => {\n    const { projectStore } = this.props;\n    const { availableTags, graphData } = projectStore;\n    tag = availableTags.findTag(tag);\n    let tagUsageCount = graphData\n      .getNodeArray()\n      .filter(node => node.tags && node.tags.includes(tag)).length;\n    if (tagUsageCount > 0) {\n      this.setState({\n        deletionErrorMessage: `Tag used in ${tagUsageCount} nodes`\n      });\n      return;\n    }\n\n    this.setState({ deletionErrorMessage: null });\n    availableTags.delete(tag);\n    this.handleEditTagDone();\n    projectStore.changeStamp++;\n  };\n\n  // will delete all used tag occurrences\n  deleteTagForce = tag => {\n    const { projectStore } = this.props;\n    const { availableTags, graphData } = projectStore;\n    tag = availableTags.findTag(tag);\n    graphData.getNodeArray().forEach(node => {\n      if (!node.tags) return;\n\n      const index = node.tags.indexOf(tag);\n      if (index === -1) return;\n\n      node.tags.splice(index, 1);\n    });\n\n    this.setState({ deletionErrorMessage: null });\n    availableTags.delete(tag);\n    this.handleEditTagDone();\n    projectStore.changeStamp++;\n  };\n\n  toggleTag = (tag, node) => {\n    if (!node.tags) {\n      node.tags = [tag];\n    } else {\n      const idx = node.tags.indexOf(tag);\n      idx === -1 ? node.tags.push(tag) : node.tags.splice(idx, 1);\n    }\n\n    this.props.projectStore.changeStamp++;\n  };\n\n  handleCreateNewTag = () => {\n    const { projectStore } = this.props;\n    let newTag = projectStore.availableTags.add();\n    projectStore.changeStamp++;\n    this.setState({ editingTag: newTag, deletionErrorMessage: null });\n  };\n\n  handleEditTag = targetTag => {\n    this.setState({ editingTag: targetTag, deletionErrorMessage: null });\n  };\n\n  handleEditTagDone = () => {\n    this.setState({ editingTag: null, deletionErrorMessage: null });\n  };\n}\n\nexport { TagPopover };\n","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Button from '../components/Button';\nimport { Chip } from '../components/Chip';\nimport { TagPopover } from './TagPopover';\nimport './Tags.css';\n\n/**\n * This component inject projectStore and not \"watch\"(import)\n *   projectStore.changeStamp by design, cause anchorEl can become unmounted\n */\n@inject('projectStore')\n@observer\nclass Tags extends Component {\n  state = { anchorEl: null };\n\n  render() {\n    let { node } = this.props;\n    let activeTags = null;\n    if (node.tags && node.tags.length) {\n      activeTags = this.renderActiveTags(node.tags);\n    }\n\n    const { anchorEl } = this.state;\n    return (\n      <div className=\"Tags\">\n        {activeTags}\n        {activeTags ? (\n          <IconButton onClick={this.handleActivateTagPopover} size=\"small\">\n            <AddCircleIcon />\n          </IconButton>\n        ) : (\n          <Button onClick={this.handleActivateTagPopover}>Add tags...</Button>\n        )}\n        <TagPopover\n          anchorEl={anchorEl}\n          node={node}\n          handlePopoverClose={this.handlePopoverClose}\n        />\n      </div>\n    );\n  }\n\n  renderActiveTags = tags => {\n    return tags.map(tag => (\n      <Chip\n        key={tag.__id}\n        name={tag.name}\n        color={tag.color}\n        isActive={true}\n        toggle={this.handleActivateTagPopover}\n      />\n    ));\n  };\n\n  handlePopoverClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  handleActivateTagPopover = e => {\n    this.setState({ anchorEl: e.currentTarget });\n  };\n}\n\nexport { Tags };\n","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport './GraphEditPanel.css';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CloseIcon from '@material-ui/icons/Close';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Button from '../components/Button';\nimport { Tags } from '../tags/Tags';\n\n@inject('projectStore')\n@observer\nclass GraphEditPanel extends Component {\n  state = { activeNode: null, linksHided: false };\n\n  static getDerivedStateFromProps(props, prevState) {\n    const { projectStore } = props;\n    const { activeNode } = projectStore;\n    if (activeNode === prevState.activeNode) return prevState;\n    let node = null;\n    let linksHided = false;\n    if (activeNode) {\n      node = projectStore.graphData.findNode(activeNode);\n      // TODO: extern to configuration\n      linksHided = Object.keys(node.__links).length > 5;\n    }\n    return { activeNode, linksHided };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.activeNode !== this.props.activeNode) {\n      this.focusNodenameInput();\n    }\n  }\n\n  render() {\n    const { projectStore } = this.props;\n    // changeStamp here for observe\n    // eslint-disable-next-line no-unused-vars\n    const { activeNode, changeStamp } = projectStore;\n    let content;\n    if (!activeNode) {\n      content = (\n        <>\n          Click on node to edit\n          <br />\n          or\n          <br />\n          <Button onClick={this.createNewNode}>create new node</Button>\n        </>\n      );\n    } else {\n      const node = projectStore.graphData.findNode(activeNode);\n      content = (\n        <>\n          <div className=\"CloseEditPanelButton\">\n            <IconButton onClick={this.handleCloseEditPanel} size=\"small\">\n              <CloseIcon />\n            </IconButton>\n          </div>\n          {this.renderActiveNodeInfo(node)}\n          <br />\n          <Tags node={node} />\n          <br />\n          {this.renderLinks(node)}\n          {this.renderDeleteNodeButton(node)}\n          {this.renderNewLinkComponent(node)}\n          {this.renderNewChildButton(node)}\n        </>\n      );\n    }\n    return (\n      <div key=\"graphEditPanel\" className=\"graphEditPanel\">\n        {content}\n      </div>\n    );\n  }\n\n  focusNodenameInput = () => {\n    if (this.nodeNameRef) {\n      setTimeout(() => {\n        this.nodeNameRef.focus();\n      }, 100);\n    }\n  };\n\n  renderActiveNodeInfo = node => {\n    const descriptionContent = node.description ? node.description : '';\n    return (\n      <>\n        <TextField\n          label=\"Node Name\"\n          fullWidth\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          value={node.name}\n          onChange={e => this.handleChangeNodeName(e, node)}\n          inputRef={ref => {\n            this.nodeNameRef = ref;\n          }}\n        />\n        <br />\n        <TextField\n          label=\"Description\"\n          fullWidth\n          multiline\n          variant=\"outlined\"\n          margin=\"normal\"\n          value={descriptionContent}\n          onChange={e => this.handleChangeDescription(e, node)}\n        />\n        <br />\n        {'Node ID: '}\n        {node.__id}\n        <br />\n      </>\n    );\n  };\n\n  handleCloseEditPanel = () => {\n    const { projectStore } = this.props;\n    projectStore.activeNode = null;\n  };\n\n  handleChangeNodeName = (e, targetNode) => {\n    targetNode.name = e.target.value;\n    this.props.projectStore.changeStamp++;\n  };\n\n  handleChangeDescription = (e, targetNode) => {\n    targetNode.description = e.target.value;\n    this.props.projectStore.changeStamp++;\n  };\n\n  renderLinks = node => {\n    const {\n      projectStore: { graphData }\n    } = this.props;\n    if (this.state.linksHided) {\n      return <Button onClick={this.showLinks}>Show links ...</Button>;\n    }\n    let items = [];\n    for (let linkId in node.__links) {\n      const link = node.__links[linkId];\n      const sourceNode = graphData.findNode(link.sourceId);\n      const targetNode = graphData.findNode(link.targetId);\n      // TODO: draw arrow instead of source / target text\n      items.push(\n        <ListItem key={`item-${linkId}`} button>\n          <ListItemText>\n            <b>source: </b>\n            {sourceNode.__id}: {sourceNode.name}, <b>target: </b>\n            {targetNode.__id}: {targetNode.name}\n          </ListItemText>\n          <ListItemSecondaryAction>\n            <IconButton onClick={() => this.handleDeleteLink(link)}>\n              <DeleteIcon fontSize=\"small\" />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n      );\n    }\n\n    return (\n      <>\n        <span>Links:</span>\n        <List className=\"links-list\" subheader={<li />} dense>\n          {items}\n        </List>\n      </>\n    );\n  };\n\n  showLinks = () => {\n    this.setState({ linksHided: false });\n  };\n\n  renderDeleteNodeButton = node => {\n    if (Object.keys(node.__links).length > 0) return null;\n\n    return (\n      <Button onClick={() => this.handleDeleteNode(node)}>\n        Delete this node\n      </Button>\n    );\n  };\n\n  renderNewLinkComponent = () => {\n    const { projectStore } = this.props;\n    if (!projectStore.targetLinkChoiceInProgress) {\n      return (\n        <div>\n          <Button onClick={this.handleNewLinkTargetSelection}>\n            add new link...\n          </Button>\n          <br />\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {'Click on target node to create new link ... '}\n        <Button\n          onClick={this.handleAbortNewLinkCreation}\n          variant=\"outlined\"\n          color=\"secondary\"\n        >\n          cancel\n        </Button>\n      </div>\n    );\n  };\n\n  handleAbortNewLinkCreation = () => {\n    const { projectStore } = this.props;\n    projectStore.targetLinkChoiceInProgress = false;\n  };\n\n  renderNewChildButton = node => {\n    return (\n      <div key=\"newChild\">\n        <Button onClick={() => this.handleNewChildCreation(node.__id)}>\n          add new child...\n        </Button>\n        <br />\n      </div>\n    );\n  };\n\n  handleDeleteNode = node => {\n    const { projectStore } = this.props;\n    projectStore.activeNode = null;\n    projectStore.graphData.deleteNode(node);\n    projectStore.changeStamp++;\n  };\n\n  handleDeleteLink = link => {\n    const { projectStore } = this.props;\n    projectStore.graphData.deleteLink(link);\n    projectStore.changeStamp++;\n  };\n\n  createNewNode = () => {\n    const { projectStore } = this.props;\n    const { graphData } = projectStore;\n    const newNode = graphData.addNode('new node');\n    projectStore.activeNode = newNode.__id;\n    projectStore.changeStamp++;\n  };\n\n  handleNewChildCreation = currentNodeId => {\n    const { projectStore } = this.props;\n    const { graphData } = projectStore;\n    const newNode = graphData.addNode('new child node');\n    graphData.addLink(newNode.__id, currentNodeId, 'CHILD');\n    projectStore.activeNode = newNode.__id;\n    projectStore.changeStamp++;\n  };\n\n  handleNewLinkTargetSelection = () => {\n    const { projectStore } = this.props;\n    projectStore.targetLinkChoiceInProgress = true;\n  };\n}\n\nexport { GraphEditPanel };\n","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport './Save.css';\nimport Button from '../components/Button';\n\n@inject('projectStore')\n@observer\nclass Save extends Component {\n  componentDidMount = () => {\n    window.addEventListener('beforeunload', this.handleLeavePage);\n  };\n\n  componentWillUnmount = () => {\n    window.removeEventListener('beforeunload', this.handleLeavePage);\n  };\n\n  render() {\n    const { changeStamp, savedChangeStamp } = this.props.projectStore;\n    let content;\n    if (changeStamp > savedChangeStamp) {\n      content = (\n        <>\n          <span className=\"redPoint\">Has unsaved changes</span>\n          <Button onClick={this.handleSave}>Save</Button>\n        </>\n      );\n    } else {\n      content = <span className=\"greenPoint\">Graph saved</span>;\n    }\n\n    return <div className=\"Save\">{content}</div>;\n  }\n\n  handleSave = () => {\n    this.props.projectStore.saveProject();\n  };\n\n  handleLeavePage = event => {\n    const { changeStamp, savedChangeStamp } = this.props.projectStore;\n    if (process.env.NODE_ENV === 'development') return;\n    if (changeStamp === savedChangeStamp) return;\n\n    // for browsers, that not support standard alert-on-exit message\n    const warningText =\n      'Data not saved, sure you want to leave the application?';\n    event.returnValue = warningText;\n    return warningText;\n  };\n}\n\nexport { Save };\n","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Zoom from '@material-ui/core/Zoom';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport './SavePanel.css';\nimport { Save } from './Save';\n\n@inject('projectStore')\n@observer\nclass SavePanel extends Component {\n  render() {\n    const {\n      projectStore: { isPublic, projectName }\n    } = this.props;\n    return (\n      <div className=\"SavePanel\">\n        <Tooltip\n          title=\"You can change graph publicity in gist interface (gist.github.com)\"\n          placement=\"right\"\n          TransitionComponent={Zoom}\n        >\n          <span className=\"ProjectPublicity\">\n            {isPublic ? 'Public project ' : 'Private project '}\n            <InfoOutlinedIcon />\n          </span>\n        </Tooltip>\n        <br />\n        <TextField\n          placeholder=\"Graph name\"\n          value={projectName}\n          onChange={this.handleChangeProjectName}\n          margin=\"normal\"\n          className=\"GraphNameInput\"\n        />\n        <Save />\n      </div>\n    );\n  }\n\n  handleChangeProjectName = e => {\n    let { projectStore } = this.props;\n    projectStore.projectName = e.target.value;\n    projectStore.changeStamp++;\n  };\n}\n\nexport { SavePanel };\n","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport notie from 'notie';\nimport request from '../request';\nimport { API_URL, GRAPH_STATE_FILENAME } from './constants';\nimport './GistSelection.css';\n\nconst LOCAL_STORAGE_KEY = 'GITHUB_TOKEN';\n\n// cached\nfunction requestToken(cb) {\n  const githubToken = localStorage.getItem(LOCAL_STORAGE_KEY);\n  if (githubToken) {\n    return cb(null, githubToken);\n  }\n\n  notieInput('token with gist access', (err, githubToken) => {\n    if (err) return cb(err);\n\n    localStorage.setItem(LOCAL_STORAGE_KEY, githubToken);\n    return cb(null, githubToken);\n  });\n}\n\nfunction notieInput(fieldName, cb) {\n  notie.input(\n    {\n      text: `Specify github ${fieldName}`\n    },\n    inputResult => {\n      return cb(null, inputResult);\n    },\n    () => {\n      const errMsg = `Need Specify github ${fieldName} to continue =(`;\n      notie.alert({\n        type: 'error',\n        text: errMsg\n      });\n      // TODO: make github token interface reusable:\n      //   if no token provided by user\n      //   or if token is outdated or invalid\n    }\n  );\n}\n\nasync function getSuitableGists(githubToken) {\n  let userGists = await getAllUserGists(githubToken);\n  return userGists.filter(gist => !!gist.files[GRAPH_STATE_FILENAME]);\n}\n\nasync function getAllUserGists(githubToken) {\n  let response = await request(\n    'GET',\n    `${API_URL}gists`,\n    { Authorization: `token ${githubToken}` },\n    null\n  );\n  let userGists;\n  try {\n    userGists = JSON.parse(response);\n  } catch (e) {\n    console.error(`Retrieved json from gist storage failed to parse`);\n    throw e;\n  }\n\n  if (!userGists) throw new Error('Data from response not available');\n\n  return userGists;\n}\n\n@inject('projectStore')\n@observer\nclass GistSelection extends Component {\n  componentDidMount() {\n    const { projectStore } = this.props;\n    requestToken((err, githubToken) => {\n      if (err) throw err;\n\n      projectStore.githubToken = githubToken;\n      getSuitableGists(githubToken).then(gists => {\n        projectStore.gists = gists;\n      });\n    });\n  }\n\n  render() {\n    const { gists } = this.props.projectStore;\n    if (!gists) {\n      return 'gists loading...';\n    }\n\n    let gistElems = gists.map(gist => (\n      <span\n        key={gist.id}\n        className=\"gistDescription yellow\"\n        onClick={() => this.handleSelect(gist.id)}\n      >\n        {gist.description}\n      </span>\n    ));\n    gistElems.push(\n      <span\n        key=\"new\"\n        className=\"gistDescription blue\"\n        onClick={this.handleNewGist}\n      >\n        create new\n      </span>\n    );\n\n    return (\n      <div className=\"gistSelection\">\n        <span>Choose gist with graph:</span>\n        {gistElems}\n      </div>\n    );\n  }\n\n  handleSelect = gistId => {\n    this.props.projectStore.loadProject(gistId);\n  };\n\n  handleNewGist = () => {\n    this.props.projectStore.newProject();\n  };\n}\n\nexport { GistSelection };\n","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\n// import Slider from '@material-ui/lab/esm/Slider';\nimport Slider from '@material-ui/core/Slider';\nimport './SettingsPanel.css';\nimport {\n  GRAPH_FORCE_STRENGTH_MIN,\n  GRAPH_FORCE_STRENGTH_MAX,\n  GRAPH_FORCE_DISTANCE_MIN,\n  GRAPH_FORCE_DISTANCE_MAX\n} from './constants';\n\n@inject('projectStore')\n@observer\nclass SettingsPanel extends Component {\n  render() {\n    const { projectStore } = this.props;\n    return (\n      <div className=\"settingsPanel\">\n        Strength:\n        <Slider\n          defaultValue={projectStore.forceStrength}\n          value={projectStore.forceStrength}\n          min={GRAPH_FORCE_STRENGTH_MIN}\n          max={GRAPH_FORCE_STRENGTH_MAX}\n          onChange={(c, value) => {\n            projectStore.forceStrength = value;\n            projectStore.changeStamp++;\n          }}\n        />\n        Distance:\n        <Slider\n          defaultValue={projectStore.forceDistance}\n          value={projectStore.forceDistance}\n          min={GRAPH_FORCE_DISTANCE_MIN}\n          max={GRAPH_FORCE_DISTANCE_MAX}\n          onChange={(c, value) => {\n            projectStore.forceDistance = value;\n            projectStore.changeStamp++;\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport { SettingsPanel };\n","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport './App.css';\nimport GraphView from './graph/GraphView';\nimport { GraphEditPanel } from './panels/GraphEditPanel';\nimport { SavePanel } from './panels/SavePanel';\nimport { GistSelection } from './gist/gistSelection';\nimport { SettingsPanel } from './SettingsPanel';\nimport { version } from '../package.json';\n\nfunction AppVesion(props: any) {\n  return <div className=\"app-version\">Version: {props.version}</div>;\n}\n\n@inject('projectStore')\n@observer\nclass App extends Component {\n  render() {\n    const {\n      graphData, changeStamp, forceStrength, forceDistance, activeNode, isLoaded\n    } = (this.props as any).projectStore;\n    let content;\n    if (!graphData) {\n      content = (\n        <>\n          <GistSelection />\n          <AppVesion version={version} />\n        </>\n      );\n    } else {\n      content = (\n        <>\n          <GraphView\n            changeStamp={changeStamp}\n            forceStrength={forceStrength}\n            forceDistance={forceDistance}\n          />\n          <GraphEditPanel activeNode={activeNode} />\n          <SavePanel />\n          <SettingsPanel />\n          <AppVesion version={version}/>\n        </>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        {content}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { toJS } from 'mobx';\nimport { Provider } from 'mobx-react';\nimport { init as initSentry } from '@sentry/browser';\nimport { version } from '../package.json';\nimport { ProjectStore } from './ProjectStore';\nimport './index.css';\nimport '@material-ui/core';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst projectStore = new ProjectStore();\nconst stores = {\n  projectStore,\n};\n\n// For easier debugging\nif (process.env.NODE_ENV === 'development') {\n  (window as any)._____APP_STATE_____ = stores;\n  (window as any).toJS = toJS;\n}\n\nif (process.env.NODE_ENV === 'production') {\n  initSentry({\n    beforeSend: function (event) {\n      // TODO: message ok for sending state ?\n      event.message = JSON.stringify(projectStore.getAfterErrorSnapshot());\n      return event;\n    },\n    release: version,\n    dsn: 'https://504d6ec417994bf7b7f559ffcdc5afab@sentry.io/1527022'\n  });\n}\n\nReactDOM.render(\n  <Provider { ...stores }>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}